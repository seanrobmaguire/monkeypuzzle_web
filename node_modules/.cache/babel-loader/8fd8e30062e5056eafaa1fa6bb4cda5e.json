{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout'; //import Components\n\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { update_resource, remove_resources_from_nodes, loadSADFace, saveSADFace, delete_resource, get_sd, import_json, add_resource, export_cytoscape, add_resource_metadata } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: [],\n      last_number: 0,\n      tab_id: \"\",\n      sd: get_sd(),\n      showResourcePane: true,\n      test: {},\n      current_tab: 0,\n      cy_data: null,\n      selected: '',\n      jpg: '',\n      png: '',\n      fileName: '',\n      json: '',\n      current_sadface_doc: '',\n      cy: null,\n      remove_all_tabs: false,\n      resourceType: 'text',\n      update_local_storage: false,\n      focused: null\n    };\n    this.test = this.test.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.download = this.download.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.download = this.download.bind(this);\n    this.fileManager = this.fileManager.bind(this);\n    this.setCyData = this.setCyData.bind(this); //ResourcePane Functions\n\n    this.add_tab = this.add_tab.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.change_title = this.change_title.bind(this);\n    this.change_content = this.change_content.bind(this);\n    this.set_text_resource_content = this.set_text_resource_content.bind(this);\n    this.add_tab_to_tab_array = this.add_tab_to_tab_array.bind(this);\n    this.setType = this.setType.bind(this);\n    this.load_tab = this.load_tab.bind(this);\n    this.updateTab = this.updateTab.bind(this);\n    this.getTab = this.getTab.bind(this);\n    this.set_focus = this.set_focus.bind(this); //Menu\n\n    this.handleSetPng = this.handleSetPng.bind(this);\n    this.handleSetJpg = this.handleSetJpg.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.setFileName = this.setFileName.bind(this);\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  openAddBoardModal() {\n    this.setState({\n      boardAddModalShow: true\n    }, function () {\n      console.log(this.state.boardAddModalShow);\n    });\n  }\n\n  set_focus(element) {\n    this.setState({\n      focused: element\n    }, () => console.log(this.state.focused.id, 'focused set')); //.id;\n  }\n\n  add_tab(load_id = null) {\n    let newTab = {};\n\n    if (load_id == null) {\n      console.log('load tab null');\n      newTab = add_resource(' ');\n      console.log(newTab, 'newTab');\n      add_resource_metadata(newTab.id, 'title', '');\n      newTab.metadata = {\n        title: ''\n      };\n      console.log(newTab, 'newTab with metadata');\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n      newTab.type = this.state.resourceType;\n      console.log(newTab, 'newtab');\n    } else {\n      newTab = load_id;\n    }\n\n    console.log(newTab, 'load tab not null');\n    this.add_tab_to_tab_array(newTab);\n  }\n\n  add_tab_to_tab_array(newTab) {\n    let tab_number = '';\n    this.setState({\n      last_number: this.state.last_number + 1\n    }, function () {\n      tab_number = this.state.last_number;\n      newTab.tab_number = tab_number;\n      this.setState(state => {\n        const tabs = this.state.tabs.concat(newTab);\n        return {\n          tabs\n        };\n      }, function () {\n        console.log(this.state.tabs, 'header');\n        this.setActiveTab(newTab.id);\n      });\n    });\n  }\n\n  setType(type) {\n    this.setState({\n      resourceType: type\n    }, () => console.log(this.state.resourceType, 'type set'));\n  }\n\n  test(index) {\n    this.setState({\n      current_tab: index\n    });\n    console.log(this.current_tab);\n  }\n\n  setActiveTab(value) {\n    this.setState({\n      current_tab: value\n    }, function () {\n      console.log(this.state.current_tab, 'active');\n    });\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.sate.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  } //Menu function\n\n\n  handleSetPng(png) {\n    this.setState({\n      png: png\n    }, () => console.log('PNG set'));\n  }\n\n  handleSetJpg(jpg) {\n    this.setState({\n      jpg: jpg\n    }, () => console.log('JPG set'));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    delete_resource(this.state.current_tab);\n    remove_resources_from_nodes(this.state.current_tab);\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n    if (this.state.tabs.length >= 1 && i != -1) {\n      this.setState(state => {\n        const tabs = state.tabs.filter((item, j) => i !== j);\n        return {\n          tabs\n        };\n      }, () => {\n        console.log(this.state.tabs.length, 'current tabs');\n        let newCurrent = this.state.tabs[this.state.tabs.length - 1].id;\n        console.log(newCurrent, 'newCurrent');\n        console.log(this.state.tabs, 'tabs');\n        this.setState({\n          current_tab: newCurrent\n        }, () => console.log(this.state.current_tab, 'current tabs'));\n      });\n    }\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      let tab_to_download = this.getTab(this.state.current_tab);\n      console.log(tab_to_download); // if it's a txt file\n\n      if (\"txt\" == filetype) {\n        if (tab_to_download.metadata.title !== '') {\n          var filename = tab_to_download.metadata.title + \".txt\";\n        } else {\n          var filename = \"tab\" + this.state.current_tab + \"_text.txt\";\n        }\n\n        var text = tab_to_download.content;\n        this.download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = this.state.fileName;\n        console.log(filename, 'filename');\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + this.state.current_tab).files;\n        var file = files[0];\n        var filename = file.name;\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result; //  document.getElementById(this.state.current_tab).innerText = content;\n\n          update_resource(tab_id, content, filename);\n          this.updateTab(filename, content);\n        }.bind(this);\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = loadSADFace(file);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          this.setState({\n            remove_all_tabs: !this.state.remove_all_tabs\n          }, () => console.log(this.state.remove_all_tabs));\n          this.loadTabs(json.resources);\n        }.bind(this);\n      }\n    }\n  }\n\n  updateTab(title, content) {\n    const tabs = this.state.tabs.slice();\n    tabs.forEach(tab => {\n      if (tab.id === this.state.current_tab) {\n        if (title != '') {\n          tab.metadata.title = title;\n        }\n\n        if (content != '') {\n          tab.content = content;\n        }\n      }\n    });\n    this.setState({\n      tabs\n    });\n  }\n\n  getTab(id) {\n    let getTab = this.state.tabs.find(el => el.id == id);\n    return getTab;\n  }\n\n  loadJSON(json_value) {\n    let importJSON = import_json(json_value);\n    console.log(importJSON, 'importjson');\n    this.setState({\n      json: importJSON\n    }, () => console.log(this.state.json, 'jsonsssss'), () => console.log(this.state.json, 'after'));\n  }\n  /*\n  \n  \n         function(){\n              if (this.state.json.resources.length > 0){\n                   this.loadTabs(this.state.json.resources)\n               }\n         },\n              console.log(this.state.json, 'json state'),\n              this.setCyData(export_cytoscape(this.state.json)),\n    console.log('loadtabs')\n  \n          );\n     // localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n  \n    //   this.setState({current_sadface_doc: JSON.stringify(get_sd())}, () =>\n    //      console.log(this.state.current_sadface_doc, 'current_sadface_doc set'));\n  \n  \n  \n  \n  /*\n      \n      \n     \n      //load any sources in the stored diagram state\n      window.onload = function () {\n          this.loadTabs(this.state.json.resources);\n      };\n      this.setCyData(export_cytoscape(this.state.json));\n      \n      if(this.state.cy !== null)\n      {\n          this.state.cy.elements().remove();\n          this.state.cy.json({elements: JSON.parse(this.state.cy_data)});\n          //redraw_visualisation();\n      }*/\n\n\n  setCyData(val) {\n    this.setState({\n      cy_data: val\n    }, () => console.log(this.state.cy_data, 'cy_data set'));\n  }\n\n  download(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \" + filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n    outfile.click();\n    document.body.removeChild(outfile);\n  }\n\n  get_resource(resource_id) {\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n     Returns: An resource dict\n    */\n    if (resource_id) {\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n      return resource;\n    }\n  }\n\n  isTab_id(tab) {\n    return tab.tab_id;\n  }\n\n  loadTabs(tabs) {\n    console.log(tabs, 'tabs');\n    tabs.map(tab => this.load_tab(tab));\n  }\n\n  load_tab(resource) {\n    if (resource != null) {\n      var tab_id = resource.id;\n      this.add_tab(resource); //  this.set_text_resource_title(tab_id, resource.metadata.title);\n      //  this.set_text_resource_content(tab_id, resource.content);\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      console.log(\"update resource\");\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.title = title;\n        }\n        /*  this.state.sd.resources.forEach((res) => {\n              if(res.id === resource_id) {\n                  res = resource;\n              }\n          });*/\n\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n\n      this.setState({\n        tabs\n      }, () => {\n        console.log(\"update tabs\");\n      });\n    }\n  } //Resource Pane Functions\n\n\n  change_title(tab_id, val) {\n    this.set_text_resource_title(tab_id, val);\n    this.updateTab(val, '');\n  }\n\n  set_text_resource_title(tab_id, title) {\n    console.log(\"set text resource title\" + tab_id + title);\n    this.update_resource(tab_id, null, title);\n    this.setState({\n      update_local_storage: !this.state.update_local_storage\n    });\n  }\n\n  change_content(tab_id, val) {\n    this.set_text_resource_content(tab_id, val);\n    this.updateTab('', val);\n    console.log(get_sd(), 'get sd');\n    console.log(this.state.tabs, 'tabs');\n  }\n\n  set_text_resource_content(tab_id, text) {\n    this.update_resource(tab_id, text, null);\n    this.setState({\n      update_local_storage: !this.state.update_local_storage\n    });\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  setFileName(file_name) {\n    console.log('filename APP');\n    this.setState({\n      fileName: file_name\n    }, () => console.log(this.state.fileName, 'filename app'));\n  }\n\n  load_demo_argument() {\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc))); //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593\n      },\n      __self: this\n    }, React.createElement(Menu //functions\n    , {\n      toggleResourcePane: this.toggleResourcePane,\n      load_demo_argument: this.load_demo_argument,\n      setFileName: this.setFileName,\n      fileManager: this.fileManager //state\n      ,\n      png: this.state.png,\n      jpg: this.state.jpg,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      setType: this.setType,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      current_tab: this.state.current_tab,\n      setActiveTab: this.setActiveTab,\n      fileManager: this.fileManager,\n      change_title: this.change_title,\n      change_content: this.change_content,\n      loadTabs: this.loadTabs,\n      cy_data: this.state.cy_data,\n      setCyData: this.setCyData,\n      loadJSON: this.loadJSON,\n      handleSetPng: this.handleSetPng,\n      handleSetJpg: this.handleSetJpg,\n      remove_all_tabs: this.state.remove_all_tabs,\n      update_local_storage: this.state.update_local_storage,\n      set_focus: this.set_focus,\n      focused: this.state.focused,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","MainUI","Menu","update_resource","remove_resources_from_nodes","loadSADFace","saveSADFace","delete_resource","get_sd","import_json","add_resource","export_cytoscape","add_resource_metadata","App","constructor","props","state","tabs","last_number","tab_id","sd","showResourcePane","test","current_tab","cy_data","selected","jpg","png","fileName","json","current_sadface_doc","cy","remove_all_tabs","resourceType","update_local_storage","focused","bind","toggleButton","add_to_tabs_arr","download","loadJSON","loadTabs","get_resource","toggleResourcePane","setActiveTab","fileManager","setCyData","add_tab","remove_tab","change_title","change_content","set_text_resource_content","add_tab_to_tab_array","setType","load_tab","updateTab","getTab","set_focus","handleSetPng","handleSetJpg","load_demo_argument","setFileName","setState","concat","console","log","openAddBoardModal","boardAddModalShow","element","id","load_id","newTab","metadata","title","localStorage","setItem","JSON","stringify","type","tab_number","index","value","resource_id","key","sate","resources","forEach","res","componentDidMount","slideout","document","getElementById","i","length","filter","item","j","newCurrent","toggle","operation","filetype","tab_to_download","filename","text","content","files","file","name","reader","FileReader","onload","e","result","readAsText","parse","slice","tab","find","el","json_value","importJSON","val","outfile","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","resource","findIndex","isTab_id","map","undefined","set_text_resource_title","clear_local_storage","clear","window","location","reload","file_name","demo_sadface_doc","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n//import Components\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\n\n\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {update_resource,remove_resources_from_nodes, loadSADFace,saveSADFace, delete_resource, get_sd,import_json, add_resource, export_cytoscape,add_resource_metadata} from './lib/Sadface'; \n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 0,\n\t\t\ttab_id:\"\",\n            sd: get_sd(),\n            showResourcePane: true,\n            test:{},\n            current_tab: 0,\n            cy_data: null,\n            selected: '',\n            jpg:'',\n            png: '',\n            fileName:'',\n            json: '',\n            current_sadface_doc:'',\n            cy:null,\n            remove_all_tabs: false,\n            resourceType: 'text',\n            update_local_storage: false,\n            focused: null,\n        };\n\n\n        this.test = this.test.bind(this);\n        this.toggleButton = this.toggleButton.bind(this);\n        this.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.download = this.download.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.download = this.download.bind(this);\n        this.fileManager = this.fileManager.bind(this);\n        this.setCyData = this.setCyData.bind(this);\n\n        //ResourcePane Functions\n        this.add_tab = this.add_tab.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.change_title = this.change_title.bind(this);\n        this.change_content =this.change_content.bind(this);\n        this.set_text_resource_content = this.set_text_resource_content.bind(this);\n        this.add_tab_to_tab_array = this.add_tab_to_tab_array.bind(this);\n        this.setType = this.setType.bind(this);\n        this.load_tab = this.load_tab.bind(this);\n        this.updateTab = this.updateTab.bind(this);\n        this.getTab = this.getTab.bind(this);\n        this.set_focus =this.set_focus.bind(this);\n        //Menu\n        this.handleSetPng = this.handleSetPng.bind(this);\n        this.handleSetJpg = this.handleSetJpg.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n\n\n\n\n\n\n\n\n\n    add_to_tabs_arr(tab_id){\n       this.setState(state => {\n          const tabs = state.tabs.concat(tab_id);\n          return {\n             tabs,\n         }}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n\n   }\n   openAddBoardModal(){\n    this.setState({ boardAddModalShow: true }, function () {\n       console.log(this.state.boardAddModalShow);\n   });\n\n}\n\nset_focus(element) {\n    this.setState({focused:  element},() =>\n            console.log(this.state.focused.id, 'focused set'),\n\n\n    );//.id;\n}\n\n\n\n\n\n\nadd_tab(load_id=null){\n    let newTab = {}\n    if (load_id == null) {\n        console.log('load tab null')\n        newTab = add_resource(' ');\n        console.log(newTab, 'newTab');\n        add_resource_metadata(newTab.id, 'title', '');\n\n        newTab.metadata = {title: ''}\n        console.log(newTab, 'newTab with metadata')\n\n\n        localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n        newTab.type = this.state.resourceType;\n        console.log(newTab, 'newtab');\n    }else{ newTab = load_id; }\n    console.log(newTab, 'load tab not null')\n   this.add_tab_to_tab_array(newTab);\n\n    \n        \n    }\n    \n    add_tab_to_tab_array(newTab){\n\n        let tab_number = '';\n        this.setState({ last_number: this.state.last_number + 1}, function(){\n            tab_number = this.state.last_number;\n            newTab.tab_number = tab_number;\n\n            this.setState(state => {\n                const tabs = this.state.tabs.concat(newTab);\n                return {\n                    tabs,\n                }}, function (){\n                    console.log(this.state.tabs, 'header');\n                    this.setActiveTab(newTab.id);\n                }\n                )\n        });\n    }\nsetType(type){\n    this.setState({resourceType: type}, () =>\n        console.log(this.state.resourceType, 'type set'));\n}\n\n\n\n\n    test(index) {\n        this.setState({\n            current_tab: index\n        });\n        console.log(this.current_tab);\n    }\n\n    setActiveTab(value){\n        this.setState({\n            current_tab: value\n        }, function (){\n            console.log(this.state.current_tab, 'active');\n        });\n\n\n\n    }\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.sate.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\n\n\n//Menu function\nhandleSetPng(png){\n    this.setState({png: png}, () =>\n        console.log('PNG set'));\n}\n\nhandleSetJpg(jpg){\n    this.setState({jpg: jpg}, () =>\n        console.log('JPG set'));\n}\n\n\n\n\n\ncomponentDidMount() {\n this.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n});\n}\n\nremove_tab(i){\n    delete_resource(this.state.current_tab);\n    remove_resources_from_nodes(this.state.current_tab);\n\n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    \n    if (this.state.tabs.length >= 1 && i != -1){\n\n        this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        return {\n            tabs,\n        };\n    }, () => {    \n        console.log(this.state.tabs.length, 'current tabs');\n        let newCurrent = this.state.tabs[this.state.tabs.length-1].id\n        console.log(newCurrent, 'newCurrent');\n        console.log(this.state.tabs, 'tabs');\n        this.setState({current_tab: newCurrent}, () =>\n            console.log(this.state.current_tab, 'current tabs')\n            ); \n    \n    });\n\n          \n    }\n    \n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n    this.slideout.toggle();\n}\n\n\n\n\n\nfileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n    if (\"save\" == operation)    {\n        let tab_to_download = this.getTab(this.state.current_tab);\n        console.log(tab_to_download);\n        // if it's a txt file\n        if (\"txt\" == filetype) {   \n\n            if (tab_to_download.metadata.title !== '') {\n                var filename = tab_to_download.metadata.title+\".txt\";\n            } else {\n                var filename = \"tab\"+this.state.current_tab+\"_text.txt\";\n            }\n            var text = tab_to_download.content;\n            this.download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n           var filename = this.state.fileName;\n           console.log(filename, 'filename');\n            if(filename.length == 0){ filename = \"default\"}\n               saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            \n\n            var files = document.getElementById(\"load\"+this.state.current_tab).files;\n            var file = files[0];\n            var filename = file.name;\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n              //  document.getElementById(this.state.current_tab).innerText = content;\n                update_resource(tab_id, content, filename);\n                this.updateTab(filename, content);\n            }.bind(this);\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = loadSADFace(file);\n            reader.onload = function(e) {\n                var result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                this.setState({remove_all_tabs: !this.state.remove_all_tabs}, () =>\n                    console.log(this.state.remove_all_tabs));\n                this.loadTabs(json.resources);\n            }.bind(this);\n        }\n    }\n}\n\nupdateTab(title, content){\n    const tabs = this.state.tabs.slice();\n\n    tabs.forEach((tab) =>{\n        if(tab.id === this.state.current_tab) {\n            if(title != ''){\n                tab.metadata.title = title;\n            }\n            if(content != ''){\n            tab.content = content;\n        }\n        }\n    });\n    this.setState({tabs});\n\n}\n\ngetTab(id){\n    let getTab = this.state.tabs.find(el => el.id == id);\n    return getTab;\n\n}\n\n loadJSON(json_value) {\n    let importJSON = import_json(json_value);\n    console.log(importJSON, 'importjson');\n\n\n    this.setState({json: importJSON}, () => \n        console.log(this.state.json, 'jsonsssss'), () =>\n        console.log(this.state.json, 'after'),\n        );\n        \n        \n}\n       \n\n/*\n\n\n       function(){\n            if (this.state.json.resources.length > 0){\n                 this.loadTabs(this.state.json.resources)\n             }\n       },\n            console.log(this.state.json, 'json state'),\n            this.setCyData(export_cytoscape(this.state.json)),\n  console.log('loadtabs')\n\n        );\n   // localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\n  //   this.setState({current_sadface_doc: JSON.stringify(get_sd())}, () =>\n  //      console.log(this.state.current_sadface_doc, 'current_sadface_doc set'));\n\n\n\n\n/*\n    \n    \n   \n    //load any sources in the stored diagram state\n    window.onload = function () {\n        this.loadTabs(this.state.json.resources);\n    };\n    this.setCyData(export_cytoscape(this.state.json));\n    \n    if(this.state.cy !== null)\n    {\n        this.state.cy.elements().remove();\n        this.state.cy.json({elements: JSON.parse(this.state.cy_data)});\n        //redraw_visualisation();\n    }*/\n\n\nsetCyData(val){\n    this.setState({cy_data: val},() =>\n        console.log(this.state.cy_data, 'cy_data set'));\n}\n\n\ndownload(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \"+filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n\n    outfile.click();\n\n    document.body.removeChild(outfile);\n}\n\n\nget_resource(resource_id){\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n\n    Returns: An resource dict\n    */\n    if(resource_id){\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n        return resource;\n    }\n}\n\nisTab_id(tab){\n    return tab.tab_id\n}\n\n\n\n\n\n\n\nloadTabs(tabs) {\n    console.log(tabs, 'tabs');\n   tabs.map((tab) =>\n     this.load_tab(tab),\n     );\n }\n\n\nload_tab(resource) {\n    if (resource != null) {\n        var tab_id = resource.id;\n        this.add_tab(resource);\n      //  this.set_text_resource_title(tab_id, resource.metadata.title);\n      //  this.set_text_resource_content(tab_id, resource.content);\n    }\n}\n\nupdate_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    \n\n    if (resource_id && (content || title)) {\n        console.log(\"update resource\");\n\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.title = title;\n            }\n          /*  this.state.sd.resources.forEach((res) => {\n                if(res.id === resource_id) {\n                    res = resource;\n                }\n            });*/\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n        this.setState({tabs}, () =>{\n            console.log(\"update tabs\");\n        });\n    }\n}\n\n//Resource Pane Functions\nchange_title(tab_id, val) {\n    this.set_text_resource_title(tab_id, val);\n    this.updateTab(val, '');\n}\n\nset_text_resource_title(tab_id, title){\n    console.log(\"set text resource title\" +tab_id + title)\n    this.update_resource(tab_id, null, title);\n    this.setState({update_local_storage: !this.state.update_local_storage});\n    }\n\nchange_content(tab_id, val){\n    this.set_text_resource_content(tab_id, val);\n        this.updateTab('', val);\n        console.log(get_sd(), 'get sd');\n        console.log(this.state.tabs, 'tabs');\n\n}\n\nset_text_resource_content(tab_id, text){\n    this.update_resource(tab_id, text, null);\n    this.setState({update_local_storage: !this.state.update_local_storage});\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\n\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\n setFileName(file_name){\n    console.log('filename APP');\n    this.setState({fileName: file_name}, () => \n      console.log(this.state.fileName, 'filename app'));\n  }\n\n\n\n\n\n\n\nload_demo_argument(){\n   var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc)))\n    //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n}\n\n\nrender(){\n\n    return (\n    \t<div>\n\n\n\n    \t<Menu \n        //functions\n        toggleResourcePane={this.toggleResourcePane}\n        load_demo_argument={this.load_demo_argument}\n        setFileName={this.setFileName}\n        fileManager={this.fileManager}\n        //state\n        png={this.state.png}\n        jpg={this.state.jpg}\n        fileName = {this.state.fileName}\n        />\n\n        <MainUI\n        toggleSlideIn={() => this.toggleButton()}\n        addTab = {() => this.add_tab()}\n        tabs = {this.state.tabs}\n        setType={this.setType}\n        remove_tab={this.remove_tab}\n        fileManager={this.fileManager}\n        showResourcePane={this.state.showResourcePane}\n        current_tab={this.state.current_tab}\n        setActiveTab={this.setActiveTab}\n        fileManager={this.fileManager}\n        change_title={this.change_title}\n        change_content={this.change_content}\n        loadTabs= {this.loadTabs}\n        cy_data= {this.state.cy_data}\n        setCyData = {this.setCyData}\n        loadJSON = {this.loadJSON}\n\n        handleSetPng={this.handleSetPng}\n        handleSetJpg={this.handleSetJpg}\n\n        remove_all_tabs={this.state.remove_all_tabs}\n\n        update_local_storage={this.state.update_local_storage}\n        set_focus={this.set_focus}\n        focused ={this.state.focused} \n\n\n\n\n\n        />\n\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}