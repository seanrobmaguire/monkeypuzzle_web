{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout'; //import Components\n//import MainUI from './Components/MainUI';\n\nimport Menu from './Components/Menu/Menu';\nimport MenuTrigger from './Components/Menu/MenuTrigger';\nimport ResourcePane from './Components/ResourcePane/ResourcePane';\nimport Cytoscape from './Components/VisualisationPane/Cytoscape';\nimport VisualisationPane from './Components/VisualisationPane/VisualisationPane';\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { update, add_resource, add_resource_metadata, download, update_resource, remove_resources_from_nodes, loadSADFace, saveSADFace, delete_resource, get_sd, import_json, export_cytoscape } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //resourcePane\n      showResourcePane: true,\n      newResource: null,\n      resourcesFromJson: null,\n      selectedText: '',\n      sd: get_sd(),\n      //  current_tab: 0,\n      //Menu\n      cyData: null,\n      selected: '',\n      jpg: '',\n      png: '',\n      fileName: '',\n      json: '',\n      current_sadface_doc: null,\n      cy: null,\n      update_local_storage: false,\n      focused: null,\n      newAtomFromText: null\n    };\n    this.toggleButton = this.toggleButton.bind(this); //        this.loadJSON = this.loadJSON.bind(this);\n    // this.setActiveTab = this.setActiveTab.bind(this);\n\n    this.fileManager = this.fileManager.bind(this);\n    this.setCyData = this.setCyData.bind(this); //ResourcePane Functions\n\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.setSelectedText = this.setSelectedText.bind(this); //        this.setFocus = this.setFocus.bind(this);\n\n    this.addAtomFromText = this.addAtomFromText.bind(this); //Menu\n\n    this.handleSetPng = this.handleSetPng.bind(this);\n    this.handleSetJpg = this.handleSetJpg.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.setFileName = this.setFileName.bind(this); //Cytoscape\n\n    this.clearSelection = this.clearSelection.bind(this);\n    this.setCurrentSadFaceDoc = this.setCurrentSadFaceDoc.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.set_focus = this.set_focus.bind(this);\n  }\n\n  updateLocalStorage() {\n    // var undo_item = JSON.parse(current_sadface_doc);\n    // undo_stack.push(undo_item);\n    // redo_stack = [];\n    // cm.showMenuItem(\"undo\");\n    // cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    update();\n  }\n\n  setCurrentSadFaceDoc(value) {\n    this.setState({\n      current_sadface_doc: value\n    }, () => console.log(\"current sad face doc updated\"));\n  }\n\n  addAtomFromText() {\n    if (this.state.selectedText !== null) {\n      this.setState({\n        newAtomFromText: !this.state.newAtomFromText\n      }, () => console.log(this.state.newAtomFromText, \"set addAtomFromText\")); //clear selectedText\n    }\n  } //Menu function\n\n\n  handleSetPng(png) {\n    this.setState({\n      png: png\n    }, () => console.log('PNG set'));\n  }\n\n  handleSetJpg(jpg) {\n    this.setState({\n      jpg: jpg\n    }, () => console.log('JPG set'));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  fileManager(operation, filetype, tab, files) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    if (\"save\" === operation) {\n      let filename = ''; // if it's a txt file\n\n      if (\"txt\" === filetype) {\n        if (tab.metadata.title !== '') {\n          filename = tab.metadata.title + \".txt\";\n        } else {\n          filename = \"tab \" + tab.id + \"_text.txt\";\n        }\n\n        let text = tab.content;\n        download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" === filetype) {\n        let filename = this.state.fileName;\n        console.log(filename, 'filename');\n\n        if (filename.length === 0) {\n          filename = \"default\";\n        }\n\n        saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" === operation) {\n      // if it's a txt file\n      if (\"txt\" === filetype) {\n        let file = files[0];\n        let filename = file.name;\n        let reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          update_resource(tab.id, content, filename);\n          let newResource = {};\n          newResource.tab = tab;\n          newResource.filename = filename;\n          newResource.content = content;\n          this.setState({\n            newResource: newResource\n          }, () => console.log(this.state.newResource, \"newResource\")); //this.updateTab(filename, content);\n        }.bind(this);\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" === filetype) {\n        console.log('IMPORT JSON');\n        let files = document.getElementById(\"loadJSON\").files;\n        let file = files[0];\n        let reader = loadSADFace(file);\n\n        if (reader !== null) {\n          reader.onload = function (e) {\n            let result = reader.result;\n            localStorage.setItem(\"state\", result);\n            this.loadJSON(result);\n          }.bind(this);\n        }\n      }\n    }\n  }\n\n  loadJSON(json_value) {\n    console.log(\"loadJson\");\n\n    if (json_value != null) {\n      let importJSON = import_json(json_value);\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n      this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n      this.setState({\n        resourcesFromJson: importJSON.resources\n      }, () => console.log(\"resoirces from json\"));\n      this.setState({\n        json: importJSON\n      }, () => {\n        console.log('json set');\n        this.setCyData(export_cytoscape(this.state.json));\n      });\n    }\n\n    ;\n  }\n\n  setSelectedText(text) {\n    if (text !== null && text.length > 0) {\n      this.setState(state => ({\n        selectedText: text\n      }), () => console.log(this.state.selectedText, \"setSelectedText\"));\n    } else {\n      this.clearSelection();\n    }\n  }\n\n  setFocus() {\n    this.setState({\n      focus: !this.state.focus\n    }, () => console.log(this.state.focus, 'focus set'));\n  }\n\n  clearSelection() {\n    this.setState(() => ({\n      selectedText: null\n    }), () => console.log(this.state.selectedText, \"clear selection\"));\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  setFileName(file_name) {\n    console.log('filename APP');\n    this.setState({\n      fileName: file_name\n    }, () => console.log(this.state.fileName, 'filename app'));\n  }\n\n  load_demo_argument() {\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc))); //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n  }\n\n  setCyData(val) {\n    this.setState({\n      cyData: val\n    }, () => console.log(\"cydata set\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => console.log(this.state.current_sadface_doc),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Current sadface doc\"), React.createElement(Menu //functions\n    , {\n      toggleResourcePane: this.toggleResourcePane,\n      load_demo_argument: this.load_demo_argument,\n      setFileName: this.setFileName,\n      fileManager: this.fileManager //state\n      ,\n      png: this.state.png,\n      jpg: this.state.jpg,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      id: \"panel\",\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(ResourcePane //state\n    , {\n      showResourcePane: this.state.showResourcePane,\n      newResource: this.state.newResource,\n      resourcesFromJson: this.state.resourcesFromJson,\n      selectedText: this.state.selectedText //functions\n      ,\n      updateLocalStorage: this.updateLocalStorage,\n      fileManager: this.fileManager,\n      set_focus: this.set_focus,\n      focus: this.focus,\n      selectedText: this.state.selectedText,\n      setSelectedText: this.setSelectedText,\n      clearSelection: this.clearSelection,\n      addAtomFromText: this.addAtomFromText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"splitter\",\n      id: \"splitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"visualisation-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(MenuTrigger, {\n      className: \"btn-hamburger toggle-button\",\n      onClick: this.toggleButton,\n      showResourcePane: this.state.showResourcePane,\n      loadDemoArgument: this.loadDemoArgument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })), React.createElement(VisualisationPane //state\n    , {\n      cyData: this.state.cyData,\n      newAtomFromText: this.state.newAtomFromText,\n      selectedText: this.state.selectedText,\n      focused: this.state.focused //function\n      ,\n      loadJSON: this.loadJSON,\n      setCurrentSadFaceDoc: this.setCurrentSadFaceDoc,\n      setCyData: this.setCyData,\n      updateLocalStorage: this.updateLocalStorage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","Menu","MenuTrigger","ResourcePane","Cytoscape","VisualisationPane","update","add_resource","add_resource_metadata","download","update_resource","remove_resources_from_nodes","loadSADFace","saveSADFace","delete_resource","get_sd","import_json","export_cytoscape","App","constructor","props","state","showResourcePane","newResource","resourcesFromJson","selectedText","sd","cyData","selected","jpg","png","fileName","json","current_sadface_doc","cy","update_local_storage","focused","newAtomFromText","toggleButton","bind","fileManager","setCyData","toggleResourcePane","setSelectedText","addAtomFromText","handleSetPng","handleSetJpg","load_demo_argument","setFileName","clearSelection","setCurrentSadFaceDoc","updateLocalStorage","set_focus","localStorage","setItem","JSON","stringify","value","setState","console","log","componentDidMount","slideout","document","getElementById","toggle","operation","filetype","tab","files","filename","metadata","title","id","text","content","length","file","name","reader","FileReader","onload","e","result","readAsText","loadJSON","json_value","importJSON","resources","setFocus","focus","file_name","demo_sadface_doc","val","render","loadDemoArgument"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n//import Components\n//import MainUI from './Components/MainUI';\nimport Menu from './Components/Menu/Menu';\nimport MenuTrigger from './Components/Menu/MenuTrigger';\nimport ResourcePane from './Components/ResourcePane/ResourcePane';\nimport Cytoscape from './Components/VisualisationPane/Cytoscape';\nimport VisualisationPane from './Components/VisualisationPane/VisualisationPane';\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {update,add_resource, add_resource_metadata,download, update_resource,remove_resources_from_nodes, loadSADFace,saveSADFace, delete_resource, get_sd,import_json, export_cytoscape} from './lib/Sadface'; \n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n            //resourcePane\n            showResourcePane: true,\n            newResource: null,\n            resourcesFromJson: null,\n            selectedText: '',\n\n            sd: get_sd(),\n            \n          //  current_tab: 0,\n            //Menu\n            cyData: null,\n            selected: '',\n            jpg:'',\n            png: '',\n            fileName:'',\n            json: '',\n            current_sadface_doc:null,\n            cy:null,\n            update_local_storage: false,\n            \n            focused: null,\n            newAtomFromText: null,\n        };\n\n\n        this.toggleButton = this.toggleButton.bind(this);\n//        this.loadJSON = this.loadJSON.bind(this);\n       // this.setActiveTab = this.setActiveTab.bind(this);\n        this.fileManager = this.fileManager.bind(this);\n        this.setCyData = this.setCyData.bind(this);\n\n        //ResourcePane Functions\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n\n\n        this.setSelectedText = this.setSelectedText.bind(this);\n//        this.setFocus = this.setFocus.bind(this);\n        this.addAtomFromText = this.addAtomFromText.bind(this);\n        //Menu\n        this.handleSetPng = this.handleSetPng.bind(this);\n        this.handleSetJpg = this.handleSetJpg.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n        //Cytoscape\n        this.clearSelection = this.clearSelection.bind(this);\n        this.setCurrentSadFaceDoc = this.setCurrentSadFaceDoc.bind(this);\n        this.updateLocalStorage = this.updateLocalStorage.bind(this);\n        this.set_focus = this.set_focus.bind(this);\n\n    }\nupdateLocalStorage() {\n   // var undo_item = JSON.parse(current_sadface_doc);\n   // undo_stack.push(undo_item);\n   // redo_stack = [];\n   // cm.showMenuItem(\"undo\");\n   // cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    update();\n}\n\nsetCurrentSadFaceDoc(value){\n    this.setState({current_sadface_doc: value}, () =>\n        console.log(\"current sad face doc updated\" ));\n}\n\n\n\naddAtomFromText(){\n    if(this.state.selectedText !== null){\n        this.setState({newAtomFromText: !this.state.newAtomFromText}, () =>\n            console.log(this.state.newAtomFromText, \"set addAtomFromText\"));\n        //clear selectedText\n    }\n}\n\n//Menu function\nhandleSetPng(png){\n    this.setState({png: png}, () =>\n        console.log('PNG set'));\n}\n\nhandleSetJpg(jpg){\n    this.setState({jpg: jpg}, () =>\n        console.log('JPG set'));\n}\n\ncomponentDidMount() {\n    this.slideout = new Slideout({\n        'panel': document.getElementById('panel'),\n        'menu': document.getElementById('menu'),\n        \"fx\": \"ease\",\n        \"side\": \"right\",\n        \"duration\": 500,\n        \"padding\": 256,\n        \"tolerance\": 70,\n    });\n}\n\ntoggleButton(){\n    this.slideout.toggle();\n}\n\nfileManager(operation, filetype, tab, files) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    if (\"save\" === operation)    {\n        let filename = '';\n        // if it's a txt file\n        if (\"txt\" === filetype) {   \n\n            if (tab.metadata.title !== '') {\n                 filename = tab.metadata.title+\".txt\";\n            } else {\n                 filename = \"tab \"+tab.id+\"_text.txt\";\n            }\n            let text = tab.content;\n            download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" === filetype) {\n           let filename = this.state.fileName;\n           console.log(filename, 'filename');\n            if(filename.length === 0){ filename = \"default\"}\n               saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" === operation) {\n        // if it's a txt file\n        if (\"txt\" === filetype) {\n            \n            \n            let file = files[0];\n            let filename = file.name;\n            let reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                update_resource(tab.id, content, filename);\n                let newResource = {};\n                newResource.tab = tab;\n                newResource.filename = filename;\n                newResource.content =content;\n                this.setState({newResource:newResource}, () =>\n                    console.log(this.state.newResource, \"newResource\"));\n\n                //this.updateTab(filename, content);\n            }.bind(this);\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" === filetype) {\n            console.log('IMPORT JSON');\n            let files = document.getElementById(\"loadJSON\").files;\n            let file = files[0];\n            let reader = loadSADFace(file);\n            if (reader !== null){\n            reader.onload = function(e) {\n                let result = reader.result;\n                localStorage.setItem(\"state\",result);\n              this.loadJSON(result);\n            }.bind(this);\n        }\n        }\n    }\n}\n\n\n\n\n\n loadJSON(json_value) {\n                  console.log(\"loadJson\");\n\n     if(json_value != null){\n     let importJSON = import_json(json_value);\n      localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n      this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n      this.setState({resourcesFromJson: importJSON.resources},() =>\n       console.log(\"resoirces from json\"));\n\n      this.setState({json: importJSON}, () => {\n             console.log('json set');\n             this.setCyData(export_cytoscape(this.state.json));\n          });\n        \n      };    \n } \n\nsetSelectedText(text){\n    if(text!== null && text.length > 0){\n        this.setState((state) => ({\n        selectedText: text,\n    }), () =>\n    console.log(this.state.selectedText, \"setSelectedText\"));\n\n    }else{\n       this.clearSelection();   \n       }    \n}\n\n setFocus(){    \n         this.setState({focus: !this.state.focus}, () =>\n         console.log(this.state.focus, 'focus set'));\n }\n\nclearSelection() {\n    this.setState(() => ({\n        selectedText: null,\n    }), () => console.log(this.state.selectedText, \"clear selection\"));\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\n\n setFileName(file_name){\n    console.log('filename APP');\n    this.setState({fileName: file_name}, () => \n      console.log(this.state.fileName, 'filename app'));\n  }\n\nload_demo_argument(){\n   var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc)))\n    //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n}\n\nsetCyData(val){\n    this.setState({cyData: val},() =>\n        console.log(\"cydata set\"));\n}\n\n\n\nrender(){\n\n    return (\n    \t<div>\n      <button\n      onClick={() => console.log(this.state.current_sadface_doc)}\n      >\n      Current sadface doc\n      </button>\n\n\n\n    \t<Menu \n        //functions\n        toggleResourcePane={this.toggleResourcePane}\n        load_demo_argument={this.load_demo_argument}\n        setFileName={this.setFileName}\n        fileManager={this.fileManager}\n        //state\n        png={this.state.png}\n        jpg={this.state.jpg}\n        fileName = {this.state.fileName}\n        />\n\n        <main id=\"panel\" className=\"panel\">\n\n        <div className=\"ui-container\">\n          <ResourcePane \n            //state\n            showResourcePane={this.state.showResourcePane}\n            newResource={this.state.newResource}\n            resourcesFromJson={this.state.resourcesFromJson}\n            selectedText={this.state.selectedText}\n            //functions\n            updateLocalStorage={this.updateLocalStorage}\n            fileManager={this.fileManager}\n            set_focus={this.set_focus}\n            focus = {this.focus}\n            selectedText={this.state.selectedText}\n            setSelectedText={this.setSelectedText}\n            clearSelection={this.clearSelection}\n            addAtomFromText={this.addAtomFromText}\n         />\n          <div className=\"splitter\" id=\"splitter\">\n          </div>\n\n          <div className=\"visualisation-pane\">\n              <div id=\"navbar\">\n                 \n                  <MenuTrigger\n                    className=\"btn-hamburger toggle-button\"\n                    onClick={this.toggleButton}\n                    showResourcePane={this.state.showResourcePane}\n                    loadDemoArgument={this.loadDemoArgument}\n                  />\n              </div>\n              <VisualisationPane\n                //state\n                cyData= {this.state.cyData}\n                newAtomFromText = {this.state.newAtomFromText}\n                selectedText = {this.state.selectedText}\n                focused = {this.state.focused}\n\n\n                //function\n                loadJSON = {this.loadJSON}\n                setCurrentSadFaceDoc={this.setCurrentSadFaceDoc}\n                setCyData={this.setCyData}\n                updateLocalStorage={this.updateLocalStorage}\n              />\n              { /*// <Cytoscape\n               //  cyData = {this.state.CyData}\n               //  setCyData = {this.setCyData} \n               //  handleSetPng = {this.handleSetPng}\n               //  handleSetJpg = {this.handleSetJpg}\n               //  loadJSON = {this.loadJSON}\n               //  clearSelection ={this.clearSelection}\n               //  showResourcePane = {this.state.showResourcePane}\n               //  current_sadface_doc = {this.state.current_sadface_doc}\n               //  setCurrentSadFaceDoc = {this.setCurrentSadFaceDoc}\n\n               //  />*/}\n          </div>\n      </div>\n        </main>\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}