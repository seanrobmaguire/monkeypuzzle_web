{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout'; //import Components\n//import MainUI from './Components/MainUI';\n\nimport Menu from './Components/Menu/Menu';\nimport MenuTrigger from './Components/Menu/MenuTrigger';\nimport ResourcePane from './Components/ResourcePane/ResourcePane';\nimport Cytoscape from './Components/VisualisationPane/Cytoscape';\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { update, add_resource, add_resource_metadata, download, update_resource, remove_resources_from_nodes, loadSADFace, saveSADFace, delete_resource, get_sd, import_json, export_cytoscape } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //tabs: [],\n      last_number: 0,\n      tab_id: \"\",\n      sd: get_sd(),\n      showResourcePane: true,\n      //  current_tab: 0,\n      demo: null,\n      selected: '',\n      jpg: '',\n      png: '',\n      fileName: '',\n      json: '',\n      current_sadface_doc: null,\n      cy: null,\n      remove_all_tabs: false,\n      resourceType: 'text',\n      update_local_storage: false,\n      selectedText: null,\n      focus: true,\n      newAtomFromText: null\n    };\n    this.toggleButton = this.toggleButton.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this); // this.setActiveTab = this.setActiveTab.bind(this);\n\n    this.fileManager = this.fileManager.bind(this); //      this.setCyData = this.setCyData.bind(this);\n    //ResourcePane Functions\n    //  this.add_tab = this.add_tab.bind(this);\n    // this.remove_tab =this.remove_tab.bind(this);\n    //        this.change_title = this.change_title.bind(this);\n    //       this.change_content =this.change_content.bind(this);\n\n    this.set_text_resource_content = this.set_text_resource_content.bind(this); //  this.setType = this.setType.bind(this);\n\n    this.updateTab = this.updateTab.bind(this); //        this.getTab = this.getTab.bind(this);\n\n    this.setSelectedText = this.setSelectedText.bind(this);\n    this.setFocus = this.setFocus.bind(this);\n    this.addAtomFromText = this.addAtomFromText.bind(this); //Menu\n\n    this.handleSetPng = this.handleSetPng.bind(this);\n    this.handleSetJpg = this.handleSetJpg.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.setFileName = this.setFileName.bind(this); //Cytoscape\n\n    this.clearSelection = this.clearSelection.bind(this);\n    this.setCurrentSadFaceDoc = this.setCurrentSadFaceDoc.bind(this);\n    this.update_local_storage = this.update_local_storage.bind(this);\n  }\n\n  update_local_storage() {\n    // var undo_item = JSON.parse(current_sadface_doc);\n    // undo_stack.push(undo_item);\n    // redo_stack = [];\n    // cm.showMenuItem(\"undo\");\n    // cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    update();\n  }\n\n  setCurrentSadFaceDoc(value) {\n    this.setState({\n      current_sadface_doc: value\n    }, () => console.log('current_sadface_doc set'));\n  }\n\n  addAtomFromText() {\n    if (this.state.selectedText !== null) {\n      this.setState({\n        newAtomFromText: !true\n      }, () => console.log(this.state.newAtomFromText, \"set addAtomFromText\"));\n    }\n  } //Menu function\n\n\n  handleSetPng(png) {\n    this.setState({\n      png: png\n    }, () => console.log('PNG set'));\n  }\n\n  handleSetJpg(jpg) {\n    this.setState({\n      jpg: jpg\n    }, () => console.log('JPG set'));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  } // remove_tab(i, tabId){\n  //     delete_resource(tabId);\n  //     remove_resources_from_nodes(tabId);\n  //     localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n  //     if (this.state.tabs.length >= 1 && i !== -1){\n  //         this.setState(state =>{\n  //         const tabs = state.tabs.filter((item, j) => i !==j);\n  //         return {\n  //             tabs,\n  //         };\n  //     }, () => {    \n  //        console.log(\"resource deleted\");\n  //          });\n  //     }\n  // };\n\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: [],\n      last_number: 1\n    }, () => {\n      console.log(this.state.tabs, 'remove all tabs');\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  fileManager(operation, filetype, tab_id, files) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    if (\"save\" === operation) {\n      let filename = '';\n      let tab_to_download = this.getTab(tab_id);\n      console.log(tab_to_download); // if it's a txt file\n\n      if (\"txt\" === filetype) {\n        if (tab_to_download.metadata.title !== '') {\n          filename = tab_to_download.metadata.title + \".txt\";\n        } else {\n          filename = \"tab\" + this.state.current_tab + \"_text.txt\";\n        }\n\n        let text = tab_to_download.content;\n        download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" === filetype) {\n        let filename = this.state.fileName;\n        console.log(filename, 'filename');\n\n        if (filename.length === 0) {\n          filename = \"default\";\n        }\n\n        saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" === operation) {\n      // if it's a txt file\n      if (\"txt\" === filetype) {\n        let file = files[0];\n        let filename = file.name;\n        let reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          update_resource(tab_id, content, filename);\n          this.updateTab(filename, content);\n        }.bind(this);\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" === filetype) {\n        console.log('IMPORT JSON');\n        let files = document.getElementById(\"loadJSON\").files;\n        let file = files[0];\n        let reader = loadSADFace(file);\n\n        if (reader !== null) {\n          reader.onload = function (e) {\n            let result = reader.result;\n            localStorage.setItem(\"state\", result);\n            this.loadJSON(result); //let json = JSON.parse(result);\n\n            this.setState({\n              remove_all_tabs: !this.state.remove_all_tabs\n            }, () => console.log(this.state.remove_all_tabs));\n          }.bind(this);\n        }\n      }\n    }\n  }\n\n  loadJSON(json_value) {\n    let importJSON = import_json(json_value);\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    this.setState({\n      json: importJSON\n    }, () => {\n      console.log('json state set');\n      this.setState({\n        tabs: [],\n        last_number: 0,\n        current_tab: ''\n      }, () => {\n        console.log('empty tabs');\n        this.loadTabs(this.state.json.resources);\n      });\n      this.setCyData(export_cytoscape(this.state.json));\n    });\n  }\n\n  setDemo(val) {\n    this.setState({\n      demo: val\n    }, () => console.log('demo set'));\n  }\n\n  loadTabs(resources) {\n    console.log(resources.length, 'load tabs resources');\n\n    if (resources.length >= 1) {\n      this.setState(state => {\n        const tabs = this.state.tabs.concat(resources);\n        return {\n          tabs\n        };\n      }, () => {\n        console.log('added to array'); //                  this.setActiveTab(this.state.tabs[this.state.tabs.length - 1].id);\n      });\n    }\n  }\n\n  setSelectedText(text) {\n    if (text !== null && text.length > 0) {\n      this.setState(state => ({\n        selectedText: text,\n        focus: false\n      }), () => console.log(this.state.selectedText, \"FOCUS\"));\n    } else {\n      this.setState(() => ({\n        selectedText: null,\n        focus: true\n      }), () => console.log(this.state.focus, this.state.selectedText, \"NO FOCUS\"));\n    }\n  }\n\n  setFocus() {\n    this.setState({\n      focus: !this.state.focus\n    }, () => console.log(this.state.focus, 'focus set'));\n  }\n\n  clearSelection() {\n    console.log(\"clear selection\");\n\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        // Chrome\n        window.getSelection().empty();\n      }\n\n      if (window.getSelection().removeAllRanges) {\n        // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    }\n\n    if (document.selection) {\n      // IE?\n      document.selection.empty();\n    }\n\n    this.setState(() => ({\n      selectedText: null,\n      focus: true\n    }));\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  setFileName(file_name) {\n    console.log('filename APP');\n    this.setState({\n      fileName: file_name\n    }, () => console.log(this.state.fileName, 'filename app'));\n  }\n\n  load_demo_argument() {\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc))); //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, React.createElement(Menu //functions\n    , {\n      toggleResourcePane: this.toggleResourcePane,\n      load_demo_argument: this.load_demo_argument,\n      setFileName: this.setFileName,\n      fileManager: this.fileManager //state\n      ,\n      png: this.state.png,\n      jpg: this.state.jpg,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      id: \"panel\",\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(ResourcePane //state\n    , {\n      tabs: this.state.tabs,\n      addTab: this.addTab // add_tab_to_tab_array = {this.add_tab_to_tab_array}\n      // current_tab = {this.current_tab}\n      // tabs={this.state.tabs}\n      // remove_tab={this.remove_tab}\n      ,\n      showResourcePane: this.state.showResourcePane // setActiveTab={this.setActiveTab}\n      ,\n      fileManager: this.fileManager,\n      change_title: this.change_title,\n      change_content: this.change_content,\n      setType: this.setType,\n      set_focus: this.set_focus,\n      focus: this.focus,\n      selectedText: this.selectedText,\n      setSelectedText: this.setSelectedText,\n      clearSelection: this.clearSelection,\n      addAtomFromText: this.addAtomFromText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"splitter\",\n      id: \"splitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"visualisation-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(MenuTrigger, {\n      className: \"btn-hamburger toggle-button\",\n      onClick: this.toggleButton,\n      showResourcePane: this.state.showResourcePane,\n      loadDemoArgument: this.loadDemoArgument,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","Menu","MenuTrigger","ResourcePane","Cytoscape","update","add_resource","add_resource_metadata","download","update_resource","remove_resources_from_nodes","loadSADFace","saveSADFace","delete_resource","get_sd","import_json","export_cytoscape","App","constructor","props","state","last_number","tab_id","sd","showResourcePane","demo","selected","jpg","png","fileName","json","current_sadface_doc","cy","remove_all_tabs","resourceType","update_local_storage","selectedText","focus","newAtomFromText","toggleButton","bind","loadJSON","loadTabs","toggleResourcePane","fileManager","set_text_resource_content","updateTab","setSelectedText","setFocus","addAtomFromText","handleSetPng","handleSetJpg","load_demo_argument","setFileName","clearSelection","setCurrentSadFaceDoc","localStorage","setItem","JSON","stringify","value","setState","console","log","componentDidMount","slideout","document","getElementById","tabs","toggle","operation","filetype","files","filename","tab_to_download","getTab","metadata","title","current_tab","text","content","length","file","name","reader","FileReader","onload","e","result","readAsText","json_value","importJSON","resources","setCyData","setDemo","val","concat","window","getSelection","empty","removeAllRanges","selection","file_name","demo_sadface_doc","render","addTab","change_title","change_content","setType","set_focus","loadDemoArgument"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n//import Components\n//import MainUI from './Components/MainUI';\nimport Menu from './Components/Menu/Menu';\nimport MenuTrigger from './Components/Menu/MenuTrigger';\nimport ResourcePane from './Components/ResourcePane/ResourcePane';\nimport Cytoscape from './Components/VisualisationPane/Cytoscape';\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {update,add_resource, add_resource_metadata,download, update_resource,remove_resources_from_nodes, loadSADFace,saveSADFace, delete_resource, get_sd,import_json, export_cytoscape} from './lib/Sadface'; \n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t//tabs: [],\n\t\t\tlast_number: 0,\n\t\t\ttab_id:\"\",\n            sd: get_sd(),\n            showResourcePane: true,\n          //  current_tab: 0,\n            demo: null,\n            selected: '',\n            jpg:'',\n            png: '',\n            fileName:'',\n            json: '',\n            current_sadface_doc:null,\n            cy:null,\n            remove_all_tabs: false,\n            resourceType: 'text',\n            update_local_storage: false,\n            selectedText: null,\n            focus: true,\n            newAtomFromText: null,\n        };\n\n\n        this.toggleButton = this.toggleButton.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n       // this.setActiveTab = this.setActiveTab.bind(this);\n        this.fileManager = this.fileManager.bind(this);\n  //      this.setCyData = this.setCyData.bind(this);\n\n        //ResourcePane Functions\n      //  this.add_tab = this.add_tab.bind(this);\n       // this.remove_tab =this.remove_tab.bind(this);\n//        this.change_title = this.change_title.bind(this);\n //       this.change_content =this.change_content.bind(this);\n        this.set_text_resource_content = this.set_text_resource_content.bind(this);\n      //  this.setType = this.setType.bind(this);\n        this.updateTab = this.updateTab.bind(this);\n//        this.getTab = this.getTab.bind(this);\n        this.setSelectedText = this.setSelectedText.bind(this);\n        this.setFocus = this.setFocus.bind(this);\n        this.addAtomFromText = this.addAtomFromText.bind(this);\n        //Menu\n        this.handleSetPng = this.handleSetPng.bind(this);\n        this.handleSetJpg = this.handleSetJpg.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n        //Cytoscape\n        this.clearSelection = this.clearSelection.bind(this);\n        this.setCurrentSadFaceDoc = this.setCurrentSadFaceDoc.bind(this);\n        this.update_local_storage = this.update_local_storage.bind(this);\n\n    }\nupdate_local_storage() {\n   // var undo_item = JSON.parse(current_sadface_doc);\n   // undo_stack.push(undo_item);\n   // redo_stack = [];\n   // cm.showMenuItem(\"undo\");\n   // cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    update();\n}\n\nsetCurrentSadFaceDoc(value){\n    this.setState({current_sadface_doc: value}, () =>\n        console.log('current_sadface_doc set'));\n}\n\n\n\naddAtomFromText(){\n    if(this.state.selectedText !== null){\n        this.setState({newAtomFromText: !true}, () =>\n            console.log(this.state.newAtomFromText, \"set addAtomFromText\"));\n    }\n}\n\n//Menu function\nhandleSetPng(png){\n    this.setState({png: png}, () =>\n        console.log('PNG set'));\n}\n\nhandleSetJpg(jpg){\n    this.setState({jpg: jpg}, () =>\n        console.log('JPG set'));\n}\n\ncomponentDidMount() {\n    this.slideout = new Slideout({\n        'panel': document.getElementById('panel'),\n        'menu': document.getElementById('menu'),\n        \"fx\": \"ease\",\n        \"side\": \"right\",\n        \"duration\": 500,\n        \"padding\": 256,\n        \"tolerance\": 70,\n    });\n}\n\n// remove_tab(i, tabId){\n//     delete_resource(tabId);\n//     remove_resources_from_nodes(tabId);\n\n//     localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    \n//     if (this.state.tabs.length >= 1 && i !== -1){\n\n//         this.setState(state =>{\n//         const tabs = state.tabs.filter((item, j) => i !==j);\n//         return {\n//             tabs,\n//         };\n//     }, () => {    \n//        console.log(\"resource deleted\");\n//          });\n\n          \n//     }\n    \n// };\n\nremove_all_tabs(){\n    this.setState({tabs: [], last_number:1}, () =>{\n        console.log(this.state.tabs,'remove all tabs');\n        });\n}\n\ntoggleButton(){\n    this.slideout.toggle();\n}\n\nfileManager(operation, filetype, tab_id, files) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    if (\"save\" === operation)    {\n        let filename = '';\n        let tab_to_download = this.getTab(tab_id);\n        console.log(tab_to_download);\n        // if it's a txt file\n        if (\"txt\" === filetype) {   \n\n            if (tab_to_download.metadata.title !== '') {\n                 filename = tab_to_download.metadata.title+\".txt\";\n            } else {\n                 filename = \"tab\"+this.state.current_tab+\"_text.txt\";\n            }\n            let text = tab_to_download.content;\n            download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" === filetype) {\n           let filename = this.state.fileName;\n           console.log(filename, 'filename');\n            if(filename.length === 0){ filename = \"default\"}\n               saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" === operation) {\n        // if it's a txt file\n        if (\"txt\" === filetype) {\n            \n\n            let file = files[0];\n            let filename = file.name;\n            let reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                update_resource(tab_id, content, filename);\n                this.updateTab(filename, content);\n            }.bind(this);\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" === filetype) {\n            console.log('IMPORT JSON');\n            let files = document.getElementById(\"loadJSON\").files;\n            let file = files[0];\n            let reader = loadSADFace(file);\n            if (reader !== null){\n            reader.onload = function(e) {\n                let result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                //let json = JSON.parse(result);\n                this.setState({remove_all_tabs: !this.state.remove_all_tabs}, () =>\n                    console.log(this.state.remove_all_tabs));\n            }.bind(this);\n        }\n        }\n    }\n}\n\n\n\n\n\nloadJSON(json_value) {\n    let importJSON = import_json(json_value);\n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()))\n   \n\n    this.setState({json: importJSON}, () => {\n        console.log('json state set');\n        this.setState({tabs: [], last_number:0, current_tab: ''}, () =>{\n            console.log('empty tabs');\n            this.loadTabs(this.state.json.resources);\n        });\n        this.setCyData(export_cytoscape(this.state.json));\n    });      \n}\n\n\n\n\n\nsetDemo(val){\n    this.setState({demo: val},() =>\n        console.log('demo set'));\n}\n\n\nloadTabs(resources){\n    console.log(resources.length, 'load tabs resources');\n    if(resources.length >= 1){\n    this.setState(state => {\n            const tabs = this.state.tabs.concat(resources);\n                return {\n                    tabs,\n                }\n            }, () => {\n                    console.log('added to array');\n//                  this.setActiveTab(this.state.tabs[this.state.tabs.length - 1].id);\n                }\n        );\n    \n   }\n }\n\n\n\n\n\n\n\nsetSelectedText(text){\n    if(text!== null && text.length > 0){\n        this.setState((state) => ({\n        selectedText: text,\n        focus: false,\n    }), () =>\n    console.log(this.state.selectedText, \"FOCUS\"));\n\n    }else{\n        this.setState(() => ({\n        selectedText: null,\n        focus: true,\n    }), () =>\n    console.log(this.state.focus, this.state.selectedText, \"NO FOCUS\"));\n    }\n    \n    \n            \n}\n\nsetFocus(){    \n        this.setState({focus: !this.state.focus}, () =>\n        console.log(this.state.focus, 'focus set'));\n}\n\nclearSelection() {\n    console.log(\"clear selection\");\n    if (window.getSelection) {\n        if (window.getSelection().empty) {  // Chrome\n            window.getSelection().empty();\n        } \n        if (window.getSelection().removeAllRanges) {  // Firefox\n            window.getSelection().removeAllRanges();\n        }\n    } \n    if (document.selection) {  // IE?\n        document.selection.empty();\n    }\n    this.setState(() => ({\n        selectedText: null,\n        focus: true,\n    }));\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\n\n setFileName(file_name){\n    console.log('filename APP');\n    this.setState({fileName: file_name}, () => \n      console.log(this.state.fileName, 'filename app'));\n  }\n\nload_demo_argument(){\n   var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc)))\n    //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n}\n\n\n\nrender(){\n\n    return (\n    \t<div>\n\n\n\n    \t<Menu \n        //functions\n        toggleResourcePane={this.toggleResourcePane}\n        load_demo_argument={this.load_demo_argument}\n        setFileName={this.setFileName}\n        fileManager={this.fileManager}\n        //state\n        png={this.state.png}\n        jpg={this.state.jpg}\n        fileName = {this.state.fileName}\n        />\n\n        <main id=\"panel\" className=\"panel\">\n\n        <div className=\"ui-container\">\n          <ResourcePane \n            //state\n            tabs={this.state.tabs}\n            addTab = {this.addTab}\n             // add_tab_to_tab_array = {this.add_tab_to_tab_array}\n             // current_tab = {this.current_tab}\n             // tabs={this.state.tabs}\n             // remove_tab={this.remove_tab}\n              showResourcePane={this.state.showResourcePane}\n             // setActiveTab={this.setActiveTab}\n              fileManager={this.fileManager}\n              change_title={this.change_title}\n              change_content={this.change_content}\n              setType={this.setType}\n              set_focus={this.set_focus}\n              focus = {this.focus}\n              selectedText={this.selectedText}\n              setSelectedText={this.setSelectedText}\n              clearSelection={this.clearSelection}\n              addAtomFromText={this.addAtomFromText}\n\n\n\n         />\n          <div className=\"splitter\" id=\"splitter\">\n          </div>\n\n          <div className=\"visualisation-pane\">\n              <div id=\"navbar\">\n                 \n                  <MenuTrigger\n                    className=\"btn-hamburger toggle-button\"\n                    onClick={this.toggleButton}\n                    showResourcePane={this.state.showResourcePane}\n                    loadDemoArgument={this.loadDemoArgument}\n                  />\n              </div>\n             {/*   <Cytoscape\n                demo = {this.state.demo}\n                setCyData = {this.setCyData} \n                handleSetPng = {this.handleSetPng}\n                handleSetJpg = {this.handleSetJpg}\n                loadJSON = {this.loadJSON}\n                selectedText = {this.state.selectedText}\n                clearSelection ={this.clearSelection}\n                newAtomFromText = {this.state.newAtomFromText}\n                showResourcePane = {this.state.showResourcePane}\n                current_sadface_doc = {this.state.current_sadface_doc}\n                setCurrentSadFaceDoc = {this.setCurrentSadFaceDoc}\n\n                />*/}\n          </div>\n      </div>\n        </main>\n{/*\n        // <MainUI\n        // toggleSlideIn={() => this.toggleButton()}\n        // add_tab_to_tab_array = {this.add_tab_to_tab_array}\n        // tabs = {this.state.tabs}\n        // setType={this.setType}\n        // remove_tab={this.remove_tab}\n        // fileManager={this.fileManager}\n        // showResourcePane={this.state.showResourcePane}\n        // current_tab={this.state.current_tab}\n        // setActiveTab={this.setActiveTab}\n        // fileManager={this.fileManager}\n        // change_title={this.change_title}\n        // change_content={this.change_content}\n        // loadTabs= {this.loadTabs}\n        // cy_data= {this.state.cy_data}\n        // setCyData = {this.setCyData}\n        // loadJSON = {this.loadJSON}\n\n        // handleSetPng={this.handleSetPng}\n        // handleSetJpg={this.handleSetJpg}\n\n        // remove_all_tabs={this.state.remove_all_tabs}\n\n        // update_local_storage={this.state.update_local_storage}\n        // set_focus={this.set_focus}\n        // selectedText={this.state.selectedText}\n        // setSelectedText={this.setSelectedText}\n        // clearSelection={this.clearSelection}\n        // focus={this.state.focus}\n        // addAtomFromText={this.addAtomFromText}\n        // newAtomFromText={this.state.newAtomFromText}\n\n\n\n\n\n        // />\n*/}\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}