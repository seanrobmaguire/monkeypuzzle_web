{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js\";\nimport React, { Component } from 'react';\nimport cytoscape from 'cytoscape';\n\nclass CytoContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  renderCytoscape() {\n    this.cy_data = {};\n    this.cy = cytoscape({\n      container: document.getElementById('cy'),\n      ready: function () {\n        window.cy = this;\n      },\n      // elements: JSON.parse(this.cy_data),\n      elements: {\n        nodes: [{\n          data: {\n            id: 'cat'\n          }\n        }, {\n          data: {\n            id: 'bird'\n          }\n        }, {\n          data: {\n            id: 'ladybug'\n          }\n        }, {\n          data: {\n            id: 'aphid'\n          }\n        }, {\n          data: {\n            id: 'rose'\n          }\n        }, {\n          data: {\n            id: 'grasshopper'\n          }\n        }, {\n          data: {\n            id: 'plant'\n          }\n        }, {\n          data: {\n            id: 'wheat'\n          }\n        }],\n        edges: [{\n          data: {\n            source: 'cat',\n            target: 'bird'\n          }\n        }, {\n          data: {\n            source: 'bird',\n            target: 'ladybug'\n          }\n        }, {\n          data: {\n            source: 'bird',\n            target: 'grasshopper'\n          }\n        }, {\n          data: {\n            source: 'grasshopper',\n            target: 'plant'\n          }\n        }, {\n          data: {\n            source: 'grasshopper',\n            target: 'wheat'\n          }\n        }, {\n          data: {\n            source: 'ladybug',\n            target: 'aphid'\n          }\n        }, {\n          data: {\n            source: 'aphid',\n            target: 'rose'\n          }\n        }]\n      },\n      style: [{\n        selector: \"node\",\n        style: {\n          \"content\": \"data(content)\",\n          \"text-opacity\": 0.7,\n          \"width\": \"auto\",\n          \"height\": \"auto\",\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          \"text-outline-color\": \"#eee\",\n          \"text-outline-width\": 1\n        }\n      }, {\n        selector: \"[typeshape]\",\n        style: {\n          \"shape\": \"data(typeshape)\"\n        }\n      }, {\n        selector: \"node[typeshape='diamond']\",\n        style: {\n          'background-color': '#CC9900'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Conflict']\",\n        style: {\n          'background-color': 'red'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Support']\",\n        style: {\n          'background-color': 'green'\n        }\n      }, {\n        selector: \"edge\",\n        style: {\n          \"line-color\": \"#9dbaea\",\n          \"target-arrow-shape\": \"triangle\",\n          \"target-arrow-color\": \"#9dbaea\",\n          \"curve-style\": \"bezier\"\n        }\n      }, {\n        selector: \":selected\",\n        style: {\n          \"border-width\": \"1\",\n          \"border-color\": \"black\",\n          \"background-color\": \"#3399CC\"\n        }\n      }, {\n        selector: \".atom-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }, {\n        selector: \".scheme-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }],\n      boxSelectionEnabled: false,\n      autounselectify: false,\n      selectionType: \"single\",\n      minZoom: 0.1,\n      maxZoom: 1.5\n    });\n    this.layout = build_cola_layout();\n  } //close rendercytoscape\n\n\n  componentDidMount() {\n    this.renderCytoscape();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"cy\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CytoContainer;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js"],"names":["React","Component","cytoscape","CytoContainer","constructor","props","renderCytoscape","cy_data","cy","container","document","getElementById","ready","window","elements","nodes","data","id","edges","source","target","style","selector","boxSelectionEnabled","autounselectify","selectionType","minZoom","maxZoom","layout","build_cola_layout","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport cytoscape from 'cytoscape';\n\nclass CytoContainer extends Component{\n    constructor(props){\n        super(props);\n        \n    }\n\n    renderCytoscape(){\n        this.cy_data = {};\n        this.cy = cytoscape(\n        {\n            container: document.getElementById('cy'),\n            ready: function(){ window.cy = this; },\n           // elements: JSON.parse(this.cy_data),\n           elements: {\n                nodes: [\n                    { data: { id: 'cat' } },\n                    { data: { id: 'bird' } },\n                    { data: { id: 'ladybug' } },\n                    { data: { id: 'aphid' } },\n                    { data: { id: 'rose' } },\n                    { data: { id: 'grasshopper' } },\n                    { data: { id: 'plant' } },\n                    { data: { id: 'wheat' } }\n                ],\n                edges: [\n                    { data: { source: 'cat', target: 'bird' } },\n                    { data: { source: 'bird', target: 'ladybug' } },\n                    { data: { source: 'bird', target: 'grasshopper' } },\n                    { data: { source: 'grasshopper', target: 'plant' } },\n                    { data: { source: 'grasshopper', target: 'wheat' } },\n                    { data: { source: 'ladybug', target: 'aphid' } },\n                    { data: { source: 'aphid', target: 'rose' } }\n                ]\n                },\n\n                style:[\n                {   selector: \"node\", \n                    style: {\n                        \"content\": \"data(content)\",\n                        \"text-opacity\": 0.7,\n                        \"width\" : \"auto\",\n                        \"height\" : \"auto\",\n                        \"text-valign\": \"bottom\",\n                        \"text-halign\": \"right\",\n                        \"text-outline-color\": \"#eee\",\n                        \"text-outline-width\": 1\n                    }\n                },\n                {   selector: \"[typeshape]\", \n                    style: {\n                        \"shape\":\"data(typeshape)\"\n                    }   \n                },\n                {   selector: \"node[typeshape='diamond']\", \n                    style: {\n                        'background-color': '#CC9900'\n                }\n                },\n                {\n                selector: \"node[typeshape='diamond'][content='Conflict']\",\n                style: {\n                    'background-color': 'red'\n                }\n                },\n                {\n                selector: \"node[typeshape='diamond'][content='Support']\",\n                style: {\n                    'background-color': 'green'\n                }\n                },\n                {   \n                selector: \"edge\", \n                style: {\n                    \"line-color\": \"#9dbaea\",\n                    \"target-arrow-shape\": \"triangle\",\n                    \"target-arrow-color\": \"#9dbaea\",\n                    \"curve-style\": \"bezier\"\n                }\n                },\n                {   \n                selector: \":selected\", \n                style: {\n                    \"border-width\":\"1\",\n                    \"border-color\":\"black\",\n                    \"background-color\": \"#3399CC\"\n                }\n                },\n                {   \n                selector: \".atom-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n                },\n                {   \n                selector: \".scheme-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            }\n            ],\n\n            boxSelectionEnabled: false,\n            autounselectify: false,\n            selectionType: \"single\",\n            minZoom: 0.1,\n            maxZoom: 1.5\n\n        });\n\n        this.layout = build_cola_layout();\n    }//close rendercytoscape\n\n\n    componentDidMount(){\n        this.renderCytoscape();\n    }\n\n\n    render(){\n        return(\n            <div id=\"cy\"></div>\n            );\n    }\n}\n\nexport default CytoContainer;"]},"metadata":{},"sourceType":"module"}