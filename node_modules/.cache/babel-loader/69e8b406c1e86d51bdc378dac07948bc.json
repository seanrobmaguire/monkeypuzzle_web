{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport MainUI from './Components/MainUI';\nimport SlideIn from './Components/SlideIn';\nimport Modal from './Components/Modal'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\nimport modalData from './Components/ModalData.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: \"Test\",\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      tabs: [],\n      last_number: 1,\n      tab_id: \"\",\n      sd: {},\n      showResourcePane: true,\n      test: {},\n      activeTab: 0\n    };\n    this.confirm = this.test.bind(this);\n    this.test = this.test.bind(this);\n    this.add_tab = this.add_tab.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.download = this.download.bind(this);\n    this.saveSADFace = this.saveSADFace.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.remove_all_tabs = this.remove_all_tabs.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.mp_reset = this.mp_reset.bind(this);\n    this.clear_local_storage = this.clear_local_storage.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n  }\n\n  test(value) {\n    this.setState({\n      activeTab: value\n    }, function () {\n      console.log(this.state.activeTab);\n    });\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = this.new_resource(content); // sd.resources.push(res);\n\n      return res;\n    }\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  openAddBoardModal() {\n    this.setState({\n      boardAddModalShow: true\n    }, function () {\n      console.log(this.state.boardAddModalShow);\n    });\n  }\n\n  createNewTab() {}\n\n  next_number() {\n    var current_number = this.state.last_number;\n    this.setState({\n      last_number: this.state.last_number + 1\n    });\n    return current_number;\n  }\n\n  /*\n  \tadd_tab(load_id=null){\n          var newTab = {};\n          var length;\n  \t\tif (load_id == null) {\n              var new_resource = this.add_resource(' ');\n  \n              var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n              var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n              if (resource_type_txt.toLowerCase() === \"text\") { \n                  newTab.type = \"text\"\n              }\n  \n              newTab.tab_id = new_resource.id;\n              newTab.content = new_resource.content;\n              newTab.metadata = new_resource.metadata;\n              newTab.active = true;\n  \n          \tthis.add_resource_metadata(this.state.tab_id, 'title', '');\n  \t\t  //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n  \t\t} else { newTab.tab_id= load_id }\n    //  set_active_tab(tab_id+\"_body\");\n     // return this.state.tab_id\n  \n  //SetState with callback ensures updated value is used\n  \n  this.setState(state => {\n          const tabs = state.tabs.concat(newTab);\n          return {\n              tabs,\n          }}, function () {\n              console.log(this.state.tabs.length);\n              length = this.state.tabs.length;\n              length = length -1;\n              console.log(\"llength\" +length);\n              this.test(length);\n  \n          }        );\n  \n               \n          \n      }\n  \n   \n  \n  */\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.state.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  } //uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n  new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n     Returns: A string\n    */\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    this.setState(state => {\n      const tabs = state.tabs.filter((item, j) => i !== j);\n      return {\n        tabs\n      };\n    });\n    /*\n        delete_resource(current_tab);\n        sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (current_tab in node.sources) {\n                    delete_source(node.id, current_tab);\n                }\n            }\n        });\n        \n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        if (tabs.length >= 1 && idx != -1)\n        {\n            tabs.splice(idx, 1);\n            current_tab = tabs[tabs.length-1];\n            set_active_tab(current_tab+\"_body\");\n        }\n    */\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  download(filename, text) {}\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        if (document.getElementById(\"title_\" + tab_id).value !== '') {\n          var filename = document.getElementById(\"title_\" + tab_id).value + \".txt\";\n        } else {\n          var filename = \"tab\" + tab_id + \"_text.txt\";\n        }\n\n        var text = document.getElementById(tab_id).value; //download(filename,text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = document.getElementById(\"export_filename\").value;\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        this.saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + tab_id).files;\n        var file = files[0];\n        var filename = file.name;\n        document.getElementById(\"title_\" + tab_id).innerText = filename;\n        console.log(file.name);\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          document.getElementById(tab_id).innerText = content;\n          this.update_resource(tab_id, content, filename);\n        };\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = this.loadSADFace(file);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          this.remove_all_tabs();\n          this.loadTabs(json.resources);\n        };\n      }\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      var resource = this.get_resource(resource_id);\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.metadata.title = title;\n        }\n\n        this.setState.sd.resources.forEach(res => {\n          if (res.id === resource_id) {\n            res = resource;\n          }\n        });\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n    }\n  }\n\n  get_resource() {}\n\n  loadTabs() {}\n\n  saveSADFace() {}\n\n  loadSADFace() {}\n\n  loadJSON() {}\n\n  update_resource() {} // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n    console.log(this.state.showResourcePane);\n  }\n\n  mp_reset() {\n    this.clear_local_storage();\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  load_demo_argument() {\n    console.log(\"load_demo_argument\");\n  }\n\n  set_analyst_name() {\n    console.log(\"set_analyst_name\");\n  }\n\n  set_analyst_email() {\n    console.log(\"set_analyst_email\");\n  }\n\n  download_sadface() {\n    console.log(\"download_sadface\");\n  }\n\n  download_png() {\n    console.log(\"download_png\");\n  }\n\n  download_jpg() {\n    console.log(\"download_jpg\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      onClick: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }), React.createElement(SlideIn, {\n      toggleResourcePane: this.toggleResourcePane,\n      mp_reset: this.mp_reset,\n      load_demo_argument: this.load_demo_argument,\n      set_analyst_name: this.set_analyst_name,\n      set_analyst_email: this.set_analyst_email,\n      download_sadface: this.download_sadface,\n      download_png: this.download_png,\n      download_jpg: this.download_jpg,\n      fileManager: this.fileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","MainUI","SlideIn","Modal","modalData","App","constructor","props","newResourceModal","trigger","triggerText","className","triggerId","id","title","content","footer","value","state","tabs","last_number","tab_id","sd","showResourcePane","test","activeTab","confirm","bind","add_tab","toggleButton","add_resource","add_to_tabs_arr","remove_tab","download","saveSADFace","update_resource","loadSADFace","loadJSON","remove_all_tabs","loadTabs","get_resource","toggleResourcePane","mp_reset","clear_local_storage","load_demo_argument","set_analyst_name","set_analyst_email","download_sadface","download_png","download_jpg","add_resource_metadata","setState","console","log","res","new_resource","concat","openAddBoardModal","boardAddModalShow","createNewTab","next_number","current_number","resource_id","key","resources","forEach","metadata","new_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","componentDidMount","slideout","document","getElementById","i","filter","item","j","toggle","filename","text","fileManager","operation","filetype","length","files","file","name","innerText","reader","FileReader","onload","e","result","readAsText","localStorage","setItem","json","JSON","parse","resource","undefined","clear","window","location","reload","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n\nimport MainUI from './Components/MainUI';\nimport SlideIn from './Components/SlideIn';\n\nimport Modal from './Components/Modal';\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\nimport modalData from './Components/ModalData.js'\n\n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 1,\n\t\t\ttab_id:\"\",\n            sd: {},\n            showResourcePane: true,\n            test:{},\n            activeTab: 0,\n\n\n\n\n\t\t};\n        this.confirm =this.test.bind(this);\n        this.test = this.test.bind(this);\n\t\tthis.add_tab = this.add_tab.bind(this);\n\t\tthis.toggleButton = this.toggleButton.bind(this);\n\t\tthis.add_resource =this.add_resource.bind(this);\n\t\tthis.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.download = this.download.bind(this);\n        this.saveSADFace = this.saveSADFace.bind(this);\n        this.update_resource =this.update_resource.bind(this);\n        this.loadSADFace =this.loadSADFace.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.remove_all_tabs = this.remove_all_tabs.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.update_resource = this.update_resource.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.mp_reset =this.mp_reset.bind(this);\n        this.clear_local_storage = this.clear_local_storage.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.set_analyst_name = this.set_analyst_name.bind(this);\n        this.set_analyst_email =this.set_analyst_email.bind(this);\n        this.download_sadface =this.download_sadface.bind(this);\n        this.download_png =this.download_png.bind(this);\n        this.download_jpg = this.download_jpg.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n\n\t}\n\n\n\ntest(value){\n    this.setState({\n        activeTab: value\n    }, function (){\n        console.log(this.state.activeTab);\n    });\n   \n\n\n}\n\n\tadd_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = this.new_resource(content);\n       // sd.resources.push(res);\n        return res;\n    }\n}\n\n\n\nadd_to_tabs_arr(tab_id){\n\tthis.setState(state => {\n\t\tconst tabs = state.tabs.concat(tab_id);\n\t\treturn {\n\t\t\ttabs,\n\t\t}}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n\t\n}\nopenAddBoardModal(){\n        this.setState({ boardAddModalShow: true }, function () {\n             console.log(this.state.boardAddModalShow);\n        });\n\n}\n\ncreateNewTab(){\n}\n\n next_number(){\n \t var current_number = this.state.last_number\n \t this.setState({ last_number: this.state.last_number + 1})\n \t return current_number;\n }\n    newResourceModal = {\n    trigger: {\n      triggerText: \"Test\",\n      className: 'add_tab_button',\n      triggerId: \"add_tab_button\",\n    },\n    id:\"resource_pane_selection_modal\",\n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n     // action: this.add_tab() \n    }\n};\n \t\n\n\t\n/*\n\tadd_tab(load_id=null){\n        var newTab = {};\n        var length;\n\t\tif (load_id == null) {\n            var new_resource = this.add_resource(' ');\n\n            var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n            var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n            if (resource_type_txt.toLowerCase() === \"text\") { \n                newTab.type = \"text\"\n            }\n\n            newTab.tab_id = new_resource.id;\n            newTab.content = new_resource.content;\n            newTab.metadata = new_resource.metadata;\n            newTab.active = true;\n\n        \tthis.add_resource_metadata(this.state.tab_id, 'title', '');\n\t\t  //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\t\t} else { newTab.tab_id= load_id }\n  //  set_active_tab(tab_id+\"_body\");\n   // return this.state.tab_id\n\n//SetState with callback ensures updated value is used\n\nthis.setState(state => {\n        const tabs = state.tabs.concat(newTab);\n        return {\n            tabs,\n        }}, function () {\n            console.log(this.state.tabs.length);\n            length = this.state.tabs.length;\n            length = length -1;\n            console.log(\"llength\" +length);\n            this.test(length);\n\n        }        );\n\n             \n        \n    }\n\n \n\n*/\n\n\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.state.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\n\t new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n\n\n//uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n\n    Returns: A string\n    */\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\n \tcomponentDidMount() {\n  \tthis.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n  });\n}\n\nremove_tab(i){\n    this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        return {\n            tabs,\n        };\n    });\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n*/\n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n        this.slideout.toggle();\n\t}\n\n\n\ndownload(filename,text){\n\n}\n\n    fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n   if (\"save\" == operation)    {\n        // if it's a txt file\n        if (\"txt\" == filetype) {    \n            if (document.getElementById(\"title_\"+tab_id).value !== '') {\n                var filename = document.getElementById(\"title_\"+tab_id).value+\".txt\";\n            } else {\n                var filename = \"tab\"+tab_id+\"_text.txt\";\n            }\n            var text = document.getElementById(tab_id).value;\n            //download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var filename = document.getElementById(\"export_filename\").value;\n            if(filename.length == 0){ filename = \"default\"}\n            this.saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            var files = document.getElementById(\"load\"+tab_id).files;\n            var file = files[0];\n            var filename = file.name;\n            document.getElementById(\"title_\"+tab_id).innerText = filename;\n            console.log(file.name);\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                document.getElementById(tab_id).innerText = content;\n                this.update_resource(tab_id, content, filename);\n            }\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = this.loadSADFace(file);\n            reader.onload = function(e) {\n                var result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                this.remove_all_tabs();\n                this.loadTabs(json.resources);\n            }\n        }\n    }\n}\n update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n\n    if (resource_id && (content || title)) {\n        var resource = this.get_resource(resource_id);\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.metadata.title = title;\n            }\n            this.setState.sd.resources.forEach((res) => {\n               if(res.id === resource_id) {\n                   res = resource;\n                }\n            }\n            );\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n    }\n}\n\n\nget_resource(){\n\n}\nloadTabs(){\n\n}\n\nsaveSADFace(){\n\n}\n\nloadSADFace(){\n\n}\n\nloadJSON(){\n\n}\n\nupdate_resource(){\n\n}\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n    console.log(this.state.showResourcePane);\n}\nmp_reset()\n{\n    this.clear_local_storage();\n}\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\nload_demo_argument(){\n    console.log(\"load_demo_argument\");\n}\n\nset_analyst_name(){\n    console.log(\"set_analyst_name\");\n}\n\nset_analyst_email(){\n    console.log(\"set_analyst_email\");\n}\n\ndownload_sadface(){\n    console.log(\"download_sadface\")\n}\n\ndownload_png(){\n    console.log(\"download_png\");\n}\n\ndownload_jpg(){\n    console.log(\"download_jpg\");\n}\n\n\n \n  render(){\n\n    return (\n    \t<div>\n        \n\n        <Modal\n            modalProps = {this.newResourceModal}  \n            onClick = {this.test}               \n         />\n      \n\t    \t \n      \n    \t<SlideIn \n            toggleResourcePane={this.toggleResourcePane}\n            mp_reset={this.mp_reset}\n            load_demo_argument={this.load_demo_argument}\n            set_analyst_name={this.set_analyst_name}\n            set_analyst_email={this.set_analyst_email}\n            download_sadface={this.download_sadface}\n            download_png={this.download_png}\n            download_jpg={this.download_jpg}\n            fileManager={this.fileManager}\n\n        />\n\n\t\t\t<MainUI\n\t\t\t   toggleSlideIn={() => this.toggleButton()}\n\t\t\t   addTab = {() => this.add_tab()}\n\t\t\t   tabs = {this.state.tabs}\n               remove_tab={this.remove_tab}\n               fileManager={this.fileManager}\n               showResourcePane={this.state.showResourcePane}\n               activeTab={this.state.activeTab}\n               \n\n\n\t\t\t/>\n \n   </div>\n\n      );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}