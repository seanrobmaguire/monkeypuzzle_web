{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      //tabs: this.props.tabs,\n      activeTab: this.props.activeTab,\n      last_number: 1\n    };\n    this.handlefileManager = this.handlefileManager.bind(this);\n  }\n\n  searchTabs(tab) {}\n\n  handlefileManager() {\n    this.props.fileManager();\n  }\n\n  render() {\n    const activeTab = this.props.activeTab;\n    var tabNumber = 1;\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      style: {\n        display: this.props.showResourcePane ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      onClick: this.props.addTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), this.props.tabs.map((item, i) => {\n      const onSetActiveTab = () => this.props.setActiveTab(i);\n\n      return React.createElement(\"button\", {\n        onClick: onSetActiveTab,\n        className: this.props.activeTab === i ? \"tablinks active\" : \"tablinks\",\n        key: item.tab_id,\n        id: item.tab_id + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, tabNumber++);\n    })), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.tabs.map((item, i) => {\n      this.myRef = React.createRef();\n      this.contentRef = React.createRef();\n      this.titleRef = React.createRef();\n\n      const handleRemove = () => this.props.remove_tab(i);\n\n      const clickLoad = () => {\n        this.myRef.current.click();\n      };\n\n      const handleFileUpload = () => {\n        var files = this.myRef.current.files;\n        this.props.fileManager('load', 'txt', item.tab_id, files);\n      };\n\n      const handlefileManager = () => {\n        this.props.fileManager('save', 'txt', item.tab_id);\n      };\n\n      const handleChange_title = () => {\n        this.props.change_title();\n      };\n\n      const handleChange_content = () => {\n        var contentValue = this.contentRef.value();\n        this.props.change_content();\n      };\n\n      return React.createElement(TabBody, {\n        id: item.tab_id,\n        key: item.tab_id,\n        i: i,\n        activeTab: this.state.activeTab,\n        handleremove: handleRemove,\n        fileManager: handlefileManager,\n        style: {\n          display: this.props.activeTab === i ? 'block' : 'none'\n        },\n        clickLoad: clickLoad,\n        handleFileUpload: handleFileUpload,\n        handleChange_title: handleChange_title,\n        handleChange_content: handleChange_content,\n        loadRef: this.myRef,\n        titleRef: this.titleRef,\n        contentRef: this.contentRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nclass TabBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      readOnly: false\n    };\n    this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n  }\n\n  toggle_edit_lock() {\n    this.setState({\n      readOnly: !this.state.readOnly\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          tabs = _this$props.tabs,\n          id = _this$props.id,\n          i = _this$props.i,\n          activeTab = _this$props.activeTab,\n          handleremove = _this$props.handleremove,\n          handleLoad = _this$props.handleLoad,\n          fileManager = _this$props.fileManager,\n          style = _this$props.style,\n          loadTrigger = _this$props.loadTrigger,\n          ref = _this$props.ref,\n          clickLoad = _this$props.clickLoad,\n          loadRef = _this$props.loadRef,\n          titleRef = _this$props.titleRef,\n          contentRef = _this$props.contentRef,\n          handleFileUpload = _this$props.handleFileUpload,\n          handleChange_title = _this$props.handleChange_title,\n          handleChange_content = _this$props.handleChange_content;\n    return React.createElement(\"div\", {\n      id: id + \"_body\",\n      className: \"resource_pane_tab_content\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Remove this tab from the resource pane\",\n      onClick: handleremove,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"load\" + id,\n      style: {\n        display: \"block\"\n      },\n      accept: \".txt\",\n      ref: loadRef,\n      onChange: handleFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      id: \"load\" + id + \"_btn\",\n      className: \"btn btn-default\",\n      onClick: clickLoad,\n      title: \"Load a text file into this resource tab\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-upload fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      onClick: fileManager\n      /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/\n      ,\n      title: \"Save this resource tab to a text file\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-download fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"toggle_edit_lock_button\",\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Toggle editability of the content area\",\n      onClick: this.toggle_edit_lock,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      id: \"toggle_edit_lock_icon_\" + id,\n      className: this.state.readOnly ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Add node from text selection\"\n      /* onclick=\"new_atom_txt_resource_button();\"*/\n      ,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-puzzle-piece fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"textarea\", {\n      id: \"title_\" + id,\n      type: \"text\",\n      rows: \"1\",\n      style: {\n        resize: \"none\"\n      },\n      className: \"form-control\",\n      placeholder: \"The name of this resource...\",\n      onChange: handleChange_title,\n      ref: titleRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      id: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: id,\n      className: \"form-control\",\n      placeholder: \"Enter your source text here...\",\n      rows: \"20\",\n      ref: contentRef,\n      onChange: handleChange_content\n      /*onfocus=\"set_focus(this)\"*/\n      ,\n      style: {\n        resize: \"vertical\",\n        minHeight: \"35px\"\n      },\n      readOnly: this.state.readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js"],"names":["React","Component","Modal","FontAwesomeIcon","faPlusSquare","Button","ResourcePane","constructor","props","newResourceModal","trigger","triggerText","className","triggerId","id","title","content","footer","value","state","activeTab","last_number","handlefileManager","bind","searchTabs","tab","fileManager","render","tabNumber","display","showResourcePane","addTab","tabs","map","item","i","onSetActiveTab","setActiveTab","tab_id","myRef","createRef","contentRef","titleRef","handleRemove","remove_tab","clickLoad","current","click","handleFileUpload","files","handleChange_title","change_title","handleChange_content","contentValue","change_content","TabBody","readOnly","toggle_edit_lock","setState","handleremove","handleLoad","style","loadTrigger","ref","loadRef","resize","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass ResourcePane extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tabs: this.props.tabs,\n            activeTab: this.props.activeTab,\n            last_number: 1,\n        }\n        this.handlefileManager =this.handlefileManager.bind(this);\n      \n\n    };\n\tnewResourceModal = {\n    trigger: {\n      triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n      className: 'add_tab_button',\n      triggerId: \"add_tab_button\",\n    },\n    id:\"resource_pane_selection_modal\",\n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n     // action: this.add_tab() \n    }\n};\n\n\nsearchTabs(tab){\n\n}\n\n\n\n \n\nhandlefileManager(){\n    this.props.fileManager()\n}\n\n \trender() {\n        const{\n            activeTab\n\n\n        } =this.props;\n            var tabNumber = 1;\n\n\n        return ( \n \t\t\t<div className=\"resource-pane\" id=\"resource-pane\" style={{display: this.props.showResourcePane ? \"block\" : \"none\"}}> \n\n                    <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                        <Modal\n                             modalProps = {this.newResourceModal}  \n                            onClick = {this.props.addTab}               \n                         />\n                    \n                        {\n                            this.props.tabs.map((item, i)=> {\n                            const onSetActiveTab = () =>\n                                this.props.setActiveTab(i);\n                            return(\n                                <button  \n                                    onClick={onSetActiveTab} \n                                    className={this.props.activeTab === i ? \"tablinks active\" : \"tablinks\"}\n                                    key={item.tab_id}\n                                    id={item.tab_id+\"_btn\"}\n                                >\n                                    {tabNumber++}\n                                </button>\n                                \n                                )})}\n                    </div>\n\n\n                        \n                    <div className=\"tab_body\" id=\"tab_body\">\n                        {this.props.tabs.map((item,i) => {\n                            this.myRef = React.createRef();\n                            this.contentRef = React.createRef();\n                            this.titleRef = React.createRef();\n\n                            const handleRemove = () =>\n                                this.props.remove_tab(i);\n\n                            const clickLoad =() => {\n                                \n                                this.myRef.current.click();\n\n                            }\n\n                            const handleFileUpload = () =>{\n                            var files = this.myRef.current.files;\n                            this.props.fileManager('load','txt',  item.tab_id ,files);\n\n                            }\n                            const handlefileManager = () =>{\n\n                                this.props.fileManager('save', 'txt', item.tab_id); \n                            }\n                            const handleChange_title = () =>{\n\n                                this.props.change_title();\n                            }\n\n                            const handleChange_content = () =>{\n                                var contentValue = this.contentRef.value();\n                                this.props.change_content();\n                            }\n\n                            return(\n                                <TabBody\n                                    id={item.tab_id}\n                                    key={item.tab_id}\n                                    i={i}\n                                    activeTab={this.state.activeTab}\n                                    handleremove={handleRemove}\n                                    fileManager={handlefileManager}\n                                    style={{display: this.props.activeTab === i ? 'block' : 'none'}}\n                                    clickLoad={clickLoad}\n                                   \n                                    handleFileUpload={handleFileUpload}\n                                    handleChange_title={handleChange_title}\n                                    handleChange_content={handleChange_content}\n\n                                    loadRef={this.myRef}\n                                    titleRef={this.titleRef}\n                                    contentRef={this.contentRef}\n                                />\n\n                                )\n                        })}\n                    </div>\n                </div>\n        );\n\n    }\n}\n\n\n\n            \nclass TabBody extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            readOnly: false,\n        }\n        this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n\n    }\n\n    toggle_edit_lock(){\n            this.setState({readOnly: !this.state.readOnly})\n\n    }\n\n    render() { \n        const {\n    \t\ttabs,\n            id,\n            i,\n            activeTab,\n            handleremove,\n            handleLoad,\n            fileManager,\n            style,\n            loadTrigger,\n            ref,\n            clickLoad,\n//element references\n            loadRef,\n            titleRef,\n            contentRef,\n\n            handleFileUpload,\n            handleChange_title,\n            handleChange_content\n            \n\n\n    \t   }=this.props\n\n\n\n            return (\n\t\t\t\t<div id={id+\"_body\"} className=\"resource_pane_tab_content\" style={style}>\n                <form>\n                    <div className=\"form-group\">\n\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Remove this tab from the resource pane\"\n                                onClick={handleremove}\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-trash fa-fw fa-lg\"></i>\n                            </Button>\n                            <input \n                                type=\"file\" \n                                id={\"load\" + id} \n                                style={{display: \"block\"}} \n                                accept=\".txt\" \n                                ref={loadRef}\n                                onChange= {handleFileUpload}\n                                />\n                            <Button \n                                type=\"button\" \n                                id={\"load\" + id + \"_btn\"} \n                                className=\"btn btn-default\" \n                                onClick={clickLoad}\n\n                                title=\"Load a text file into this resource tab\"\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-upload fa-fw fa-lg\"></i>\n\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={fileManager}\n                                /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/ \n                                title=\"Save this resource tab to a text file\"\n                                variant=\"light\"\n                                >\n                                <i className=\"fa fa-download fa-fw fa-lg\"></i>\n                            </Button>\n                            <Button id=\"toggle_edit_lock_button\" \n                                    type=\"button\" \n                                    className=\"btn btn-default\" \n                                    title=\"Toggle editability of the content area\" \n                                    onClick={this.toggle_edit_lock}\n                                    variant=\"light\"\n                                    >\n                                <i id={\"toggle_edit_lock_icon_\" + id} \n                                className={(this.state.readOnly) ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\"}></i>\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Add node from text selection\"\n                                /* onclick=\"new_atom_txt_resource_button();\"*/\n                                variant=\"light\"\n                                >\n                                <i className=\"fa fa-puzzle-piece fa-fw fa-lg\"></i>\n                            </Button>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Title</label>\n                        <textarea \n                            id={\"title_\"+id} \n                            type=\"text\" \n                            rows=\"1\" \n                            style={{resize: \"none\"}} \n                            className=\"form-control\" \n                            placeholder=\"The name of this resource...\" \n                            onChange={handleChange_title}\n                            ref={titleRef}\n                        >\n                        </textarea> \n                        <label>Content</label>\n                        <div id=\"textarea\">\n                            <textarea \n                            id={id} \n                            className=\"form-control\" \n                            placeholder=\"Enter your source text here...\" \n                            rows=\"20\" \n                            ref={contentRef}\n                            onChange={handleChange_content} \n                            /*onfocus=\"set_focus(this)\"*/ \n                            style={{resize: \"vertical\", minHeight: \"35px\"}} \n                            readOnly={this.state.readOnly}>\n                        </textarea>\n                        </div>  \n                    </div> \n                </form>\n              </div>\n            );\n    }\n            \n        \n}   \n\n\n\n\n\n\nexport default ResourcePane;\n"]},"metadata":{},"sourceType":"module"}