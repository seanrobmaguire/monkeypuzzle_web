{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'; //Import Components\n\nimport Modal from './Modal';\nimport { newResourceModal } from './ModalData.jsx';\nimport Button from 'react-bootstrap/Button';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handlefileManager = this.handlefileManager.bind(this);\n    this.remove_all_tabs = this.remove_all_tabs.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.returnType = this.returnType.bind(this);\n    this.handlegetType = this.handlegetType.bind(this);\n  }\n\n  returnType() {\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    let type = resource_type_txt.toLowerCase();\n    this.props.getType(type);\n  }\n\n  handleAdd() {\n    this.props.addTab();\n    console.log(\"handleADD\");\n  }\n\n  searchTabs(tab) {}\n\n  remove_all_tabs() {\n    console.log(\"remove tabs resource pane\");\n  }\n\n  handlefileManager() {\n    this.props.fileManager();\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.remove_all_tabs !== prevProps.remove_all_tabs) {\n      this.remove_all_tabs();\n    }\n  }\n\n  handlegetType(e) {\n    let type = e.target.value;\n    console.log(type, 'resourcePane type');\n  }\n\n  render() {\n    var tabNumber = 1;\n    const newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        onChange: this.handlegetType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Text\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"none\"))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: \"btn btn-secondary\",\n          value: \"Close\"\n        },\n        button2: {\n          className: \"btn btn-primary\",\n          value: \"Add\"\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      style: {\n        display: this.props.showResourcePane ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: newResourceModal,\n      onClick: this.returnType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), this.props.tabs.map((item, i) => {\n      const onSetActiveTab = () => this.props.setActiveTab(item.id);\n\n      return React.createElement(\"button\", {\n        key: item.id + '_btn',\n        onClick: onSetActiveTab,\n        className: this.props.current_tab === item.id ? \"tablinks active\" : \"tablinks\",\n        id: item.id + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, item.tab_number);\n    })), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, this.props.tabs.map((item, i) => {\n      if (item.type === \"text\") {\n        this.myRef = React.createRef();\n        this.contentRef = React.createRef();\n        this.titleRef = React.createRef();\n\n        const handleRemove = () => this.props.remove_tab(i);\n\n        const clickLoad = () => {\n          this.myRef.current.click();\n        };\n\n        const handleFileUpload = () => {\n          var files = this.myRef.current.files;\n          this.props.fileManager('load', 'txt', item.tab_id, files);\n        };\n\n        const handlefileManager = () => {\n          this.props.fileManager('save', 'txt', item.tab_id);\n        };\n\n        const handleChange_title = e => {\n          var titleValue = this.titleRef.current.value;\n          this.props.change_title(item.tab_id, titleValue);\n        };\n\n        const handleChange_content = () => {\n          var contentValue = this.contentRef.current.value;\n          this.props.change_content(item.tab_id, contentValue);\n        };\n\n        return React.createElement(TabBody, {\n          id: item.id,\n          key: item.id + '_bdy',\n          i: i,\n          handleremove: handleRemove,\n          fileManager: handlefileManager,\n          style: {\n            display: this.props.current_tab === item.id ? 'block' : 'none'\n          },\n          clickLoad: clickLoad,\n          titleValue: item.metadata.title,\n          contentValue: item.content,\n          handleFileUpload: handleFileUpload,\n          handleChange_title: handleChange_title,\n          handleChange_content: handleChange_content,\n          loadRef: this.myRef,\n          titleRef: this.titleRef,\n          contentRef: this.contentRef,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        });\n      }\n    })));\n  }\n\n}\n\nclass TabBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      readOnly: false\n    };\n    this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n  }\n\n  toggle_edit_lock() {\n    this.setState({\n      readOnly: !this.state.readOnly\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          tabs = _this$props.tabs,\n          id = _this$props.id,\n          i = _this$props.i,\n          handleremove = _this$props.handleremove,\n          handleLoad = _this$props.handleLoad,\n          fileManager = _this$props.fileManager,\n          style = _this$props.style,\n          loadTrigger = _this$props.loadTrigger,\n          ref = _this$props.ref,\n          clickLoad = _this$props.clickLoad,\n          contentValue = _this$props.contentValue,\n          loadRef = _this$props.loadRef,\n          titleRef = _this$props.titleRef,\n          contentRef = _this$props.contentRef,\n          handleFileUpload = _this$props.handleFileUpload,\n          handleChange_title = _this$props.handleChange_title,\n          handleChange_content = _this$props.handleChange_content;\n    return React.createElement(\"div\", {\n      id: id + \"_body\",\n      className: \"resource_pane_tab_content\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Remove this tab from the resource pane\",\n      onClick: handleremove,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"load\" + id,\n      style: {\n        display: \"block\"\n      },\n      accept: \".txt\",\n      ref: loadRef,\n      onChange: handleFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      id: \"load\" + id + \"_btn\",\n      className: \"btn btn-default\",\n      onClick: clickLoad,\n      title: \"Load a text file into this resource tab\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-upload fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      onClick: fileManager\n      /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/\n      ,\n      title: \"Save this resource tab to a text file\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-download fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"toggle_edit_lock_button\",\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Toggle editability of the content area\",\n      onClick: this.toggle_edit_lock,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      id: \"toggle_edit_lock_icon_\" + id,\n      className: this.state.readOnly ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Add node from text selection\"\n      /* onclick=\"new_atom_txt_resource_button();\"*/\n      ,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-puzzle-piece fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"textarea\", {\n      id: \"title_\" + id,\n      type: \"text\",\n      rows: \"1\",\n      style: {\n        resize: \"none\"\n      },\n      className: \"form-control\",\n      placeholder: \"The name of this resource...\",\n      onChange: handleChange_title,\n      ref: titleRef,\n      value: this.props.titleValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      id: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: id,\n      className: \"form-control\",\n      placeholder: \"Enter your source text here...\",\n      rows: \"20\",\n      ref: contentRef,\n      onChange: handleChange_content\n      /*onfocus=\"set_focus(this)\"*/\n      ,\n      style: {\n        resize: \"vertical\",\n        minHeight: \"35px\"\n      },\n      readOnly: this.state.readOnly,\n      value: contentValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js"],"names":["React","Component","FontAwesomeIcon","faPlusSquare","Modal","newResourceModal","Button","ResourcePane","constructor","props","state","handlefileManager","bind","remove_all_tabs","handleAdd","returnType","handlegetType","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","type","toLowerCase","getType","addTab","console","log","searchTabs","tab","fileManager","componentDidUpdate","prevProps","e","target","value","render","tabNumber","trigger","triggerText","className","triggerId","id","title","content","footer","buttonNo","button1","button2","display","showResourcePane","tabs","map","item","i","onSetActiveTab","setActiveTab","current_tab","tab_number","myRef","createRef","contentRef","titleRef","handleRemove","remove_tab","clickLoad","current","click","handleFileUpload","files","tab_id","handleChange_title","titleValue","change_title","handleChange_content","contentValue","change_content","metadata","TabBody","readOnly","toggle_edit_lock","setState","handleremove","handleLoad","style","loadTrigger","ref","loadRef","resize","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n//Import Components\nimport Modal from './Modal';\nimport { newResourceModal} from './ModalData.jsx';\n\n\n\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass ResourcePane extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n        this.handlefileManager =this.handlefileManager.bind(this);\n        this.remove_all_tabs = this.remove_all_tabs.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.returnType =this.returnType.bind(this);\n        this.handlegetType = this.handlegetType.bind(this);\n\n    };\n\nreturnType(){\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    let type = resource_type_txt.toLowerCase()\n    this.props.getType(type);\n\n}\n\nhandleAdd(){\n    \n    \n    this.props.addTab();\n   console.log(\"handleADD\");\n}\n\nsearchTabs(tab){\n\n}\n\nremove_all_tabs(){\n    console.log(\"remove tabs resource pane\")\n}\n\n\n\n\n\nhandlefileManager(){\n    this.props.fileManager()\n}\n\n\n    componentDidUpdate(prevProps) {\n  // Typical usage (don't forget to compare props):\n  if (this.props.remove_all_tabs !== prevProps.remove_all_tabs) {\n    this.remove_all_tabs();\n  }\n}\n\nhandlegetType(e){\n    let type = e.target.value;\n    console.log(type,'resourcePane type');\n\n}\n\n\n\n\nrender() {\n  \n    var tabNumber = 1;\n\n\n    const newResourceModal = {\n  trigger: {\n    triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n    className: 'add_tab_button',\n    triggerId: \"add_tab_button\",\n  },\n  id:\"resource_pane_selection_modal\",\n  title: 'New Resource Pane',\n  content:  <div className=\"modal-body\">\n  <p>Select a resource type</p>\n  <select className=\"form-control\" id=\"resource_type\" onChange={this.handlegetType}>\n  <option>Text</option>\n    <option>none</option>\n  </select>\n  </div>,\n  footer: {\n    buttonNo: 2,\n    button1: {\n      className: \"btn btn-secondary\",\n      value: \"Close\"\n    },\n    button2: {\n      className: \"btn btn-primary\",\n      value: \"Add\"\n    }\n  }\n};\n\n\n    return ( \n        <div className=\"resource-pane\" id=\"resource-pane\" style={{display: this.props.showResourcePane ? \"block\" : \"none\"}}> \n            <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                        <Modal\n                          modalProps = {newResourceModal}  \n                            onClick = {this.returnType} \n                         />\n                    \n                        {\n                            this.props.tabs.map((item, i)=> {\n                                const onSetActiveTab = () =>\n                                    this.props.setActiveTab(item.id);\n                                return(\n                                    <button  \n                                        key={item.id + '_btn'}\n                                        onClick={onSetActiveTab} \n                                        className={this.props.current_tab === item.id ? \"tablinks active\" : \"tablinks\"}\n                                        id={item.id+\"_btn\"}\n                                    >\n                                        {item.tab_number}\n                                    </button>\n                                    \n                                );\n                            })\n                        }\n                    </div>\n\n\n                        \n                    <div className=\"tab_body\" id=\"tab_body\">\n                        {this.props.tabs.map((item,i) => {\n                            if(item.type === \"text\"){\n                            this.myRef = React.createRef();\n                            this.contentRef = React.createRef();\n                            this.titleRef = React.createRef();\n\n                            const handleRemove = () =>\n                                this.props.remove_tab(i);\n\n                            const clickLoad =() => {\n                                \n                                this.myRef.current.click();\n\n                            }\n\n                            const handleFileUpload = () =>{\n                            var files = this.myRef.current.files;\n                            this.props.fileManager('load','txt',  item.tab_id ,files);\n\n                            }\n                            const handlefileManager = () =>{\n\n                                this.props.fileManager('save', 'txt', item.tab_id); \n                            }\n                            const handleChange_title = (e) =>{\n                                var titleValue = this.titleRef.current.value;\n                                this.props.change_title(item.tab_id, titleValue);\n                            }\n\n                            const handleChange_content = () =>{\n                                var contentValue = this.contentRef.current.value;\n                                this.props.change_content(item.tab_id, contentValue);\n                            }\n\n                            return(\n                                <TabBody\n                                    id={item.id}\n                                    key={item.id + '_bdy'}\n                                    i={i}\n                                    handleremove={handleRemove}\n                                    fileManager={handlefileManager}\n                                    style={{display: this.props.current_tab === item.id ? 'block' : 'none'}}\n                                    clickLoad={clickLoad}\n                                    titleValue={item.metadata.title}\n                                    contentValue = {item.content}\n                                   \n                                    handleFileUpload={handleFileUpload}\n                                    handleChange_title={handleChange_title}\n                                    handleChange_content={handleChange_content}\n\n                                    loadRef={this.myRef}\n                                    titleRef={this.titleRef}\n                                    contentRef={this.contentRef}\n                                />\n                            )\n                        }\n                        })}\n                    </div>\n                    </div>\n                    );\n\n}\n}\n\n\n\n\n\n\nclass TabBody extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            readOnly: false,\n        }\n        this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n\n    }\n\n    toggle_edit_lock(){\n        this.setState({readOnly: !this.state.readOnly})\n\n    }\n\n\n\n    render() { \n        const {\n          tabs,\n          id,\n          i,\n          handleremove,\n          handleLoad,\n          fileManager,\n          style,\n          loadTrigger,\n          ref,\n          clickLoad,\n          contentValue,\n//element references\nloadRef,\ntitleRef,\ncontentRef,\n\nhandleFileUpload,\nhandleChange_title,\nhandleChange_content\n\n\n\n}=this.props\n\n\n\nreturn (\n    <div id={id+\"_body\"} className=\"resource_pane_tab_content\" style={style}>\n    <form>\n    <div className=\"form-group\">\n\n    <Button \n    type=\"button\" \n    className=\"btn btn-default\" \n    title=\"Remove this tab from the resource pane\"\n    onClick={handleremove}\n    variant=\"light\"\n    >\n    <i className=\"fa fa-trash fa-fw fa-lg\"></i>\n    </Button>\n    <input \n    type=\"file\" \n    id={\"load\" + id} \n    style={{display: \"block\"}} \n    accept=\".txt\" \n    ref={loadRef}\n    onChange= {handleFileUpload}\n    />\n    <Button \n    type=\"button\" \n    id={\"load\" + id + \"_btn\"} \n    className=\"btn btn-default\" \n    onClick={clickLoad}\n\n    title=\"Load a text file into this resource tab\"\n    variant=\"light\"\n    >\n    <i className=\"fa fa-upload fa-fw fa-lg\"></i>\n\n    </Button>\n    <Button \n    type=\"button\" \n    className=\"btn btn-default\" \n    onClick={fileManager}\n    /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/ \n    title=\"Save this resource tab to a text file\"\n    variant=\"light\"\n    >\n    <i className=\"fa fa-download fa-fw fa-lg\"></i>\n    </Button>\n    <Button id=\"toggle_edit_lock_button\" \n    type=\"button\" \n    className=\"btn btn-default\" \n    title=\"Toggle editability of the content area\" \n    onClick={this.toggle_edit_lock}\n    variant=\"light\"\n    >\n    <i id={\"toggle_edit_lock_icon_\" + id} \n    className={(this.state.readOnly) ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\"}></i>\n    </Button>\n    <Button \n    type=\"button\" \n    className=\"btn btn-default\" \n    title=\"Add node from text selection\"\n    /* onclick=\"new_atom_txt_resource_button();\"*/\n    variant=\"light\"\n    >\n    <i className=\"fa fa-puzzle-piece fa-fw fa-lg\"></i>\n    </Button>\n    </div>\n    <div className=\"form-group\">\n        <label>Title</label>\n        <textarea \n            id={\"title_\"+id} \n            type=\"text\" \n            rows=\"1\" \n            style={{resize: \"none\"}} \n            className=\"form-control\" \n            placeholder=\"The name of this resource...\" \n            onChange={handleChange_title}\n            ref={titleRef}\n            value={this.props.titleValue}\n            >\n        </textarea> \n    <label>Content</label>\n    <div id=\"textarea\">\n    <textarea \n    id={id} \n    className=\"form-control\" \n    placeholder=\"Enter your source text here...\" \n    rows=\"20\" \n    ref={contentRef}\n    onChange={handleChange_content} \n    /*onfocus=\"set_focus(this)\"*/ \n    style={{resize: \"vertical\", minHeight: \"35px\"}} \n    readOnly={this.state.readOnly}\n    value= {contentValue}>\n\n    </textarea>\n    </div>  \n    </div> \n    </form>\n    </div>\n    );\n}\n\n\n}   \n\n\n\n\n\n\nexport default ResourcePane;\n"]},"metadata":{},"sourceType":"module"}