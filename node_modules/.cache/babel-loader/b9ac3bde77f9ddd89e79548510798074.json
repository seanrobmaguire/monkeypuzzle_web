{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'; //Import Components\n\nimport Modal from '../Modal/Modal';\nimport TabBody from './TabBody';\nimport { remove_resources_from_nodes, delete_resource, add_resource, add_resource_metadata, get_sd } from '../../lib/Sadface';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resourceType: 'text',\n      current_tab: null\n    };\n    this.setType = this.setType.bind(this);\n  }\n\n  addTab() {\n    console.log(\"add tab\");\n    let newTab = {};\n    newTab = add_resource(' ');\n    add_resource_metadata(newTab.id, 'title', '');\n    newTab.metadata = {\n      title: ''\n    };\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    newTab.type = this.state.resourceType;\n    this.addTabToArray(newTab);\n    console.log(get_sd());\n  }\n\n  addTabToArray(newTab) {\n    this.setState(state => {\n      const tabs = this.state.tabs.concat(newTab);\n      return {\n        tabs\n      };\n    }, () => {\n      console.log(this.state.tabs, 'added to array');\n      this.setActiveTab(newTab.id);\n    });\n  }\n\n  setActiveTab(value) {\n    console.log(\"setActiveTabs\");\n    this.setState({\n      current_tab: value\n    }, function () {\n      console.log(this.state.current_tab, 'active');\n    });\n  }\n\n  remove_tab(i, tabId) {\n    delete_resource(tabId);\n    remove_resources_from_nodes(tabId);\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n    if (this.state.tabs.length >= 1 && i !== -1) {\n      this.setState(state => {\n        const tabs = state.tabs.filter((item, j) => i !== j);\n        return {\n          tabs\n        };\n      }, () => {\n        if (this.state.tabs.length >= 1) {\n          this.setActiveTab(this.state.tabs[this.state.tabs.length - 1].id);\n        }\n      });\n    }\n  }\n\n  getTab(id) {\n    let getTab = this.state.tabs.find(el => el.id === id);\n    return getTab;\n  }\n\n  setType(e) {\n    this.setState({\n      resourceType: e.target.value.toLowerCase()\n    }, () => console.log(this.state.resourceType, 'type set'));\n  } // handleNewAtomText(){\n  //      if(this.props.focused !== null || this.props.focused !== undefined){\n  //         if(this.props.focused.parentNode.id === \"textarea\"){\n  //             var elem = document.getElementById(this.props.focused.id);\n  //             var selection = elem.value.substring(elem.selectionStart, elem.selectionEnd);\n  //             console.log(selection, 'selection');\n  //             console.log(elem, 'elem');\n  //           //  if(selection != null || selection != undefined){\n  //             //   add_new_atom_node(selection);\n  //              //   elem.selectionStart = elem.selectionEnd;\n  //              //   clear_focus();\n  //            // }\n  //         }\n  //     }\n  //     else { console.log(\"Not a valid text source\") }\n  // }\n\n\n  componentDidUpdate(prevProps, prevSate) {// if (prevProps.tabs.length !== this.props.tabs.length) {\n    //     if(this.props.tabs.length > 0){\n    //         let length = this.props.tabs.length - 1;\n    //         this.setActiveTab(this.props.tabs[length].id)\n    //     }\n    // }\n  }\n\n  render() {\n    let num = 0;\n    const newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        onChange: this.setType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: \"btn btn-secondary\",\n          value: \"Close\"\n        },\n        button2: {\n          className: \"btn btn-primary\",\n          value: \"Add\"\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      style: {\n        display: this.props.showResourcePane ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: newResourceModal,\n      onClick: this.addTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), this.props.tabs.map((item, i) => {\n      const onSetActiveTab = () => this.setActiveTab(item.id);\n\n      return React.createElement(\"button\", {\n        key: item.id + '_btn',\n        onClick: onSetActiveTab,\n        className: this.state.current_tab === item.id ? \"tablinks active\" : \"tablinks\",\n        id: item.id + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, ++num);\n    })), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, this.props.tabs.map((item, i) => {\n      if (item.type === \"text\") {\n        this.loadTxtRef = React.createRef();\n\n        const handleRemove = () => this.remove_tab(i, item.id);\n\n        const clickLoad = () => {\n          this.loadTxtRef.current.click();\n        };\n\n        const handleFileUpload = e => {\n          console.log(\"UPLOAD\", e.target.files);\n          this.props.fileManager('load', 'txt', item.id, e.target.files); // var files = this.loadTxtRef.current.files;\n          // this.props.fileManager('load','txt',  item.id ,files);\n        };\n\n        const handleFileDownload = () => {\n          this.props.fileManager('save', 'txt', item.id);\n        };\n\n        const handleChange_title = e => {\n          var titleValue = e.target.value;\n          this.props.change_title(item.id, titleValue);\n        };\n\n        const handleChangeContent = e => {\n          console.log(\"CHANGE\");\n          var contentValue = e.target.value;\n          this.props.change_content(item.id, contentValue);\n        };\n\n        const handleAtomFromText = e => {\n          console.log(\"atom from text\");\n          console.log(this.props.selectedText, \"atom from text selected\");\n          this.props.addAtomFromText();\n        };\n\n        return React.createElement(TabBody, {\n          id: item.id,\n          key: item.id + '_bdy',\n          i: i,\n          style: {\n            display: this.state.current_tab === item.id ? 'block' : 'none'\n          },\n          handleremove: handleRemove,\n          handleFileUpload: handleFileUpload,\n          handleFileDownload: handleFileDownload,\n          clickLoad: clickLoad,\n          handleAtomFromText: handleAtomFromText //  focus={this.props.focus}\n          ,\n          clearSelection: this.props.clearSelection,\n          titleValue: item.metadata.title,\n          contentValue: item.content,\n          handleChange_title: handleChange_title,\n          handleChangeContent: handleChangeContent,\n          set_focus: this.props.set_focus,\n          loadTxtRef: this.loadTxtRef,\n          setSelectedText: this.props.setSelectedText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        });\n      }\n    })));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane/ResourcePane.js"],"names":["React","Component","FontAwesomeIcon","faPlusSquare","Modal","TabBody","remove_resources_from_nodes","delete_resource","add_resource","add_resource_metadata","get_sd","ResourcePane","constructor","props","state","resourceType","current_tab","setType","bind","addTab","console","log","newTab","id","metadata","title","localStorage","setItem","JSON","stringify","type","addTabToArray","setState","tabs","concat","setActiveTab","value","remove_tab","i","tabId","length","filter","item","j","getTab","find","el","e","target","toLowerCase","componentDidUpdate","prevProps","prevSate","render","num","newResourceModal","trigger","triggerText","className","triggerId","content","footer","buttonNo","button1","button2","display","showResourcePane","map","onSetActiveTab","loadTxtRef","createRef","handleRemove","clickLoad","current","click","handleFileUpload","files","fileManager","handleFileDownload","handleChange_title","titleValue","change_title","handleChangeContent","contentValue","change_content","handleAtomFromText","selectedText","addAtomFromText","clearSelection","set_focus","setSelectedText"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n//Import Components\nimport Modal from '../Modal/Modal';\nimport TabBody from './TabBody';\n\nimport{remove_resources_from_nodes,delete_resource, add_resource, add_resource_metadata, get_sd} from '../../lib/Sadface'; \n\n\n\n\n\n\nclass ResourcePane extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            resourceType: 'text',\n            current_tab: null,\n        }\n        \n        this.setType = this.setType.bind(this);\n\n\n    };\n\n\n    addTab(){\n        console.log(\"add tab\");\n        let newTab = {}\n        newTab = add_resource(' ');\n        add_resource_metadata(newTab.id, 'title', '');\n        newTab.metadata = {title: ''}\n        localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n        newTab.type = this.state.resourceType;\n        this.addTabToArray(newTab);   \n        console.log(get_sd());\n    }\n\n\n     addTabToArray(newTab){\n        this.setState(state => {\n            const tabs = this.state.tabs.concat(newTab);\n                return {\n                    tabs,\n                }\n            }, () => {\n                    console.log(this.state.tabs, 'added to array');\n                   this.setActiveTab(newTab.id);\n                }\n        );\n    }\n\n     setActiveTab(value){\n        console.log(\"setActiveTabs\");\n        this.setState({\n            current_tab: value\n        }, function (){\n            console.log(this.state.current_tab, 'active');\n        });\n    }\n\n      remove_tab(i, tabId){\n        delete_resource(tabId);\n        remove_resources_from_nodes(tabId);\n\n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        \n        if (this.state.tabs.length >= 1 && i !== -1){\n            this.setState(state =>{\n                const tabs = state.tabs.filter((item, j) => i !==j);\n                return {\n                    tabs,\n                };\n            }, () => {    \n            if(this.state.tabs.length >=1){\n                this.setActiveTab(this.state.tabs[this.state.tabs.length-1].id);\n            }\n            });      \n        }   \n    };\n\n       getTab(id){\n    let getTab = this.state.tabs.find(el => el.id === id);\n    return getTab;\n\n}\n\n   \n\n  \n\n \n\n     setType(e){\n        this.setState({resourceType: e.target.value.toLowerCase()}, () =>\n            console.log(this.state.resourceType, 'type set'));\n    }\n\n\n   \n\n  \n\n    // handleNewAtomText(){\n    //      if(this.props.focused !== null || this.props.focused !== undefined){\n    //         if(this.props.focused.parentNode.id === \"textarea\"){\n    //             var elem = document.getElementById(this.props.focused.id);\n\n    //             var selection = elem.value.substring(elem.selectionStart, elem.selectionEnd);\n    //             console.log(selection, 'selection');\n    //             console.log(elem, 'elem');\n    //           //  if(selection != null || selection != undefined){\n    //             //   add_new_atom_node(selection);\n    //              //   elem.selectionStart = elem.selectionEnd;\n    //              //   clear_focus();\n    //            // }\n    //         }\n    //     }\n    //     else { console.log(\"Not a valid text source\") }\n\n    // }\n  \n\n\n\n    componentDidUpdate(prevProps, prevSate) {\n        // if (prevProps.tabs.length !== this.props.tabs.length) {\n        //     if(this.props.tabs.length > 0){\n        //         let length = this.props.tabs.length - 1;\n        //         this.setActiveTab(this.props.tabs[length].id)\n        //     }\n        // }\n    }\n\n    render() {\n        let num =0;\n        const newResourceModal = {\n            trigger: {\n                triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n                className: 'add_tab_button',\n                triggerId: \"add_tab_button\",\n            },\n            id:\"resource_pane_selection_modal\",\n            title: 'New Resource Pane',\n            content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\" onChange={this.setType}>\n                <option>Text</option>\n                </select>\n                </div>,\n            footer: {\n                buttonNo: 2,\n                button1: {\n                    className: \"btn btn-secondary\",\n                    value: \"Close\"\n                },\n                button2: {\n                    className: \"btn btn-primary\",\n                    value: \"Add\"\n                }\n            }\n        };\n\n\n        return ( \n            <div className=\"resource-pane\" id=\"resource-pane\" style={{display: this.props.showResourcePane ? \"block\" : \"none\"}}> \n                <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                     <Modal\n                         modalProps = {newResourceModal}  \n                         onClick = {this.addTab} \n\n                     />\n                    {\n                        this.props.tabs.map((item, i)=> {\n                            const onSetActiveTab = () =>\n                                this.setActiveTab(item.id);\n                                    return(\n                                        <button  \n                                            key={item.id + '_btn'}\n                                            onClick={onSetActiveTab} \n                                            className={this.state.current_tab === item.id ? \"tablinks active\" : \"tablinks\"}\n                                            id={item.id+\"_btn\"}\n                                        >\n                                            {++num}\n                                        </button>\n                                    );\n                        })\n                    }\n                </div>\n                            \n                        <div className=\"tab_body\" id=\"tab_body\">\n                            {this.props.tabs.map((item,i) => {\n                                if(item.type === \"text\"){\n                                this.loadTxtRef = React.createRef();\n                                \n\n                                const handleRemove = () =>\n                                    this.remove_tab(i, item.id);\n\n                                const clickLoad =() => {\n                                    \n                                    this.loadTxtRef.current.click();\n\n                                }\n\n                                const handleFileUpload = (e) =>{\n                                    console.log(\"UPLOAD\", e.target.files);\n                                    this.props.fileManager('load', 'txt', item.id, e.target.files);\n                               // var files = this.loadTxtRef.current.files;\n                               // this.props.fileManager('load','txt',  item.id ,files);\n\n                                }\n                                const handleFileDownload = () =>{\n\n                                    this.props.fileManager('save', 'txt', item.id);\n\n                                }\n                                const handleChange_title = (e) =>{\n                                    var titleValue = e.target.value;\n                                    this.props.change_title(item.id, titleValue);\n                                }\n\n                                const handleChangeContent = (e) =>{\n                                    console.log(\"CHANGE\");\n                                    var contentValue = e.target.value;\n                                    this.props.change_content(item.id, contentValue);\n                                }\n                                const handleAtomFromText = (e) =>{\n                                    console.log(\"atom from text\")\n                                    console.log(this.props.selectedText, \"atom from text selected\");\n                                    this.props.addAtomFromText();\n                                }\n                                return(\n                                    <TabBody\n                                        id={item.id}\n                                        key={item.id + '_bdy'}\n                                        i={i}\n                                        style={{display: this.state.current_tab === item.id ? 'block' : 'none'}}\n\n                                        handleremove={handleRemove}\n                                        handleFileUpload={handleFileUpload}\n                                        handleFileDownload={handleFileDownload}\n                                        clickLoad={clickLoad}\n                                        handleAtomFromText = {handleAtomFromText}\n                                      //  focus={this.props.focus}\n                                        clearSelection={this.props.clearSelection}\n\n\n                                        titleValue={item.metadata.title}\n                                        contentValue = {item.content}\n                                    \n                                        handleChange_title={handleChange_title}\n                                        handleChangeContent={handleChangeContent}\n                                        set_focus={this.props.set_focus}\n\n\n                                        loadTxtRef={this.loadTxtRef}\n                                        setSelectedText={this.props.setSelectedText}\n                                       \n                                    />\n                                );\n                            }\n                            })}\n                        </div>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n\nexport default ResourcePane;\n"]},"metadata":{},"sourceType":"module"}