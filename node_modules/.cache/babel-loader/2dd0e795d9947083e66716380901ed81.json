{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/TabBody.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\nclass TabBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      readOnly: true\n    }; //create ref\n\n    this.focusRef = React.createRef();\n    this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n    this.handleGetSelectedText = this.handleGetSelectedText.bind(this);\n  }\n\n  toggle_edit_lock() {\n    this.setState({\n      readOnly: !this.state.readOnly\n    }, () => console.log('content area locked'));\n  }\n\n  handleChange_content(e) {\n    let contentValue = e.target.value;\n    console.log(contentValue);\n    this.props.change_content('', contentValue); // this.props.change_content(this.props.id, contentValue);\n  }\n\n  handleGetSelectedText() {\n    if (window.getSelection) {\n      console.log(window.getSelection().toString());\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          handleremove = _this$props.handleremove,\n          handleFileDownload = _this$props.handleFileDownload,\n          style = _this$props.style,\n          clickLoad = _this$props.clickLoad,\n          contentValue = _this$props.contentValue,\n          titleValue = _this$props.titleValue,\n          loadTxtRef = _this$props.loadTxtRef,\n          titleRef = _this$props.titleRef,\n          contentRef = _this$props.contentRef,\n          handleFileUpload = _this$props.handleFileUpload,\n          handleChange_title = _this$props.handleChange_title,\n          handleChange_content = _this$props.handleChange_content,\n          set_focus = _this$props.set_focus,\n          handleNewAtomText = _this$props.handleNewAtomText;\n    return React.createElement(\"div\", {\n      id: id + \"_body\",\n      className: \"resource_pane_tab_content\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Remove this tab from the resource pane\",\n      onClick: handleremove,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"load\" + id,\n      style: {\n        display: \"none\"\n      },\n      accept: \".txt\",\n      ref: loadTxtRef,\n      onChange: handleFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      id: \"load\" + id + \"_btn\",\n      className: \"btn btn-default\",\n      onClick: clickLoad,\n      title: \"Load a text file into this resource tab\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-upload fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      onClick: handleFileDownload,\n      title: \"Save this resource tab to a text file\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-download fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"toggle_edit_lock_button\",\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Toggle editability of the content area\",\n      onClick: this.toggle_edit_lock,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      id: \"toggle_edit_lock_icon_\" + id,\n      className: this.state.readOnly ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Add node from text selection\",\n      onClick: handleNewAtomText,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-puzzle-piece fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"textarea\", {\n      id: \"title_\" + id,\n      type: \"text\",\n      rows: \"1\",\n      style: {\n        resize: \"none\"\n      },\n      className: \"form-control\",\n      placeholder: \"The name of this resource...\",\n      onChange: handleChange_title,\n      ref: this.titleRef,\n      value: titleValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      id: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: id,\n      className: \"form-control\",\n      placeholder: \"Enter your source text here...\",\n      rows: \"20\",\n      ref: this.setTextInputRef,\n      onChange: handleChange_content,\n      style: {\n        resize: \"vertical\",\n        minHeight: \"35px\"\n      },\n      readOnly: this.state.readOnly,\n      value: contentValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TabBody;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/TabBody.js"],"names":["React","Component","FontAwesomeIcon","faPlusSquare","Button","TabBody","constructor","props","state","readOnly","focusRef","createRef","toggle_edit_lock","bind","handleGetSelectedText","setState","console","log","handleChange_content","e","contentValue","target","value","change_content","window","getSelection","toString","render","id","handleremove","handleFileDownload","style","clickLoad","titleValue","loadTxtRef","titleRef","contentRef","handleFileUpload","handleChange_title","set_focus","handleNewAtomText","display","resize","setTextInputRef","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\n\nclass TabBody extends React.Component {\n    constructor(props){\n        super(props);\n    \n\n        this.state = {\n            readOnly: true,\n        };\n        //create ref\n        this.focusRef = React.createRef();\n\n        this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n        this.handleGetSelectedText = this.handleGetSelectedText.bind(this);\n\n    }\n\n    toggle_edit_lock(){\n        this.setState({readOnly: !this.state.readOnly},() =>\n        console.log('content area locked'));\n    }\n\n    handleChange_content(e) {\n        let contentValue = e.target.value\n        console.log(contentValue);\n        this.props.change_content('', contentValue);\n\n       // this.props.change_content(this.props.id, contentValue);\n    }\n\n    handleGetSelectedText(){\n        if(window.getSelection){\n            console.log(window.getSelection().toString());\n        }\n\n    }\n\n    render() { \n        const {\n            \n            id,\n            handleremove,\n            handleFileDownload,\n            style,\n            clickLoad,\n            contentValue,\n            titleValue,\n            //element references\n            loadTxtRef,\n            titleRef,\n            contentRef,\n\n            handleFileUpload,\n            handleChange_title,\n            handleChange_content,\n            set_focus,\n            handleNewAtomText,\n\n        }=this.props\n\n\n\n        return (\n            <div id={id+\"_body\"} className=\"resource_pane_tab_content\" style={style}>\n                <form>\n                    <div className=\"form-group\">\n                        <Button \n                            type=\"button\" \n                            className=\"btn btn-default\" \n                            title=\"Remove this tab from the resource pane\"\n                            onClick={handleremove}\n                            variant=\"light\"\n                            >\n                                <i className=\"fa fa-trash fa-fw fa-lg\"></i>\n                            </Button>\n                            <input \n                                type=\"file\" \n                                id={\"load\" + id} \n                                style={{display: \"none\"}} \n                                accept=\".txt\" \n                                ref={loadTxtRef}\n                                onChange= {handleFileUpload}\n                            />\n                            <Button \n                                type=\"button\" \n                                id={\"load\" + id + \"_btn\"} \n                                className=\"btn btn-default\" \n                                onClick={clickLoad}\n\n                                title=\"Load a text file into this resource tab\"\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-upload fa-fw fa-lg\"></i>\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={handleFileDownload}\n                                title=\"Save this resource tab to a text file\"\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-download fa-fw fa-lg\"></i>\n                            </Button>\n                            <Button id=\"toggle_edit_lock_button\" \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Toggle editability of the content area\" \n                                onClick={ this.toggle_edit_lock}\n                                variant=\"light\"\n                            >\n                                <i \n                                    id={\"toggle_edit_lock_icon_\" + id} \n                                    className={(this.state.readOnly) ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\"}>\n                                </i>\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Add node from text selection\"\n                                onClick={handleNewAtomText}\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-puzzle-piece fa-fw fa-lg\"></i>\n                            </Button>\n                    </div>\n\n                    <div className=\"form-group\">\n                            <label>Title</label>\n                            <textarea \n                                id={\"title_\"+id} \n                                type=\"text\" \n                                rows=\"1\" \n                                style={{resize: \"none\"}} \n                                className=\"form-control\" \n                                placeholder=\"The name of this resource...\" \n                                onChange={handleChange_title}\n                                ref={this.titleRef}\n                                value={titleValue}\n                                >\n                            </textarea> \n                        <label>Content</label>\n                        <div id=\"textarea\">\n                            <textarea \n                                id={id} \n                                className=\"form-control\" \n                                placeholder=\"Enter your source text here...\" \n                                rows=\"20\" \n                                ref={this.setTextInputRef}\n                                onChange={handleChange_content} \n                                style={{resize: \"vertical\", minHeight: \"35px\"}} \n                                readOnly={this.state.readOnly}\n                                value= {contentValue}\n                                >\n                            </textarea>\n                        </div>  \n                    </div> \n                </form>\n            </div>\n        );\n    }\n}   \n\nexport default TabBody;"]},"metadata":{},"sourceType":"module"}