{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/SlideIn.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from './Modal'; //import Button from './MyButton';\n//import TextArea from'./TextArea';\n\n/*const interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}*/\n\nclass SlideIn extends Component {\n  constructor(props) {\n    super(props);\n    this.resetConfirmModal = {\n      trigger: {\n        triggerText: \"Reset\",\n        className: 'btn btn-danger',\n        triggerId: \"clear_storage_button\"\n      },\n      title: 'Reset MonkeyPuzzle',\n      content: \"<p>Are you sure that you want to reset MonkeyPuzzle?<br /> This will empty the current analysis and adjust all options back to their initial settings.</p>\",\n      footer: {\n        className: 'btn btn-danger',\n        value: 'Reset',\n        action: 'mp_reset()'\n      }\n    };\n    this.state = {};\n    this.confirmReset = this.confirmReset.bind(this);\n    this.loadDemoArgument = this.loadDemoArgument.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.filemanger = this.filemanger.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n  }\n\n  confirmReset() {\n    console.log(\"reset\"); //$('#confirm_reset_modal').modal('show');\"\n  }\n\n  loadDemoArgument() {\n    console.log('load');\n  }\n\n  set_analyst_name() {\n    console.log('set name');\n  }\n\n  set_analyst_email() {\n    console.log('set email');\n  }\n\n  filemanger() {\n    console.log('file manager');\n  }\n\n  loadSADFace() {\n    // \"document.getElementByID('loadJSON').click();\"\n    console.log('loadSADFace');\n  }\n\n  render() {\n    return (\n      /*Slidein Panel: START*/\n      React.createElement(\"nav\", {\n        id: \"menu\",\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/monkeypuzzle/\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"menu-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"menu-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"MonkeyPuzzle\"))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Interface\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"toggle_resources\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Toggle the visibility of the resources pane\",\n        children: \"Toggle Resource Pane\",\n        onClick: this.props.toggleResourcePane,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        modalProps: this.resetConfirmModal //onClick = {console.log(modalData.modalData[0])}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Export\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Import\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"upload-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        rel: \"ignore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Documentation\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"About MonkeyPuzzle\"), React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Quick-start\"), React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Code Repository\"), React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/issues\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Issue Tracker\"), React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Licensing\"))))\n      /* Slidein Panel: END */\n\n      /*}\n                 <nav id=\"menu\" className=\"menu\">\n                \t<a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n                    <header className=\"menu-header\">\n                        <span className=\"menu-header-title\">MonkeyPuzzle</span>\n                    </header>\n                  </a>\n      \n                  <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Interface</h3>\n                      <ul className=\"menu-section-list\">            \n                         <li>\n                          <a href=\"#\" id=\"toggle_resource\">\n                            <MyButton \n                              className=\"btn btn-default\"\n                              onClick={() => this.toggleResourcePane()}\n                              title=\"Toggle the visibility of the resources pane\"\n                            >\n                              Toggle Resource Pane\n                            </MyButton>\n                            </a>\n                         </li>\n                         <li>\n                          <a href=\"#\" id=\"clear_storage_button\">\n                            <MyButton\n                              className=\"btn btn-danger\"\n                              onClick={() => this.confirmReset()}\n                              title=\"Reset MonkeyPuzzle to her initial state\"\n                            >\n                              Reset\n                            </MyButton>\n                          </a>\n                         </li>\n                         <li>\n                           <a href=\"#\" id=\"load_demo_argument_button\">\n                            <MyButton\n                              className=\"btn btn-default\"\n                              onClick={() => this.loadDemoArgument()}\n                              title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                            >\n                              Load Demo \n                            </MyButton>\n                           </a>\n                         </li>\n                         <li>\n                           <div style={interfaceDivStyle}>\n                              <TextArea \n                                className = \"form-control\"\n                                id= \"analyst_name_textarea\"\n                                rows=\"1\"\n                                cols=\"20\"\n                                maxLength=\"40\"\n                                placeholder=\"Name\"\n                                title=\"Type your name here...\"\n                                onChange={() => this.set_analyst_name()}\n                              />\n                           </div>\n                         </li>\n                          <li>\n                           <div style={interfaceDivStyle}>\n                              <TextArea \n                                className = \"form-control\"\n                                id= \"analyst_email_textarea\"\n                                rows=\"1\"\n                                cols=\"20\"\n                                maxLength=\"40\"\n                                placeholder=\"Email\"\n                                title=\"Type your email here...\"\n                                onChange={() => this.set_analyst_email()}\n                              />\n                           </div>\n                         </li>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Export</h3>\n                      <ul className=\"menu-section-list\">\n                        <li>\n                          <div style={interfaceDivStyle}>\n                            <TextArea\n                              className=\"form-control\"\n                              id=\"export_filename\"\n                              rows=\"1\"\n                              cols=\"20\"\n                              maxLength=\"40\"\n                              placeholder=\"Filename\"\n                              title=\"The name for the exported file\"\n                            />\n                          </div>\n                        </li>\n                        <li>\n                          <a href=\"#\" id=\"export_button\">\n                            <MyButton\n                              className=\"btn btn-default\"\n                              onClick={() => this.download_sadface()}\n                              title=\"Export the current analysis to a SADFace formatted JSON document\"\n                            >\n                              SADFace\n                            </MyButton>\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#\" /*target=\"_blank\" id=\"download_png\">\n                            <MyButton \n                              className=\"btn btn_default\"\n                              title=\"Export the current analysis to a PNG image\"\n                              onClick={() => this.download_png()}\n                            >\n                              PNG\n                            </MyButton>\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#\" /*target=\"_blank\" id=\"download_jpg\">\n                            <MyButton\n                              className=\"btn btn_default\"\n                              title=\"Export the current analysis to a JPG image\"\n                              onClick={() => this.download_jpg()}\n                            >\n                              JPG\n                            </MyButton>\n                          </a>\n                        </li>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Import</h3>\n                      <ul className=\"menu-section-list\">\n                        <span className=\"upload-span\">\n                          <a rel=\"ignore\">\n                            <div display=\"inline-block\">\n                              <input id=\"loadJSON\" /*style=\"display:none;\" accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                              <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                            </div>\n                          </a>\n                        </span>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Documentation</h3>\n                      <ul className=\"menu-section-list\">\n                        <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                        <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                      </ul>\n                    </section>\n      \n                    </nav>\n                  */\n\n    );\n  }\n\n} // Slidein Panel: END \n\n\nexport default SlideIn;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/SlideIn.js"],"names":["React","Component","Button","Modal","SlideIn","constructor","props","resetConfirmModal","trigger","triggerText","className","triggerId","title","content","footer","value","action","state","confirmReset","bind","loadDemoArgument","set_analyst_name","set_analyst_email","filemanger","loadSADFace","console","log","render","toggleResourcePane","display"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAIA;AACA;;AAEA;;;;;AAMA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC9BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAwClBC,iBAxCkB,GAwCE;AACRC,MAAAA,OAAO,EAAC;AACNC,QAAAA,WAAW,EAAG,OADR;AAENC,QAAAA,SAAS,EAAE,gBAFL;AAGNC,QAAAA,SAAS,EAAE;AAHL,OADA;AAMNC,MAAAA,KAAK,EAAE,oBAND;AAONC,MAAAA,OAAO,EAAE,4JAPH;AAQNC,MAAAA,MAAM,EAAE;AACRJ,QAAAA,SAAS,EAAE,gBADH;AAERK,QAAAA,KAAK,EAAE,OAFC;AAGRC,QAAAA,MAAM,EAAE;AAHA;AARF,KAxCF;AAEhB,SAAKC,KAAL,GAAa,EAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBD,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKE,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKK,WAAL,GAAmB,KAAKA,WAAL,CAAiBL,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAIDD,EAAAA,YAAY,GAAE;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EADY,CAEZ;AACD;;AAEDN,EAAAA,gBAAgB,GAAE;AAChBK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AAEDL,EAAAA,gBAAgB,GAAE;AAChBI,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAEDJ,EAAAA,iBAAiB,GAAE;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD;;AAEDH,EAAAA,UAAU,GAAE;AACVE,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD;;AACDF,EAAAA,WAAW,GAAE;AACZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA;;AAiBDC,EAAAA,MAAM,GAAG;AACP;AACQ;AAEN;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAG,QAAA,IAAI,EAAC,uCAAR;AAAgD,QAAA,MAAM,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADJ,CADE,EAOF;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,EAAE,EAAC,kBADL;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,OAAO,EAAC,OAHV;AAIE,QAAA,KAAK,EAAC,6CAJR;AAKE,QAAA,QAAQ,EAAC,sBALX;AAME,QAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWsB,kBANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAYE,oBAAC,KAAD;AACE,QAAA,UAAU,EAAI,KAAKrB,iBADrB,CAEE;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CAFJ,CAPE,EAmCF;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAnCE,EA8CF;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACF;AAAM,QAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,GAAG,EAAC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAE;AAACsB,UAAAA,OAAO,EAAE;AAAV,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADE,CAFJ,CA9CE,EA6DF;AAAS,QAAA,SAAS,EAAC,cAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAC,oDAAR;AAA6D,QAAA,EAAE,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAG,QAAA,IAAI,EAAC,+DAAR;AAAwE,QAAA,EAAE,EAAC,GAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAGI;AAAG,QAAA,IAAI,EAAC,6CAAR;AAAsD,QAAA,EAAE,EAAC,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,EAII;AAAG,QAAA,IAAI,EAAC,oDAAR;AAA6D,QAAA,EAAE,EAAC,GAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJJ,EAKI;AAAG,QAAA,IAAI,EAAC,iEAAR;AAA0E,QAAA,EAAE,EAAC,GAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CAFJ,CA7DE;AA0EH;;AAKH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAlFI;AA6OD;;AAtS6B,C,CAuS7B;;;AAEH,eAAezB,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from './Modal';\n\n\n\n//import Button from './MyButton';\n//import TextArea from'./TextArea';\n\n/*const interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}*/\n\n\nclass SlideIn extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    };\n\n    this.confirmReset = this.confirmReset.bind(this);\n    this.loadDemoArgument = this.loadDemoArgument.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.filemanger = this.filemanger.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n  }\n\n   \n\n  confirmReset(){\n    console.log(\"reset\");\n    //$('#confirm_reset_modal').modal('show');\"\n  }\n  \n  loadDemoArgument(){\n    console.log('load');\n  }\n\n  set_analyst_name(){\n    console.log('set name');\n  }\n\n  set_analyst_email(){\n    console.log('set email');\n  }\n\n  filemanger(){\n    console.log('file manager');\n  }\n  loadSADFace(){\n   // \"document.getElementByID('loadJSON').click();\"\n   console.log('loadSADFace');\n  }\n\n  resetConfirmModal = {\n              trigger:{\n                triggerText:  \"Reset\",\n                className: 'btn btn-danger',\n                triggerId: \"clear_storage_button\",\n                      },\n                title: 'Reset MonkeyPuzzle',\n                content: \"<p>Are you sure that you want to reset MonkeyPuzzle?<br /> This will empty the current analysis and adjust all options back to their initial settings.</p>\",\n                footer: {\n                className: 'btn btn-danger',\n                value: 'Reset',\n                action: 'mp_reset()'\n    } \n  }\n\n  render() {\n    return (\n            /*Slidein Panel: START*/\n\n      <nav id=\"menu\" className=\"menu\">\n    <a href=\"http://arg.napier.ac.uk/monkeypuzzle/\" target=\"_blank\">\n        <header className=\"menu-header\">\n          <span className=\"menu-header-title\">MonkeyPuzzle</span>\n        </header>\n    </a>\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Interface</h3>\n        <ul className=\"menu-section-list\"> \n          <Button\n            id=\"toggle_resources\"\n            className=\"btn btn-default\" \n            variant=\"light\"\n            title=\"Toggle the visibility of the resources pane\"\n            children=\"Toggle Resource Pane\"\n            onClick={this.props.toggleResourcePane}\n\n          />\n\n           \n          <Modal \n            modalProps = {this.resetConfirmModal}  \n            //onClick = {console.log(modalData.modalData[0])}\n\n          />\n          {/*\n            <li><a href=\"#\" id=\"clear_storage_button\"><button className=\"btn btn-danger\" onClick=\"$('#confirm_reset_modal').modal('show');\" title=\"Reset MonkeyPuzzle to her initial state\">Reset</button></a></li>\n            <li><a href=\"#\" id=\"load_demo_argument_button\"><button className=\"btn btn-default\" /*onClick=\"load_demo_argument()\" title=\"Load a demonstration SADFace document into MonkeyPuzzle\">Load Demo</button></a></li>\n            <li><div style={{marginLeft: \"20px\", marginRight: \"60px\"}}><textarea id=\"analyst_name_textarea\" type=\"text\" rows=\"1\" cols=\"20\" maxLength=\"40\" style={{resize: \"none\"}} className=\"form-control\"  placeholder=\"Name\" title=\"Type your name here...\" onchange=\"set_analyst_name();\"></textarea></div></li>\n            <li><div style={{marginLeft: \"20px\", marginRight: \"60px\"}}><textarea id=\"analyst_email_textarea\" type=\"text\" rows=\"1\" cols=\"20\" maxLength=\"40\" style={{resize: \"none\"}} className=\"form-control\"  placeholder=\"Email\" title=\"Type your email address here...\" onchange=\"set_analyst_email();\"></textarea></div></li>*/}\n      </ul>\n      </section>\n\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Export</h3>\n        <ul className=\"menu-section-list\">\n           {/*} <li><div style={{marginLeft: \"20px\", marginRight: \"60px\"}}><textarea id=\"export_filename\" type=\"text\" rows=\"1\" cols=\"20\" maxLength=\"20\" style={{resize: \"none\"}} className=\"form-control\"  placeholder=\"Filename\" title=\"The name for the exported file\"></textarea></div></li>\n\n            <li><a href=\"#\" id=\"export_button\"><button className=\"btn btn-default\" onClick=\"download_sadface()\" title=\"Export the current analysis to a SADFace formatted JSON document\">SADFace</button></a></li>\n            <li><a href=\"#\" target=\"_blank\" id=\"download_png\"><button className=\"btn btn-default\" title=\"Export the current analysis to a PNG image\" onClick=\"download_png()\">PNG</button></a></li>\n            <li><a href=\"#\" target=\"_blank\" id=\"download_jpg\"><button className=\"btn btn-default\" title=\"Export the current analysis to a JPG image\" onClick=\"download_jpg()\">JPG</button></a></li>*/}\n      </ul>\n      </section>\n      \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Import</h3>\n        <ul className=\"menu-section-list\">\n      <span className=\"upload-span\">\n        <a rel=\"ignore\">\n          <div style={{display: \"inline-block\"}}>\n           {/*} <input id=\"loadJSON\" style={{display: \"none\"}} accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"upload-button\" onChange=\"filemanager('load','json',null,null,null)\"/>\n                        <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onclick=\"document.getElementById('loadJSON').click();\" title=\"Load a SADFace formatted JSON document into MonkeyPuzzle\"/>*/}\n          </div>\n        </a>\n      </span>\n      \n        </ul>\n    </section>\n  \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Documentation</h3>\n        <ul className=\"menu-section-list\">            \n            <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n            <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n            <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n            <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n            <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n      </ul>\n      </section>\n    </nav>\n\n\n   /* Slidein Panel: END */\n\n\n\n\n/*}\n           <nav id=\"menu\" className=\"menu\">\n          \t<a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n              <header className=\"menu-header\">\n                  <span className=\"menu-header-title\">MonkeyPuzzle</span>\n              </header>\n            </a>\n\n            <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Interface</h3>\n                <ul className=\"menu-section-list\">            \n                   <li>\n                    <a href=\"#\" id=\"toggle_resource\">\n                      <MyButton \n                        className=\"btn btn-default\"\n                        onClick={() => this.toggleResourcePane()}\n                        title=\"Toggle the visibility of the resources pane\"\n                      >\n                        Toggle Resource Pane\n                      </MyButton>\n                      </a>\n                   </li>\n                   <li>\n                    <a href=\"#\" id=\"clear_storage_button\">\n                      <MyButton\n                        className=\"btn btn-danger\"\n                        onClick={() => this.confirmReset()}\n                        title=\"Reset MonkeyPuzzle to her initial state\"\n                      >\n                        Reset\n                      </MyButton>\n                    </a>\n                   </li>\n                   <li>\n                     <a href=\"#\" id=\"load_demo_argument_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.loadDemoArgument()}\n                        title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                      >\n                        Load Demo \n                      </MyButton>\n                     </a>\n                   </li>\n                   <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_name_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Name\"\n                          title=\"Type your name here...\"\n                          onChange={() => this.set_analyst_name()}\n                        />\n                     </div>\n                   </li>\n                    <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_email_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Email\"\n                          title=\"Type your email here...\"\n                          onChange={() => this.set_analyst_email()}\n                        />\n                     </div>\n                   </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Export</h3>\n                <ul className=\"menu-section-list\">\n                  <li>\n                    <div style={interfaceDivStyle}>\n                      <TextArea\n                        className=\"form-control\"\n                        id=\"export_filename\"\n                        rows=\"1\"\n                        cols=\"20\"\n                        maxLength=\"40\"\n                        placeholder=\"Filename\"\n                        title=\"The name for the exported file\"\n                      />\n                    </div>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"export_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.download_sadface()}\n                        title=\"Export the current analysis to a SADFace formatted JSON document\"\n                      >\n                        SADFace\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\" id=\"download_png\">\n                      <MyButton \n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a PNG image\"\n                        onClick={() => this.download_png()}\n                      >\n                        PNG\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\" id=\"download_jpg\">\n                      <MyButton\n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a JPG image\"\n                        onClick={() => this.download_jpg()}\n                      >\n                        JPG\n                      </MyButton>\n                    </a>\n                  </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Import</h3>\n                <ul className=\"menu-section-list\">\n                  <span className=\"upload-span\">\n                    <a rel=\"ignore\">\n                      <div display=\"inline-block\">\n                        <input id=\"loadJSON\" /*style=\"display:none;\" accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                        <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                      </div>\n                    </a>\n                  </span>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Documentation</h3>\n                <ul className=\"menu-section-list\">\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                </ul>\n              </section>\n\n              </nav>\n            */\n    );\n  }\n}  // Slidein Panel: END \n\nexport default SlideIn;\n"]},"metadata":{},"sourceType":"module"}