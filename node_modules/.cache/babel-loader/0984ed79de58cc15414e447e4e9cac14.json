{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout'; //import Components\n\nimport Menu from './Components/Menu/Menu';\nimport MenuTrigger from './Components/Menu/MenuTrigger';\nimport ResourcePane from './Components/ResourcePane/ResourcePane';\nimport VisualisationPane from './Components/VisualisationPane/VisualisationPane';\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { update, add_resource, add_resource_metadata, download, update_resource, remove_resources_from_nodes, loadSADFace, saveSADFace, delete_resource, get_sd, import_json, export_cytoscape } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showResourcePane: true,\n      newResource: null,\n      resourcesFromJson: null,\n      selectedText: '',\n      cyData: null,\n      jpg: '',\n      png: '',\n      fileName: '',\n      json: '',\n      current_sadface_doc: null,\n      focused: null,\n      newAtomFromText: false,\n      uploadSADFACE: null\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.fileManager = this.fileManager.bind(this);\n    this.setCyData = this.setCyData.bind(this); //ResourcePane Functions\n\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.setNewResource = this.setNewResource.bind(this);\n    this.setResourcesFromJson = this.setResourcesFromJson.bind(this);\n    this.setSelectedText = this.setSelectedText.bind(this);\n    this.addAtomFromText = this.addAtomFromText.bind(this); //Menu\n\n    this.handleSetPng = this.handleSetPng.bind(this);\n    this.handleSetJpg = this.handleSetJpg.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.setFileName = this.setFileName.bind(this); //Cytoscape\n\n    this.clearSelection = this.clearSelection.bind(this);\n    this.setCurrentSadFaceDoc = this.setCurrentSadFaceDoc.bind(this);\n    this.updateLocalStorage = this.updateLocalStorage.bind(this);\n    this.setFocus = this.setFocus.bind(this);\n    this.setUploadSADFACE = this.setUploadSADFACE.bind(this);\n  }\n\n  setUploadSADFACE(value) {\n    this.setState({\n      uploadSADFACE: value\n    }, () => console.log(this.state.uploadSADFace, \"UploadSAdFace\"));\n  }\n\n  updateLocalStorage() {\n    // var undo_item = JSON.parse(current_sadface_doc);\n    // undo_stack.push(undo_item);\n    // redo_stack = [];\n    // cm.showMenuItem(\"undo\");\n    // cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    update();\n  }\n\n  setCurrentSadFaceDoc(value) {\n    this.setState({\n      current_sadface_doc: value\n    }, () => console.log(\"current sad face doc updated\"));\n  }\n\n  addAtomFromText() {\n    console.log(\"addAtomFromText\");\n    this.setState({\n      newAtomFromText: !this.state.newAtomFromText\n    }, () => console.log(this.state.newAtomFromText, \"set newAtomFromText\"));\n  } //Menu function\n\n\n  handleSetPng(png) {\n    this.setState({\n      png: png\n    }, () => console.log('PNG set'));\n  }\n\n  handleSetJpg(jpg) {\n    this.setState({\n      jpg: jpg\n    }, () => console.log('JPG set'));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  toggleMenu() {\n    this.slideout.toggle();\n  }\n\n  fileManager(operation, filetype, tab, files) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    if (\"save\" === operation) {\n      let filename = ''; // if it's a txt file\n\n      if (\"txt\" === filetype) {\n        if (tab.metadata.title !== '') {\n          filename = tab.metadata.title + \".txt\";\n        } else {\n          filename = \"tab \" + tab.id + \"_text.txt\";\n        }\n\n        let text = tab.content;\n        download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" === filetype) {\n        let filename = this.state.fileName;\n\n        if (filename.length === 0) {\n          filename = \"default\";\n        }\n\n        saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" === operation) {\n      // if it's a txt file\n      if (\"txt\" === filetype) {\n        let file = files[0];\n        let filename = file.name;\n        let reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          update_resource(tab.id, content, filename);\n          let newResource = {};\n          newResource.tab = tab;\n          newResource.filename = filename;\n          newResource.content = content;\n          this.setNewResource(newResource);\n        }.bind(this);\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" === filetype) {\n        console.log('IMPORT JSON');\n        let files = document.getElementById(\"loadJSON\").files;\n        let file = files[0];\n        let reader = loadSADFace(file);\n\n        if (reader !== null) {\n          reader.onload = function (e) {\n            let result = reader.result;\n            localStorage.setItem(\"state\", result);\n            this.loadJSON(result);\n          }.bind(this);\n        }\n      }\n    }\n  }\n\n  setNewResource(value) {\n    this.setState({\n      newResource: value\n    }, () => console.log(this.state.newResource, 'newresource set'));\n  }\n\n  loadJSON(json_value) {\n    if (json_value != null) {\n      let importJSON = import_json(json_value);\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n      this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n      this.setResourcesFromJson(importJSON.resources);\n      this.setCyData(export_cytoscape(importJSON));\n    }\n  }\n\n  setResourcesFromJson(value) {\n    this.setState({\n      resourcesFromJson: value\n    }, () => console.log(this.state.resourcesFromJson, \"resourcesFromJson set\"));\n  }\n\n  setSelectedText(text) {\n    if (text !== null && text.length > 1) {\n      this.setState(state => ({\n        selectedText: text\n      }), () => console.log(this.state.selectedText, \"setSelectedText\"));\n    } else {\n      this.clearSelection();\n    }\n  }\n\n  setFocus(element) {\n    this.setState({\n      focused: element\n    }, () => console.log(this.state.focused, 'focus set'));\n  }\n\n  clearSelection() {\n    this.setState(() => ({\n      selectedText: ''\n    }), () => console.log(this.state.selectedText, \"clear selection\"));\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  setFileName(file_name) {\n    this.setState({\n      fileName: file_name\n    }, () => console.log(this.state.fileName, 'filename app'));\n  }\n\n  load_demo_argument() {\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc))); //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n  }\n\n  setCyData(val) {\n    this.setState({\n      cyData: val\n    }, () => console.log(\"cydata set\"));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => console.log(this.state.current_sadface_doc),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, \"Current sadface doc\"), React.createElement(Menu //functions\n    , {\n      toggleResourcePane: this.toggleResourcePane,\n      load_demo_argument: this.load_demo_argument,\n      setFileName: this.setFileName,\n      fileManager: this.fileManager //state\n      ,\n      png: this.state.png,\n      jpg: this.state.jpg,\n      fileName: this.state.fileName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"main\", {\n      id: \"panel\",\n      className: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ui-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(ResourcePane //state\n    , {\n      showResourcePane: this.state.showResourcePane,\n      newResource: this.state.newResource,\n      resourcesFromJson: this.state.resourcesFromJson,\n      selectedText: this.state.selectedText //functions\n      ,\n      updateLocalStorage: this.updateLocalStorage,\n      fileManager: this.fileManager,\n      setFocus: this.setFocus,\n      setSelectedText: this.setSelectedText,\n      addAtomFromText: this.addAtomFromText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"splitter\",\n      id: \"splitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"visualisation-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"navbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(MenuTrigger, {\n      className: \"btn-hamburger toggle-button\",\n      onClick: this.toggleMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(VisualisationPane //state\n    , {\n      showResourcePane: this.state.showResourcePane,\n      cyData: this.state.cyData,\n      newAtomFromText: this.state.newAtomFromText,\n      selectedText: this.state.selectedText,\n      focused: this.state.focused,\n      newAtomFromText: this.state.newAtomFromText,\n      addAtomFromText: this.addAtomFromText,\n      current_sadface_doc: this.state.current_sadface_doc //function\n      ,\n      handleSetPng: this.handleSetPng,\n      handleSetJpg: this.handleSetJpg,\n      loadJSON: this.loadJSON,\n      setCurrentSadFaceDoc: this.setCurrentSadFaceDoc,\n      setCyData: this.setCyData,\n      updateLocalStorage: this.updateLocalStorage,\n      clearSelection: this.clearSelection,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","Menu","MenuTrigger","ResourcePane","VisualisationPane","update","add_resource","add_resource_metadata","download","update_resource","remove_resources_from_nodes","loadSADFace","saveSADFace","delete_resource","get_sd","import_json","export_cytoscape","App","constructor","props","state","showResourcePane","newResource","resourcesFromJson","selectedText","cyData","jpg","png","fileName","json","current_sadface_doc","focused","newAtomFromText","uploadSADFACE","toggleMenu","bind","loadJSON","fileManager","setCyData","toggleResourcePane","setNewResource","setResourcesFromJson","setSelectedText","addAtomFromText","handleSetPng","handleSetJpg","load_demo_argument","setFileName","clearSelection","setCurrentSadFaceDoc","updateLocalStorage","setFocus","setUploadSADFACE","value","setState","console","log","uploadSADFace","localStorage","setItem","JSON","stringify","componentDidMount","slideout","document","getElementById","toggle","operation","filetype","tab","files","filename","metadata","title","id","text","content","length","file","name","reader","FileReader","onload","e","result","readAsText","json_value","importJSON","resources","element","file_name","demo_sadface_doc","val","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n//import Components\nimport Menu from './Components/Menu/Menu';\nimport MenuTrigger from './Components/Menu/MenuTrigger';\nimport ResourcePane from './Components/ResourcePane/ResourcePane';\nimport VisualisationPane from './Components/VisualisationPane/VisualisationPane';\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {update,add_resource, add_resource_metadata,download, update_resource,remove_resources_from_nodes, loadSADFace,saveSADFace, delete_resource, get_sd,import_json, export_cytoscape} from './lib/Sadface'; \n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n            showResourcePane: true,\n            newResource: null,\n            resourcesFromJson: null,\n            selectedText:'',\n            cyData: null,\n            jpg:'',\n            png: '',\n            fileName:'',\n            json: '',\n            current_sadface_doc:null,\n            \n            focused: null,\n            newAtomFromText: false,\n            uploadSADFACE: null,\n        };\n\n\n        this.toggleMenu = this.toggleMenu.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.fileManager = this.fileManager.bind(this);\n        this.setCyData = this.setCyData.bind(this);\n\n        //ResourcePane Functions\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.setNewResource =this.setNewResource.bind(this);\n        this.setResourcesFromJson = this.setResourcesFromJson.bind(this);\n\n\n        this.setSelectedText = this.setSelectedText.bind(this);\n        this.addAtomFromText = this.addAtomFromText.bind(this);\n        //Menu\n        this.handleSetPng = this.handleSetPng.bind(this);\n        this.handleSetJpg = this.handleSetJpg.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n        //Cytoscape\n        this.clearSelection = this.clearSelection.bind(this);\n        this.setCurrentSadFaceDoc = this.setCurrentSadFaceDoc.bind(this);\n        this.updateLocalStorage = this.updateLocalStorage.bind(this);\n        this.setFocus = this.setFocus.bind(this);\n        this.setUploadSADFACE =this.setUploadSADFACE.bind(this);\n\n    }\n\n    setUploadSADFACE(value){\n      this.setState({uploadSADFACE: value}, () =>\n        console.log(this.state.uploadSADFace, \"UploadSAdFace\"))\n    }\nupdateLocalStorage() {\n   // var undo_item = JSON.parse(current_sadface_doc);\n   // undo_stack.push(undo_item);\n   // redo_stack = [];\n   // cm.showMenuItem(\"undo\");\n   // cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n    update();\n}\n\nsetCurrentSadFaceDoc(value){\n    this.setState({current_sadface_doc: value}, () =>\n        console.log(\"current sad face doc updated\" ));\n}\n\n\n\naddAtomFromText(){\n  console.log(\"addAtomFromText\");\n       this.setState({newAtomFromText: !this.state.newAtomFromText}, () =>\n           console.log(this.state.newAtomFromText, \"set newAtomFromText\"));\n}\n\n//Menu function\nhandleSetPng(png){\n    this.setState({png: png}, () =>\n        console.log('PNG set'));\n}\n\nhandleSetJpg(jpg){\n    this.setState({jpg: jpg}, () =>\n        console.log('JPG set'));\n}\n\ncomponentDidMount() {\n    this.slideout = new Slideout({\n        'panel': document.getElementById('panel'),\n        'menu': document.getElementById('menu'),\n        \"fx\": \"ease\",\n        \"side\": \"right\",\n        \"duration\": 500,\n        \"padding\": 256,\n        \"tolerance\": 70,\n    });\n}\n\ntoggleMenu(){\n    this.slideout.toggle();\n}\n\nfileManager(operation, filetype, tab, files) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    if (\"save\" === operation)    {\n        let filename = '';\n        // if it's a txt file\n        if (\"txt\" === filetype) {   \n\n            if (tab.metadata.title !== '') {\n                 filename = tab.metadata.title+\".txt\";\n            } else {\n                 filename = \"tab \"+tab.id+\"_text.txt\";\n            }\n            let text = tab.content;\n            download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" === filetype) {\n           let filename = this.state.fileName;\n            if(filename.length === 0){ filename = \"default\"}\n               saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" === operation) {\n        // if it's a txt file\n        if (\"txt\" === filetype) {\n            \n            \n            let file = files[0];\n            let filename = file.name;\n            let reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                update_resource(tab.id, content, filename);\n                let newResource = {};\n                newResource.tab = tab;\n                newResource.filename = filename;\n                newResource.content =content;\n                this.setNewResource(newResource);\n            }.bind(this);\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" === filetype) {\n            console.log('IMPORT JSON');\n            let files = document.getElementById(\"loadJSON\").files;\n            let file = files[0];\n            let reader = loadSADFace(file);\n            if (reader !== null){\n            reader.onload = function(e) {\n                let result = reader.result;\n                localStorage.setItem(\"state\",result);\n              this.loadJSON(result);\n            }.bind(this);\n        }\n        }\n    }\n}\n\nsetNewResource(value){\n  this.setState({newResource: value}, () =>\n    console.log(this.state.newResource, 'newresource set'));\n}\n\n loadJSON(json_value) {\n\n     if(json_value != null){\n     let importJSON = import_json(json_value);\n      localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n      this.setCurrentSadFaceDoc(JSON.stringify(get_sd()));\n      this.setResourcesFromJson(importJSON.resources);\n      this.setCyData(export_cytoscape(importJSON)); \n      }  \n } \n\n setResourcesFromJson(value){\n  this.setState({resourcesFromJson: value}, () =>\n    console.log(this.state.resourcesFromJson, \"resourcesFromJson set\"))\n }\n\nsetSelectedText(text){\n    if(text!== null && text.length > 1){\n        this.setState((state) => ({\n        selectedText: text,\n    }), () =>\n    console.log(this.state.selectedText, \"setSelectedText\"));\n\n    }else{\n       this.clearSelection();   \n       }    \n}\n\n setFocus(element){    \n         this.setState({focused: element}, () =>\n         console.log(this.state.focused, 'focus set'));\n }\n\nclearSelection() {\n    this.setState(() => ({\n        selectedText: '',\n    }), () => console.log(this.state.selectedText, \"clear selection\"));\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\n\n setFileName(file_name){\n    this.setState({fileName: file_name}, () => \n      console.log(this.state.fileName, 'filename app'));\n  }\n\nload_demo_argument(){\n   var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n    this.setCyData(export_cytoscape(import_json(demo_sadface_doc)))\n    //this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n    //    console.log(this.state.cy_data, 'cy_data'));\n}\n\nsetCyData(val){\n    this.setState({cyData: val},() =>\n        console.log(\"cydata set\"));\n}\n\n\n\nrender(){\n\n    return (\n    \t<div>\n      <button\n      onClick={() => console.log(this.state.current_sadface_doc)}\n      >\n      Current sadface doc\n      </button>\n\n\n\n    \t<Menu \n        //functions\n        toggleResourcePane={this.toggleResourcePane}\n        load_demo_argument={this.load_demo_argument}\n        setFileName={this.setFileName}\n        fileManager={this.fileManager}\n        //state\n        png={this.state.png}\n        jpg={this.state.jpg}\n        fileName = {this.state.fileName}\n        />\n\n        <main id=\"panel\" className=\"panel\">\n\n        <div className=\"ui-container\">\n          <ResourcePane \n            //state\n            showResourcePane={this.state.showResourcePane}\n            newResource={this.state.newResource}\n            resourcesFromJson={this.state.resourcesFromJson}\n            selectedText={this.state.selectedText}\n            //functions\n            updateLocalStorage={this.updateLocalStorage}\n            fileManager={this.fileManager}\n            setFocus={this.setFocus}\n            setSelectedText={this.setSelectedText}\n            addAtomFromText={this.addAtomFromText}\n\n\n         />\n          <div className=\"splitter\" id=\"splitter\">\n          </div>\n\n          <div className=\"visualisation-pane\">\n              <div id=\"navbar\">\n                 \n                  <MenuTrigger\n                    className=\"btn-hamburger toggle-button\"\n                    onClick={this.toggleMenu}\n                  />\n              </div>\n              <VisualisationPane\n                //state\n                showResourcePane = {this.state.showResourcePane}\n                cyData= {this.state.cyData}\n                newAtomFromText = {this.state.newAtomFromText}\n                selectedText = {this.state.selectedText}\n                focused = {this.state.focused}\n                newAtomFromText={this.state.newAtomFromText}\n                addAtomFromText={this.addAtomFromText}\n                current_sadface_doc = {this.state.current_sadface_doc}\n\n\n\n                //function\n                handleSetPng = {this.handleSetPng}\n                handleSetJpg = {this.handleSetJpg}\n                loadJSON = {this.loadJSON}\n                setCurrentSadFaceDoc={this.setCurrentSadFaceDoc}\n                setCyData={this.setCyData}\n                updateLocalStorage={this.updateLocalStorage}\n                clearSelection ={this.clearSelection}\n              />\n              \n          </div>\n      </div>\n        </main>\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}