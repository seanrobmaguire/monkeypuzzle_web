{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape'; //import Components\n\nimport ResourcePane from './Components/ResourcePane';\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\nimport Modal from './Components/Modal'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { import_json, export_cytoscape, new_uuid } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: [],\n      last_number: 1,\n      tab_id: \"\",\n      sd: {},\n      showResourcePane: true,\n      test: {},\n      activeTab: 0,\n      cy_data: null\n    };\n    this.test = this.test.bind(this);\n    this.add_tab = this.add_tab.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.download = this.download.bind(this);\n    this.saveSADFace = this.saveSADFace.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.remove_all_tabs = this.remove_all_tabs.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.mp_reset = this.mp_reset.bind(this);\n    this.clear_local_storage = this.clear_local_storage.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.download = this.download.bind(this); //ResourcePane Functions\n\n    this.change_title = this.change_title.bind(this);\n    this.set_text_resource_content = this.set_text_resource_content.bind(this); //slide in\n\n    this.loadDemoArgument = this.loadDemoArgument.bind(this);\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = this.new_resource(content); // this.state.sd.resouces =[];\n      // this.setState({\n      //     sd.resources: sd.resources.concat(res);\n      //        })\n\n      return res;\n    }\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  openAddBoardModal() {\n    this.setState({\n      boardAddModalShow: true\n    }, function () {\n      console.log(this.state.boardAddModalShow);\n    });\n  }\n\n  createNewTab() {}\n\n  next_number() {\n    var current_number = this.state.last_number;\n    this.setState({\n      last_number: this.state.last_number + 1\n    });\n    return current_number;\n  }\n\n  add_tab(load_id = null) {\n    var newTab = {};\n    var length;\n\n    if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n      var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n\n      if (resource_type_txt.toLowerCase() === \"text\") {\n        newTab.type = \"text\";\n      }\n\n      newTab.tab_id = new_resource.id;\n      newTab.content = new_resource.content;\n      newTab.metadata = new_resource.metadata;\n      newTab.active = true;\n      this.add_resource_metadata(this.state.tab_id, 'title', ''); //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    } else {\n      newTab.tab_id = load_id;\n    } //  set_active_tab(tab_id+\"_body\");\n    // return this.state.tab_id\n    //SetState with callback ensures updated value is used\n\n\n    this.setState(state => {\n      const tabs = state.tabs.concat(newTab);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(this.state.tabs.length);\n      length = this.state.tabs.length;\n      length = length - 1;\n      console.log(\"llength\" + length);\n      this.setActiveTab(length);\n    });\n  }\n\n  test(index) {\n    this.setState({\n      activeTab: index\n    });\n    console.log(this.activeTab);\n  }\n\n  setActiveTab(value) {\n    this.setState({\n      activeTab: value\n    }, function () {\n      console.log(this.state.activeTab);\n    });\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.sate.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    this.setState(state => {\n      const tabs = state.tabs.filter((item, j) => i !== j);\n      return {\n        tabs\n      };\n    });\n    /*\n        delete_resource(current_tab);\n        sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (current_tab in node.sources) {\n                    delete_source(node.id, current_tab);\n                }\n            }\n        });\n        \n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        if (tabs.length >= 1 && idx != -1)\n        {\n            tabs.splice(idx, 1);\n            current_tab = tabs[tabs.length-1];\n            set_active_tab(current_tab+\"_body\");\n        }\n    */\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  download(filename, text) {}\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        if (document.getElementById(\"title_\" + tab_id).value !== '') {\n          var filename = document.getElementById(\"title_\" + tab_id).value + \".txt\";\n        } else {\n          var filename = \"tab\" + tab_id + \"_text.txt\";\n        }\n\n        var text = document.getElementById(tab_id).value;\n        this.download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = document.getElementById(\"export_filename\").value;\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        this.saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + tab_id).files;\n        var file = files[0];\n        var filename = file.name;\n        document.getElementById(\"title_\" + tab_id).innerText = filename;\n        console.log(file.name);\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          document.getElementById(tab_id).innerText = content;\n          this.update_resource(tab_id, content, filename);\n        };\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = this.loadSADFace(file);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          this.remove_all_tabs();\n          this.loadTabs(json.resources);\n        };\n      }\n    }\n  }\n\n  download(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \" + filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n    outfile.click();\n    document.body.removeChild(outfile);\n  }\n\n  get_resource(resource_id) {\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n     Returns: An resource dict\n    */\n    if (resource_id) {\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n      return resource;\n    }\n  }\n\n  isTab_id(tab) {\n    return tab.tab_id;\n  }\n\n  loadTabs() {}\n\n  saveSADFace() {}\n\n  loadSADFace() {}\n\n  loadJSON() {}\n\n  loadTabs(tabs) {\n    this.state.tabs.forEach(function (tab) {\n      this.load_tab(tab);\n    });\n  }\n\n  load_tab(resource) {\n    if (resource != null) {\n      var tab_id = resource.id;\n      this.add_tab(tab_id);\n      this.set_text_resource_title(tab_id, resource.metadata.title);\n      this.set_text_resource_content(tab_id, resource.content);\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      console.log(\"update resource\");\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.title = title;\n        }\n        /*  this.state.sd.resources.forEach((res) => {\n              if(res.id === resource_id) {\n                  res = resource;\n              }\n          });*/\n\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n\n      this.setState({\n        tabs\n      }, () => {\n        console.log(\"update tabs\");\n      });\n    }\n  } //Resource Pane Functions\n\n\n  change_title(tab_id, val) {\n    console.log(\"change title\" + tab_id + val);\n    this.set_text_resource_title(tab_id, val);\n  }\n\n  set_text_resource_title(tab_id, title) {\n    console.log(\"set text resource title\" + tab_id + title);\n    this.update_resource(tab_id, null, title); //    this.update_local_storage();\n  }\n\n  change_content(tab_id, val) {\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n  }\n\n  set_text_resource_content(tab_id, text) {\n    this.update_resource(tab_id, text, null); //update_local_storage();\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  mp_reset() {\n    this.clear_local_storage();\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  set_analyst_name() {\n    console.log(\"set_analyst_name\");\n  }\n\n  set_analyst_email() {\n    console.log(\"set_analyst_email\");\n  }\n\n  download_sadface() {\n    console.log(\"download_sadface\");\n  }\n\n  download_png() {\n    console.log(\"download_png\");\n  }\n\n  download_jpg() {\n    console.log(\"download_jpg\");\n  }\n\n  loadDemoArgument() {\n    console.log('load demo');\n    var elements = [// list of graph elements to start with\n    {\n      // node a\n      data: {\n        id: 'a'\n      }\n    }, {\n      // node b\n      data: {\n        id: 'b'\n      }\n    }, {\n      // edge ab\n      data: {\n        id: 'ab',\n        source: 'a',\n        target: 'b'\n      }\n    }];\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    var cy_data = export_cytoscape(import_json(demo_sadface_doc)); // initCytoscape();\n\n    var elements = JSON.parse(cy_data);\n    console.log(elements);\n    this.setState({\n      cy_data: elements\n    }, () => console.log(this.state.cy_data));\n    console.log(this.state.cy_data);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      toggleResourcePane: this.toggleResourcePane,\n      mp_reset: this.mp_reset,\n      loadDemoArgument: this.loadDemoArgument,\n      set_analyst_name: this.set_analyst_name,\n      set_analyst_email: this.set_analyst_email,\n      download_sadface: this.download_sadface,\n      download_png: this.download_png,\n      download_jpg: this.download_jpg,\n      fileManager: this.fileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      activeTab: this.state.activeTab,\n      setActiveTab: this.setActiveTab,\n      fileManager: this.fileManager,\n      change_title: this.change_title,\n      change_content: this.change_content,\n      new_uuid: this.new_uuid,\n      loadTabs: this.loadTabs,\n      cy_data: this.state.cy_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","ReactCytoscape","ResourcePane","MainUI","Menu","Modal","import_json","export_cytoscape","new_uuid","App","constructor","props","state","tabs","last_number","tab_id","sd","showResourcePane","test","activeTab","cy_data","bind","add_tab","toggleButton","add_resource","add_to_tabs_arr","remove_tab","download","saveSADFace","update_resource","loadSADFace","loadJSON","remove_all_tabs","loadTabs","get_resource","toggleResourcePane","mp_reset","clear_local_storage","set_analyst_name","set_analyst_email","download_sadface","download_png","download_jpg","add_resource_metadata","setActiveTab","change_title","set_text_resource_content","loadDemoArgument","content","res","new_resource","setState","concat","console","log","openAddBoardModal","boardAddModalShow","createNewTab","next_number","current_number","load_id","newTab","length","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","toLowerCase","type","id","metadata","active","index","value","resource_id","key","sate","resources","forEach","componentDidMount","slideout","i","filter","item","j","toggle","filename","fileManager","operation","filetype","files","file","name","innerText","reader","FileReader","onload","e","result","readAsText","localStorage","setItem","json","JSON","parse","outfile","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","resource","findIndex","tab","isTab_id","load_tab","set_text_resource_title","title","undefined","val","change_content","clear","window","location","reload","elements","data","source","target","demo_sadface_doc","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape';\n\n//import Components\nimport ResourcePane from './Components/ResourcePane';\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\n\nimport Modal from './Components/Modal';\n\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {import_json, export_cytoscape, new_uuid} from './lib/Sadface'; \n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 1,\n\t\t\ttab_id:\"\",\n            sd: {},\n            showResourcePane: true,\n            test:{},\n            activeTab: 0,\n            cy_data: null,\n\n\n\n\n\n\t\t};\n        this.test = this.test.bind(this);\n\t\tthis.add_tab = this.add_tab.bind(this);\n\t\tthis.toggleButton = this.toggleButton.bind(this);\n\t\tthis.add_resource =this.add_resource.bind(this);\n\t\tthis.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.download = this.download.bind(this);\n        this.saveSADFace = this.saveSADFace.bind(this);\n        this.update_resource =this.update_resource.bind(this);\n        this.loadSADFace =this.loadSADFace.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.remove_all_tabs = this.remove_all_tabs.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.mp_reset =this.mp_reset.bind(this);\n        this.clear_local_storage = this.clear_local_storage.bind(this);\n        this.set_analyst_name = this.set_analyst_name.bind(this);\n        this.set_analyst_email =this.set_analyst_email.bind(this);\n        this.download_sadface =this.download_sadface.bind(this);\n        this.download_png =this.download_png.bind(this);\n        this.download_jpg = this.download_jpg.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.download = this.download.bind(this);\n\n        //ResourcePane Functions\n        this.change_title = this.change_title.bind(this);\n        this.set_text_resource_content = this.set_text_resource_content.bind(this);\n\n        //slide in\n        this.loadDemoArgument = this.loadDemoArgument.bind(this);\n\n\n\t}\n\n\n\n\n\n\tadd_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = this.new_resource(content);\n       // this.state.sd.resouces =[];\n       // this.setState({\n       //     sd.resources: sd.resources.concat(res);\n\n//        })\n        return res;\n    }\n}\n\n\n\nadd_to_tabs_arr(tab_id){\n\tthis.setState(state => {\n\t\tconst tabs = state.tabs.concat(tab_id);\n\t\treturn {\n\t\t\ttabs,\n\t\t}}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n\t\n}\nopenAddBoardModal(){\n        this.setState({ boardAddModalShow: true }, function () {\n             console.log(this.state.boardAddModalShow);\n        });\n\n}\n\ncreateNewTab(){\n}\n\n next_number(){\n \t var current_number = this.state.last_number\n \t this.setState({ last_number: this.state.last_number + 1})\n \t return current_number;\n }\n\n \t\n\n\t\n\n\tadd_tab(load_id=null){\n        var newTab = {};\n        var length;\n\t\tif (load_id == null) {\n            var new_resource = this.add_resource(' ');\n\n            var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n            var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n            if (resource_type_txt.toLowerCase() === \"text\") { \n                newTab.type = \"text\"\n            }\n\n            newTab.tab_id = new_resource.id;\n            newTab.content = new_resource.content;\n            newTab.metadata = new_resource.metadata;\n            newTab.active = true;\n\n        \tthis.add_resource_metadata(this.state.tab_id, 'title', '');\n\t\t  //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\t\t} else { newTab.tab_id= load_id }\n  //  set_active_tab(tab_id+\"_body\");\n   // return this.state.tab_id\n\n//SetState with callback ensures updated value is used\n\nthis.setState(state => {\n        const tabs = state.tabs.concat(newTab);\n        return {\n            tabs,\n        }}, function () {\n            console.log(this.state.tabs.length);\n            length = this.state.tabs.length;\n            length = length -1;\n            console.log(\"llength\" +length);\n            this.setActiveTab(length);\n\n        }        );\n\n             \n        \n    }\n\n    test(index) {\n        this.setState({\n            activeTab: index\n        });\n        console.log(this.activeTab);\n    }\n\n setActiveTab(value){\n    this.setState({\n        activeTab: value\n    }, function (){\n        console.log(this.state.activeTab);\n    });\n   \n\n\n}\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.sate.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\n\t new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n\n\n\n\n\n\n \tcomponentDidMount() {\n  \tthis.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n  });\n}\n\nremove_tab(i){\n    this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        return {\n            tabs,\n        };\n    });\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n*/\n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n        this.slideout.toggle();\n\t}\n\n\n\ndownload(filename,text){\n\n}\n\n    fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n   if (\"save\" == operation)    {\n        // if it's a txt file\n        if (\"txt\" == filetype) {    \n            if (document.getElementById(\"title_\"+tab_id).value !== '') {\n                var filename = document.getElementById(\"title_\"+tab_id).value+\".txt\";\n            } else {\n                var filename = \"tab\"+tab_id+\"_text.txt\";\n            }\n            var text = document.getElementById(tab_id).value;\n            this.download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var filename = document.getElementById(\"export_filename\").value;\n            if(filename.length == 0){ filename = \"default\"}\n            this.saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            var files = document.getElementById(\"load\"+tab_id).files;\n            var file = files[0];\n            var filename = file.name;\n            document.getElementById(\"title_\"+tab_id).innerText = filename;\n            console.log(file.name);\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                document.getElementById(tab_id).innerText = content;\n                this.update_resource(tab_id, content, filename);\n            }\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = this.loadSADFace(file);\n            reader.onload = function(e) {\n                var result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                this.remove_all_tabs();\n                this.loadTabs(json.resources);\n            }\n        }\n    }\n}\n\ndownload(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \"+filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n\n    outfile.click();\n\n    document.body.removeChild(outfile);\n}\n\n\nget_resource(resource_id){\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n\n    Returns: An resource dict\n    */\n    if(resource_id){\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n        return resource;\n    }\n}\n\nisTab_id(tab){\n    return tab.tab_id\n}\nloadTabs(){\n\n}\n\nsaveSADFace(){\n\n}\n\nloadSADFace(){\n\n}\n\nloadJSON(){\n\n}\n\nloadTabs(tabs) {\n    this.state.tabs.forEach(function(tab) {\n       this.load_tab(tab);\n    });\n}\n\nload_tab(resource) {\n    if (resource != null) {\n        var tab_id = resource.id;\n        this.add_tab(tab_id);\n        this.set_text_resource_title(tab_id, resource.metadata.title);\n        this.set_text_resource_content(tab_id, resource.content);\n    }\n}\n\nupdate_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    \n\n    if (resource_id && (content || title)) {\n        console.log(\"update resource\");\n\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.title = title;\n            }\n          /*  this.state.sd.resources.forEach((res) => {\n                if(res.id === resource_id) {\n                    res = resource;\n                }\n            });*/\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n        this.setState({tabs}, () =>{\n            console.log(\"update tabs\");\n        });\n    }\n}\n\n//Resource Pane Functions\nchange_title(tab_id, val) {\n    console.log(\"change title\" +tab_id+val);\n    this.set_text_resource_title(tab_id, val)\n}\n\nset_text_resource_title(tab_id, title){\nconsole.log(\"set text resource title\" +tab_id + title)\n    this.update_resource(tab_id, null, title);\n//    this.update_local_storage();\n}\n\nchange_content(tab_id, val){\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n}\n\nset_text_resource_content(tab_id, text){\n    this.update_resource(tab_id, text, null);\n    //update_local_storage();\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\nmp_reset()\n{\n    this.clear_local_storage();\n}\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\n\n\nset_analyst_name(){\n    console.log(\"set_analyst_name\");\n}\n\nset_analyst_email(){\n    console.log(\"set_analyst_email\");\n}\n\ndownload_sadface(){\n    console.log(\"download_sadface\")\n}\n\ndownload_png(){\n    console.log(\"download_png\");\n}\n\ndownload_jpg(){\n    console.log(\"download_jpg\");\n}\n\nloadDemoArgument(){\n    console.log('load demo');\n    var elements = [ // list of graph elements to start with\n    { // node a\n      data: { id: 'a' }\n    },\n    { // node b\n      data: { id: 'b' }\n    },\n    { // edge ab\n      data: { id: 'ab', source: 'a', target: 'b' }\n    }\n  ];\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n    var cy_data = export_cytoscape(import_json(demo_sadface_doc));\n   // initCytoscape();\n   var elements = JSON.parse(cy_data);\n   console.log(elements);\n   this.setState({cy_data: elements}, () => console.log(this.state.cy_data))\n   console.log(this.state.cy_data);\n  }\n\n \n  render(){\n\n    return (\n    \t<div>\n   \n      \n        \n    \t<Menu \n            toggleResourcePane={this.toggleResourcePane}\n            mp_reset={this.mp_reset}\n            loadDemoArgument={this.loadDemoArgument}\n            set_analyst_name={this.set_analyst_name}\n            set_analyst_email={this.set_analyst_email}\n            download_sadface={this.download_sadface}\n            download_png={this.download_png}\n            download_jpg={this.download_jpg}\n            fileManager={this.fileManager}\n\n        />\n\n\t\t\t<MainUI\n\t\t\t   toggleSlideIn={() => this.toggleButton()}\n\t\t\t addTab = {() => this.add_tab()}\n\t\t\t   tabs = {this.state.tabs}\n               remove_tab={this.remove_tab}\n               fileManager={this.fileManager}\n               showResourcePane={this.state.showResourcePane}\n              activeTab={this.state.activeTab}\n              setActiveTab={this.setActiveTab}\n              fileManager={this.fileManager}\n              change_title={this.change_title}\n              change_content={this.change_content}\n              new_uuid = {this.new_uuid}\n              loadTabs= {this.loadTabs}\n              cy_data= {this.state.cy_data}\n               \n\n\n\t\t\t/>\n \n   </div>\n\n      );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}