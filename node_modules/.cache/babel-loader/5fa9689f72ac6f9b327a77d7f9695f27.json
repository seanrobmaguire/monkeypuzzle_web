{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/MainUI.js\";\nimport React, { Component } from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport SlideInTrigger from './SlideInTrigger';\n\nclass MainUI extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      current_tab: '0'\n    };\n  }\n\n  set_active_tab(tab_id) {\n    if (this.props.tabs.length > 0) {\n      console.log(\"set active tabs \" + tab_id);\n      this.setState({\n        current_tab: tab_id.substring(0, tab_is.indexOf(\"_body\"))\n      });\n      /*tab_id.substring( 0, tab_id.indexOf(\"_body\") );\n      /* var i, tabcontent, tablinks;\n       tabcontent = document.getElementsByClassName(\"resource_pane_tab_content\");\n         for (i = 0; i < tabcontent.length; i++) {\n             tabcontent[i].style.display = \"none\";\n        }\n       tablinks = document.getElementsByClassName(\"tablinks\");\n         for (i = 0; i < tablinks.length; i++) {\n            tablinks[i].className = tablinks[i].className.replace(\"active\", \"\");\n       }\n      if (document.getElementById(tab_id)) {\n         document.getElementById(tab_id).style.display = \"block\";\n         document.getElementById(this.state.current_tab+\"_btn\").className += \" active\";\n      }*/\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          toggleSlideIn = _this$props.toggleSlideIn,\n          addTab = _this$props.addTab,\n          tabs = _this$props.tabs;\n    return (\n      /* Main UI: START */\n      React.createElement(\"main\", {\n        id: \"panel\",\n        className: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"hello \", this.state.current_tab), React.createElement(\"div\", {\n        className: \"ui-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"resource-pane\",\n        id: \"resource-pane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"resource_pane_tab_head\",\n        id: \"resource_pane_tab_head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalProps: this.newResourceModal,\n        onClick: addTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, tabs.map(item => {\n        const onHandleSetActiveTab = () => this.set_active_tab(item.tab_id + '_body');\n\n        return React.createElement(\"button\", {\n          key: item.tab_number,\n          id: item.tab_id + '_btn',\n          onClick: onHandleSetActiveTab,\n          type: \"button\",\n          className: \"tablinks\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, item.tab_number);\n      }))), React.createElement(\"div\", {\n        className: \"tab_body\",\n        id: \"tab_body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"splitter\",\n        id: \"splitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"visualisation-pane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(SlideInTrigger, {\n        className: \"btn-hamburger toggle-button\",\n        onClick: toggleSlideIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))))\n      /* Main UI: END */\n\n    );\n  }\n\n}\n\nexport default MainUI;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/MainUI.js"],"names":["React","Component","Modal","FontAwesomeIcon","faPlusSquare","SlideInTrigger","MainUI","constructor","props","newResourceModal","trigger","triggerText","className","triggerId","id","title","content","footer","value","state","current_tab","set_active_tab","tab_id","tabs","length","console","log","setState","substring","tab_is","indexOf","render","toggleSlideIn","addTab","map","item","onHandleSetActiveTab","tab_number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\nimport SlideInTrigger from './SlideInTrigger';\n\n\n\nclass MainUI extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      current_tab:'0',\n    }\n  };\n\n  newResourceModal = {\n    trigger: {\n      triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n      className: 'add_tab_button',\n      triggerId: \"add_tab_button\",\n    },\n    id:\"resource_pane_selection_modal\",\n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n     // action: this.add_tab() \n    }\n\n  };\n\n  set_active_tab(tab_id){\n  if(this.props.tabs.length > 0){\n    console.log(\"set active tabs \"+tab_id);\n     this.setState({current_tab:  tab_id.substring(0, tab_is.indexOf(\"_body\")) });\n     /*tab_id.substring( 0, tab_id.indexOf(\"_body\") );\n     /* var i, tabcontent, tablinks;\n      tabcontent = document.getElementsByClassName(\"resource_pane_tab_content\");\n        for (i = 0; i < tabcontent.length; i++) {\n            tabcontent[i].style.display = \"none\";\n       }\n      tablinks = document.getElementsByClassName(\"tablinks\");\n        for (i = 0; i < tablinks.length; i++) {\n           tablinks[i].className = tablinks[i].className.replace(\"active\", \"\");\n      }\n    if (document.getElementById(tab_id)) {\n        document.getElementById(tab_id).style.display = \"block\";\n        document.getElementById(this.state.current_tab+\"_btn\").className += \" active\";\n    }*/\n    \n  }\n}\n\n\n  render() {\n    const {\n      toggleSlideIn,\n      addTab,\n      tabs\n\n    } = this.props;\n    return (\n            /* Main UI: START */\n\n    <main id=\"panel\" className=\"panel\">\n    <h1>hello {this.state.current_tab}</h1>\n    <div className=\"ui-container\">\n        <div className=\"resource-pane\" id=\"resource-pane\">\n            <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n              <Modal \n                modalProps = {this.newResourceModal}\n                onClick = {addTab}\n                />\n                <div>\n              {tabs.map(item =>{\n                const onHandleSetActiveTab = () =>\n                this.set_active_tab(item.tab_id+'_body');\n\n                  return (\n                    <button\n                      key={item.tab_number}\n                      id={item.tab_id+'_btn'}\n                      onClick = {onHandleSetActiveTab}\n                      type=\"button\"\n                      className=\"tablinks\"\n                    >\n                      {item.tab_number}\n                    </button>\n                  );\n                }                                                     \n                  )}\n                  \n              </div>\n            </div>\n            <div className=\"tab_body\" id=\"tab_body\"></div>        \n        </div>\n\n        <div className=\"splitter\" id=\"splitter\">\n        </div>\n\n        <div className=\"visualisation-pane\">\n            <div id=\"navbar\">\n               \n                <SlideInTrigger\n                  className=\"btn-hamburger toggle-button\"\n                  onClick={toggleSlideIn}\n                />\n            </div>\n           {/*} <div id=\"cy\" onDrop=\"drop_handler(event);\" onDragover=\"dragover_handler(event);\"></div>*/}\n        </div>\n    </div>\n    </main>\n\n   /* Main UI: END */\n    );\n  }\n}\n\n\n\nexport default MainUI;"]},"metadata":{},"sourceType":"module"}