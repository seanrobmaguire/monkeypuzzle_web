{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane/ResourceBody/ResourceBody.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/Button';\nimport { FaLockOpen, FaLock, FaPuzzlePiece, FaDownload, FaUpload, FaTrashAlt } from 'react-icons/fa';\nimport './ResourceBody.css';\n\nclass TabBody extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      readOnly: true\n    }; //create ref\n\n    this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n    this.handleGetSelectedText = this.handleGetSelectedText.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n  }\n\n  toggle_edit_lock() {\n    this.setState({\n      readOnly: !this.state.readOnly\n    }, () => console.log('content area locked'));\n  }\n\n  handleGetSelectedText() {\n    if (window.getSelection().toString().length >= 1) {\n      let select = window.getSelection().toString();\n      this.props.setSelectedText(select);\n    } else {\n      console.log(\"noSelect\");\n      this.props.setSelectedText('');\n    } //       this.props.setSelectedText(window.getSelection().toString()); \n    // }else{\n    //window.getSelection().empty();\n    //        this.props.setSelectedText('')    }\n\n  }\n\n  handleFocus(e) {\n    this.props.setFocus(e.target.id);\n  }\n\n  render() {\n    const _this$props = this.props,\n          id = _this$props.id,\n          handleremove = _this$props.handleremove,\n          handleFileDownload = _this$props.handleFileDownload,\n          style = _this$props.style,\n          clickLoad = _this$props.clickLoad,\n          contentValue = _this$props.contentValue,\n          titleValue = _this$props.titleValue,\n          loadTxtRef = _this$props.loadTxtRef,\n          titleRef = _this$props.titleRef,\n          handleFileUpload = _this$props.handleFileUpload,\n          handleChange_title = _this$props.handleChange_title,\n          handleChangeContent = _this$props.handleChangeContent,\n          handleAddAtomFromText = _this$props.handleAddAtomFromText;\n    return React.createElement(\"div\", {\n      id: id + \"_body\",\n      className: \"resource_pane_tab_content\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      variant: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Remove this tab from the resource pane\",\n      onClick: handleremove,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(FaTrashAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"load\" + id,\n      style: {\n        display: \"none\"\n      },\n      accept: \".txt\",\n      ref: loadTxtRef,\n      onChange: handleFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      id: \"load\" + id + \"_btn\",\n      className: \"btn btn-default\",\n      onClick: clickLoad,\n      title: \"Load a text file into this resource tab\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(FaUpload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      onClick: handleFileDownload,\n      title: \"Save this resource tab to a text file\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(FaDownload, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"toggle_edit_lock_button \" + id,\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Toggle editability of the content area\",\n      onClick: this.toggle_edit_lock,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.readOnly ? React.createElement(FaLock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }) : React.createElement(FaLockOpen, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Add node from text selection\",\n      onClick: handleAddAtomFromText,\n      variant: \"light\",\n      disabled: this.props.selectedText.length >= 1 ? false : true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(FaPuzzlePiece, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"textarea\", {\n      id: \"title_\" + id,\n      type: \"text\",\n      rows: \"1\",\n      style: {\n        resize: \"none\"\n      },\n      className: \"form-control\",\n      placeholder: \"The name of this resource...\",\n      onChange: handleChange_title,\n      ref: titleRef,\n      value: titleValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      id: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: id,\n      className: \"form-control\",\n      placeholder: \"Enter your source text here...\",\n      rows: \"20\",\n      ref: this.setTextInputRef,\n      onChange: handleChangeContent,\n      style: {\n        resize: \"vertical\",\n        minHeight: \"35px\"\n      },\n      readOnly: this.state.readOnly,\n      value: contentValue,\n      onMouseUp: this.handleGetSelectedText,\n      onFocus: this.handleFocus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TabBody;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane/ResourceBody/ResourceBody.js"],"names":["React","Component","Button","ButtonGroup","FaLockOpen","FaLock","FaPuzzlePiece","FaDownload","FaUpload","FaTrashAlt","TabBody","constructor","props","state","readOnly","toggle_edit_lock","bind","handleGetSelectedText","handleFocus","setState","console","log","window","getSelection","toString","length","select","setSelectedText","e","setFocus","target","id","render","handleremove","handleFileDownload","style","clickLoad","contentValue","titleValue","loadTxtRef","titleRef","handleFileUpload","handleChange_title","handleChangeContent","handleAddAtomFromText","display","selectedText","resize","setTextInputRef","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/Button';\nimport { FaLockOpen, FaLock, FaPuzzlePiece, FaDownload, FaUpload, FaTrashAlt} from 'react-icons/fa';\n\n\n\nimport './ResourceBody.css';\n\n\n\nclass TabBody extends Component {\n    constructor(props){\n        super(props);\n    \n\n        this.state = {\n            readOnly: true,\n        };\n        //create ref\n\n        this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n        this.handleGetSelectedText = this.handleGetSelectedText.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n\n    }\n\n    toggle_edit_lock(){\n        this.setState({readOnly: !this.state.readOnly},() =>\n        console.log('content area locked'));\n    }\n\n\n    handleGetSelectedText(){\n        if(window.getSelection().toString().length >= 1){\n            let select = window.getSelection().toString();\n            this.props.setSelectedText(select); \n    }else{\n        console.log(\"noSelect\");\n        this.props.setSelectedText('') \n    }\n\n    //       this.props.setSelectedText(window.getSelection().toString()); \n   // }else{\n        //window.getSelection().empty();\n    //        this.props.setSelectedText('')    }\n}\nhandleFocus(e){\n    this.props.setFocus(e.target.id);\n}\n\n    render() { \n        const {\n            \n            id,\n            handleremove,\n            handleFileDownload,\n            style,\n            clickLoad,\n            contentValue,\n            titleValue,\n            //element references\n            loadTxtRef,\n            titleRef,\n\n            handleFileUpload,\n            handleChange_title,\n            handleChangeContent,\n            handleAddAtomFromText,\n\n        }=this.props\n\n\n\n        return (\n            <div id={id+\"_body\"} className=\"resource_pane_tab_content\" style={style}>\n                <form>\n                    <div className=\"form-group\">\n                    <ButtonGroup variant=\"\">\n                        <Button \n                            type=\"button\" \n                            className=\"btn btn-default\" \n                            title=\"Remove this tab from the resource pane\"\n                            onClick={handleremove}\n                            variant=\"light\"\n                            >\n                                <FaTrashAlt  />\n                            </Button>\n                            <input \n                                type=\"file\" \n                                id={\"load\" + id} \n                                style={{display: \"none\"}} \n                                accept=\".txt\" \n                                ref={loadTxtRef}\n                                onChange= {handleFileUpload}\n                            />\n                            <Button \n                                type=\"button\" \n                                id={\"load\" + id + \"_btn\"} \n                                className=\"btn btn-default\" \n                                onClick={clickLoad}\n\n                                title=\"Load a text file into this resource tab\"\n                                variant=\"light\"\n                            >\n                                <FaUpload />\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={handleFileDownload}\n                                title=\"Save this resource tab to a text file\"\n                                variant=\"light\"\n                            >\n                                <FaDownload />\n                            </Button>\n                            <Button id={\"toggle_edit_lock_button \" + id}\n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Toggle editability of the content area\" \n                                onClick={ this.toggle_edit_lock}\n                                variant=\"light\"\n                            >\n                                {(this.state.readOnly) ? <FaLock /> : <FaLockOpen />}\n                                \n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Add node from text selection\"\n                                onClick={handleAddAtomFromText}\n                                variant=\"light\"\n                                disabled={(this.props.selectedText.length >= 1) ? false: true}\n                            >\n                            <FaPuzzlePiece />\n                            </Button>\n                            </ButtonGroup>\n                    </div>\n\n                    <div className=\"form-group\">\n                            <label>Title</label>\n                            <textarea \n                                id={\"title_\"+id} \n                                type=\"text\" \n                                rows=\"1\" \n                                style={{resize: \"none\"}} \n                                className=\"form-control\" \n                                placeholder=\"The name of this resource...\" \n                                onChange={handleChange_title}\n                                ref={titleRef}\n                                value={titleValue}\n                                >\n                            </textarea> \n                        <label>Content</label>\n                        <div id=\"textarea\">\n                            <textarea \n                                id={id} \n                                className=\"form-control\" \n                                placeholder=\"Enter your source text here...\" \n                                rows=\"20\" \n                                ref={this.setTextInputRef}\n                                onChange={handleChangeContent} \n                                style={{resize: \"vertical\", minHeight: \"35px\"}} \n                                readOnly={this.state.readOnly}\n                                value= {contentValue}\n                                onMouseUp = {this.handleGetSelectedText}\n                                onFocus={this.handleFocus}\n                                >\n                            </textarea>\n                        </div>  \n                    </div> \n                </form>\n            </div>\n        );\n    }\n}   \n\nexport default TabBody;"]},"metadata":{},"sourceType":"module"}