{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/VisualisationPane/VisualisationPane.js\";\nimport React, { Component } from 'react';\nimport Modal from '../Modal/Modal';\nimport cytoscape from 'cytoscape';\nimport cola from 'cytoscape-cola';\nimport edgehandles from 'cytoscape-edgehandles';\nimport $ from 'jquery';\nimport contextMenus from 'cytoscape-context-menus';\nimport 'cytoscape-context-menus/cytoscape-context-menus.css';\nimport { remove_falsy, update_scheme, update_atom_metadata, import_json, export_cytoscape, add_atom, sd, add_scheme, add_edge, get_atom, now, new_uuid, update_atom_text, get_sd, delete_edge, update, add_source } from '../../lib/Sadface';\ncytoscape.use(cola);\ncytoscape.use(contextMenus, $);\ncytoscape.use(edgehandles);\n\nclass Cytoscape extends Component {\n  constructor(props) {\n    super(props); //create Refs\n\n    this.newAtomRef = React.createRef();\n    this.newSchemeRef = React.createRef();\n    this.editContentRef = React.createRef();\n    this.state = {\n      modalValue: ' ',\n      dropDownValue: ' ' //variables\n\n    };\n    this.cy = null;\n    this.default_sadface_doc = \"{\\\"analyst_email\\\":\\\"\" + this.analyst_email + \"\\\",\\\"analyst_name\\\":\\\"\" + this.analyst_email + \"\\\",\\\"created\\\":\\\"\" + this.created_date + \"\\\",\\\"edges\\\":[],\\\"edited\\\":\\\"\" + this.edited_date + \"\\\",\\\"id\\\":\\\"\" + this.document_id + \"\\\",\\\"metadata\\\":{},\\\"nodes\\\":[],\\\"resources\\\": []}\";\n    this.analyst_email = \"Default Analyst Email\";\n    this.analyst_name = \"Default Analsyst Name\";\n    this.position = null;\n    this.edit_atom = null;\n    this.selected = [];\n    this.redo_stack = [];\n    this.undo_stack = [];\n    this.running = false; //functions\n\n    this.initialise_monkeypuzzle = this.initialise_monkeypuzzle.bind(this);\n    this.initCytoscape = this.initCytoscape.bind(this);\n    this.setModalValue = this.setModalValue.bind(this);\n    this.handleModalValueChange = this.handleModalValueChange.bind(this);\n    this.setDropDownValue = this.setDropDownValue.bind(this);\n    this.handledropDownValue = this.handledropDownValue.bind(this);\n    this.addScheme = this.addScheme.bind(this);\n    this.editScheme = this.editScheme.bind(this);\n    this.addAtom = this.addAtom.bind(this);\n    this.editAtomContent = this.editAtomContent.bind(this);\n    this.editAtomMetadata = this.editAtomMetadata.bind(this);\n    this.deleteAtom = this.deleteAtom.bind(this);\n    this.deleteNodes = this.deleteNodes.bind(this);\n    this.undo = this.undo.bind(this);\n    this.redrawVisualisation = this.redrawVisualisation.bind(this);\n    this.dragoverHandler = this.dragoverHandler.bind(this);\n    this.dropHandler = this.dropHandler.bind(this);\n  }\n\n  initialise_monkeypuzzle() {\n    //load diagram if there is one in localStorage\n    if (localStorage.getItem(\"state\") !== \"undefined\") {\n      //         this.props.loadJSON(localStorage.getItem(\"state\"));\n      this.initCytoscape(); // //else use default\n    } else {\n      this.props.setCurrentSadFaceDoc(this.default_sadface_doc); //    localStorage.setItem(\"state\", this.props.current_sadface_doc);\n\n      this.props.setCyData(export_cytoscape(import_json(this.props.current_sadface_doc)));\n      this.initCytoscape();\n    }\n  }\n\n  initCytoscape() {\n    this.cy = cytoscape({\n      container: document.getElementById('cy'),\n      elements: JSON.parse(this.props.cyData),\n      style: [{\n        selector: \"node\",\n        style: {\n          \"label\": \"data(content)\",\n          \"text-opacity\": 0.7,\n          // \"width\" : \"auto\",\n          //    \"height\" : \"auto\",\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          \"text-outline-color\": \"#eee\",\n          \"text-outline-width\": 1\n        }\n      }, {\n        selector: \"[typeshape]\",\n        style: {\n          \"shape\": \"data(typeshape)\"\n        }\n      }, {\n        selector: \"node[typeshape='diamond']\",\n        style: {\n          'background-color': '#CC9900'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Conflict']\",\n        style: {\n          'background-color': 'red'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Support']\",\n        style: {\n          'background-color': 'green'\n        }\n      }, {\n        selector: \"edge\",\n        style: {\n          \"line-color\": \"#9dbaea\",\n          \"target-arrow-shape\": \"triangle\",\n          \"target-arrow-color\": \"#9dbaea\",\n          \"curve-style\": \"bezier\"\n        }\n      }, {\n        selector: \":selected\",\n        style: {\n          \"border-width\": \"1\",\n          \"border-color\": \"black\",\n          \"background-color\": \"#3399CC\"\n        }\n      }, {\n        selector: \".atom-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }, {\n        selector: \".scheme-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }, {\n        selector: '.eh-handle',\n        style: {\n          'background-color': 'orange',\n          'width': 10,\n          'height': 10,\n          'shape': 'ellipse',\n          'overlay-opacity': 0,\n          'border-width': 8,\n          // makes the handle easier to hit\n          'border-opacity': 0,\n          'label': ''\n        }\n      }],\n      boxSelectionEnabled: false,\n      autounselectify: false,\n      selectionType: \"single\",\n      minZoom: 0.1,\n      maxZoom: 1.5\n    }); //cytoscapefunction\n\n    this.layout = this.build_cola_layout();\n    this.layout.run();\n    this.cy.edgehandles({\n      toggleOffOnLeave: true,\n      handleNodes: \"node\",\n      handleSize: 10,\n      handleColor: \"#DF0085\",\n      handleHitThreshold: 8,\n      handleLineWidth: 5,\n      //handleLineType: \"flat\",\n      edgeType: function () {\n        return \"flat\";\n      },\n      complete: function (event, sourceNode, targetNode, addedEles) {\n        if (targetNode.length !== 0) {\n          var source_id = targetNode[0].source().id();\n          var target_id = targetNode[0].target().id(); //get the mid point between source node and target node\n\n          var source_position = targetNode[0].source().position();\n          var target_position = targetNode[0].target().position();\n          this.position = {};\n          this.position.x = (source_position.x + target_position.x) / 2;\n          this.position.y = (source_position.y + target_position.y) / 2;\n\n          if (targetNode[0].source().data().type === \"atom\" && targetNode[0].target().data().type === \"atom\") {\n            var scheme = add_scheme(\"Support\");\n            var scheme_id = scheme.id;\n            var scheme_content = scheme.name; //remove the automatically generated edge\n\n            targetNode.remove();\n            this.cy.add([{\n              group: \"nodes\",\n              data: {\n                id: scheme_id.toString(),\n                content: scheme_content,\n                typeshape: \"diamond\"\n              },\n              classes: \"scheme-label\",\n              locked: false,\n              position: this.position\n            }]);\n            var edge1 = add_edge(source_id, scheme_id);\n            var edge2 = add_edge(scheme_id, target_id);\n            this.cy.add([{\n              group: \"edges\",\n              data: {\n                id: edge1.id.toString(),\n                source: source_id,\n                target: scheme_id\n              }\n            }, {\n              group: \"edges\",\n              data: {\n                id: edge2.id.toString(),\n                source: scheme_id,\n                target: target_id\n              }\n            }]);\n          } else {\n            targetNode.remove();\n            var edge = add_edge(source_id, target_id);\n            this.cy.add([{\n              group: \"edges\",\n              data: {\n                id: edge.id.toString(),\n                source: source_id,\n                target: target_id\n              }\n            }]);\n          }\n\n          this.props.updateLocalStorage();\n        } else {\n          targetNode.remove();\n        }\n      }.bind(this)\n    }); //edgehandles\n\n    /*\n    *\n    * Set up context menus\n    *\n    * */\n\n    this.cm = this.cy.contextMenus({\n      menuItems: [{\n        id: \"edit-content\",\n        content: \"edit content\",\n        selector: \"node[type = \\\"atom\\\"]\",\n        onClickFunction: function (event) {\n          let target = event.target || event.cyTarget;\n          document.getElementById(\"editContentTrigger\").click();\n          this.setModalValue(target.data().content);\n          this.edit_atom = target;\n        }.bind(this),\n        hasTrailingDivider: false\n      }, {\n        id: \"edit-metadata\",\n        content: \"edit metadata\",\n        selector: \"node[type = \\\"atom\\\"]\",\n        onClickFunction: function (event) {\n          let target = event.target || event.cyTarget;\n          let meta = JSON.stringify(target.data().metadata);\n          document.getElementById(\"editMetaTrigger\").click();\n          this.setModalValue(meta);\n          this.edit_atom = target;\n        }.bind(this),\n        hasTrailingDivider: true\n      }, {\n        id: \"change-scheme\",\n        content: \"change scheme\",\n        selector: \"node[typeshape = \\\"diamond\\\"]\",\n        onClickFunction: function (event) {\n          var target = event.target || event.cyTarget;\n          this.setDropDownValue(target.data().content);\n          document.getElementById(\"editSchemeTrigger\").click();\n          this.edit_atom = target;\n        }.bind(this),\n        hasTrailingDivider: true\n      }, {\n        id: \"remove\",\n        content: \"remove\",\n        selector: \"node, edge\",\n        onClickFunction: function (event) {\n          var target = event.target || event.cyTarget;\n\n          if (this.selected.length !== 0) {\n            this.selected.forEach(function (node) {\n              console.log(node, \"SELECTED\");\n              this.deleteNodes(node);\n            }.bind(this));\n            this.selected = [];\n          } else {\n            if (target.data().type === \"atom\") {\n              this.deleteNodes(event);\n              target.remove();\n            } else if (target.data().typeshape === \"diamond\") {\n              this.deleteNodes(event);\n              target.remove();\n            } else {\n              delete_edge(target.id());\n              this.updateLocalStorage();\n              target.remove();\n            }\n          }\n        }.bind(this),\n        hasTrailingDivider: true\n      }, {\n        id: \"add-atom\",\n        content: \"add atom\",\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.position = event.renderedPosition;\n          this.setModalValue(\"\");\n          document.getElementById(\"newAtomTrigger\").click();\n        }.bind(this)\n      }, {\n        id: \"add-scheme\",\n        content: \"add scheme\",\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.position = event.position || event.cyPosition;\n          this.setDropDownValue(\"Support\");\n          document.getElementById(\"new_scheme\").click();\n        }.bind(this),\n        hasTrailingDivider: true\n      }, {\n        id: \"redraw\",\n        content: \"redraw\",\n        coreAsWell: true,\n        onClickFunction: event => this.redrawVisualisation(),\n        hasTrailingDivider: true\n      }, {\n        id: \"undo\",\n        content: \"undo\",\n        selector: \"node, edge\",\n        show: true,\n        coreAsWell: true,\n        onClickFunction: event => this.undo(),\n        hasTrailingDivider: false\n      }, {\n        id: \"redo\",\n        content: \"redo\",\n        selector: \"node, edge\",\n        show: false,\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.redo();\n\n          if (this.redo_stack === []) {\n            this.cm.hideMenuItem(\"redo\");\n          }\n        }.bind(this),\n        hasTrailingDivider: true\n      }, {\n        id: \"merge_nodes\",\n        content: \"merge nodes\",\n        selector: \"node\",\n        tooltipText: \"hello\",\n        show: false,\n        coreAsWell: true,\n        onClickFunction: event => this.merge_nodes()\n      }] //menuitems\n\n    }); //close context menues\n\n    this.cy.on(\"layoutstart\", function () {\n      this.running = true;\n    });\n    this.cy.on(\"layoutstop\", function () {\n      this.running = false;\n      var png = this.cy.png({\n        full: true\n      });\n      console.log(this.cy, \"PNG\");\n      this.props.handleSetPng(png);\n      var jpg = this.cy.jpg({\n        full: true\n      });\n      this.props.handleSetJpg(jpg);\n    }.bind(this));\n  } //initmonkeyPuzzle\n\n\n  build_cola_layout(opts) {\n    var cola_params = {\n      name: \"cola\",\n      animate: true,\n      randomize: true,\n      padding: 100,\n      fit: false,\n      maxSimulationTime: 1500\n    };\n    var i = 0;\n\n    if (opts !== undefined) {\n      opts.forEach(function (opt) {\n        cola_params[i] = opts[i];\n        ++i;\n      });\n    }\n\n    return this.cy.makeLayout(cola_params);\n  }\n\n  setModalValue(newModalValue) {\n    console.log(newModalValue, \"NEWModalValue\");\n    this.setState({\n      modalValue: newModalValue\n    }, () => console.log(this.state.modalValue, 'modal value set'));\n  }\n\n  handleModalValueChange(e) {\n    console.log(e.target.value, \"E\");\n    this.setState({\n      modalValue: e.target.value\n    }, () => console.log(this.state.modalValue, \"modal value set\"));\n  }\n\n  setDropDownValue(newDropDownValue) {\n    this.setState({\n      dropDownValue: newDropDownValue\n    }, () => console.log(this.state.dropDownValue, 'modal value set'));\n  }\n\n  handledropDownValue(e) {\n    this.setState({\n      dropDownValue: e.target.value\n    }, () => console.log(this.state.dropDownValue, 'dropdown value'));\n  }\n\n  addAtom(content = null) {\n    console.log(this.state.modalValue, \"modal value\");\n\n    if (content === null) {\n      content = this.state.modalValue;\n    }\n\n    if (content === \"\") {\n      content = \"New Atom\";\n    }\n\n    var meta = {\n      \"hello\": \"world\"\n    };\n    var new_atom = add_atom(content);\n    var atom_id = new_atom.id;\n\n    if (this.props.focused != null) {\n      add_source(atom_id, this.props.focused.id, content, 0, 0);\n    }\n\n    if (this.position == null) {\n      this.position = {\n        \"x\": this.cy.width() / 2,\n        \"y\": this.cy.height() / 2\n      };\n    }\n\n    this.cy.add([{\n      group: \"nodes\",\n      data: {\n        id: atom_id.toString(),\n        content: content,\n        type: \"atom\",\n        typeshape: \"roundrectangle\",\n        metadata: meta\n      },\n      classes: \"atom-label\",\n      locked: false,\n      renderedPosition: this.position\n    }]);\n    let node = this.cy.getElementById(atom_id.toString());\n    this.position = null;\n    this.props.updateLocalStorage();\n  }\n\n  addScheme() {\n    let scheme = this.state.dropDownValue;\n    var new_scheme = add_scheme(scheme);\n    var scheme_id = new_scheme.id;\n    this.cy.add([{\n      group: \"nodes\",\n      data: {\n        id: scheme_id.toString(),\n        content: scheme,\n        type: \"scheme\",\n        typeshape: \"diamond\"\n      },\n      classes: \"scheme-label\",\n      locked: false,\n      position: this.position\n    }]);\n    this.props.updateLocalStorage();\n  }\n\n  editScheme() {\n    let content = this.state.dropDownValue;\n    let scheme = this.cy.$(\"#\" + this.edit_atom.id());\n    update_scheme(this.edit_atom.id(), content);\n    this.props.updateLocalStorage();\n    scheme.data(\"content\", content);\n    this.edit_atom = null;\n  }\n\n  editAtomContent() {\n    let editContent = this.state.modalValue;\n    let atom = this.cy.$(\"#\" + this.edit_atom.id());\n    update_atom_text(this.edit_atom.id(), editContent);\n    this.props.updateLocalStorage();\n    atom.data(\"content\", editContent);\n    this.edit_atom = null;\n  }\n\n  editAtomMetadata() {\n    let atom = this.cy.$(\"#\" + this.edit_atom.id());\n    let content = this.state.modalValue;\n\n    if (JSON.parse(content)) {\n      let metadata = JSON.parse(content);\n      update_atom_metadata(atom.id(), metadata);\n      this.props.updateLocalStorage();\n      this.edit_atom = null;\n    } else {\n      alert(\"Metadata not in JSON format, unable to update\");\n    }\n  }\n\n  deleteAtom(atom_id) {\n    /*\n    Remove the atom from the sadface document identified by the\n    supplied atom ID\n    */\n    console.log(atom_id, \"AtomID\");\n\n    if (atom_id) {\n      var atom = get_atom(atom_id);\n      console.log(atom, \"ATOM\");\n\n      if (atom !== null && atom !== undefined) {\n        var size = Object.keys(sd.nodes).length;\n\n        for (var i = 0; i < size; ++i) {\n          if (sd.nodes[i].id === atom.id) {\n            delete sd.nodes[i];\n            sd.nodes = remove_falsy(sd.nodes);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  deleteNodes(event) {\n    var target = event.target || event.cyTarget;\n    var id = target.id();\n    let removed = target.remove();\n    this.deleteAtom(id);\n    var i = 0;\n    var sds = get_sd();\n    var edges = sds.edges;\n    edges.forEach(function (edge) {\n      if (edges[i] !== undefined) {\n        if (edges[i].source_id === id || edges[i].target_id === id) {\n          delete_edge(edges[i].id);\n        }\n\n        ++i;\n      }\n    });\n    this.props.updateLocalStorage();\n  }\n\n  undo() {// if(this.props.undo_stack.length != 0){\n    //     let redo_item = get_sd();\n    //     this.props.setRedoStack(redo_item);\n    //     let state = this.props.undo_stack[this.props.undo_stack.length - 1];\n    //     console.log(this.props.undo_stack, \"state\");\n    //     this.props.loadJSON(JSON.stringify(state));\n    // }\n  }\n\n  redrawVisualisation() {\n    this.layout.stop();\n    this.layout.options.eles = this.cy.elements();\n    this.layout.run();\n    this.cy.center();\n    this.cy.resize();\n  }\n\n  dragoverHandler(ev) {\n    console.log(\"dragoverHandler\");\n    ev.preventDefault();\n    ev.dataTransfer.dropEffect = \"move\";\n  }\n\n  dropHandler(ev) {\n    ev.preventDefault();\n    this.position = {\n      x: ev.clientX - 300,\n      y: ev.clientY\n    };\n\n    if (this.props.selectedText !== null || this.props.selectedText != undefined) {\n      console.log(this.props.selectedText, 'TEXT');\n      this.addAtom(this.props.selectedText);\n      this.props.clearSelection();\n    } else {\n      console.log(\"Not a valid text selection.\");\n    }\n  }\n\n  componentDidMount() {\n    this.initialise_monkeypuzzle();\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.cyData !== prevState.cyData) {\n      return {\n        cyData: nextProps.cyData\n      };\n      this.initialise_monkeypuzzle();\n    } else return null;\n\n    if (nextProps.newAtomFromText !== prevState.newAtomFromText) {\n      return {\n        newAtomFromText: nextProps.cyData\n      };\n    } else return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.cyData !== this.props.cyData) {\n      //Perform some operation here\n      this.initialise_monkeypuzzle();\n    }\n\n    if (this.props.newAtomFromText === true) {\n      console.log(\"new atom from text\");\n      this.addAtom(this.props.selectedText);\n      this.props.addAtomFromText();\n      this.props.clearSelection();\n    }\n\n    if (prevProps.showResourcePane !== this.props.showResourcePane) {\n      this.redrawVisualisation();\n    }\n  }\n\n  render() {\n    /* New Atom Modal */\n    const newAtomModal = {\n      trigger: {\n        triggerText: 'New Atom',\n        triggerId: 'newAtomTrigger'\n      },\n      title: 'New Atom',\n      id: 'newAtomModal',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 636\n        },\n        __self: this\n      }, \"Add some content to the new atom\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"2\",\n        id: \"new_atom_content\",\n        onChange: this.handleModalValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: \"btn btn-secondary\",\n          value: \"Close\"\n        },\n        button2: {\n          className: 'btn btn-primary',\n          value: 'Create'\n        }\n      }\n    };\n    /* New Scheme Modal*/\n\n    var newSchemeModal = {\n      trigger: {\n        triggerText: 'New Scheme',\n        className: \"new_scheme\",\n        triggerId: \"new_scheme\"\n      },\n      id: \"newSchemeModal\",\n      title: 'New Scheme',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 667\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }, \"Select a scheme\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel1\",\n        value: this.state.dropDownValue,\n        onChange: this.handledropDownValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 669\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675\n        },\n        __self: this\n      }, \"Support\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676\n        },\n        __self: this\n      }, \"Conflict\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677\n        },\n        __self: this\n      }, \"Argument from Sign\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678\n        },\n        __self: this\n      }, \"Argument from an Exceptional Case\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        },\n        __self: this\n      }, \"Argument from Analogy\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }, \"Argument from Bias\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681\n        },\n        __self: this\n      }, \"Argument from Cause to Effect\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, \"Argument from Correlation to Causes\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, \"Argument from Established Rule\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, \"Argument from Evidence to a Hypothesis\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 685\n        },\n        __self: this\n      }, \"Argument from Falsification to a Hypothesis\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, \"Argument from Example\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"Argument from Commitment\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, \"Circumstantial Argument Against the Person\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 689\n        },\n        __self: this\n      }, \"Argument from Popular Practice\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 690\n        },\n        __self: this\n      }, \"Argument from Popularity\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 691\n        },\n        __self: this\n      }, \"Argument from Position to Know\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, \"Argument from Expert Opinion\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      }, \"Argument from Precedent\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      }, \"Argument from Consequences\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 695\n        },\n        __self: this\n      }, \"Argument from Waste\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 696\n        },\n        __self: this\n      }, \"Causal Slippery Slope Argument\"))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: \"btn btn-secondary\",\n          value: \"Close\"\n        },\n        button2: {\n          className: \"btn btn-primary\",\n          value: \"Create\"\n        }\n      }\n    };\n    /* Edit Content Modal */\n\n    var editContentModal = {\n      trigger: {\n        triggerText: 'editContentTrigger',\n        className: \"editContentTrigger\",\n        triggerId: \"editContentTrigger\"\n      },\n      id: 'editContentModal',\n      title: 'Edit Atom Content',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 722\n        },\n        __self: this\n      }, \"Edit atom content\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 723\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"2\",\n        id: \"edit_atom_content_textarea\",\n        ref: this.editContentRef,\n        value: this.state.modalValue,\n        onChange: this.handleModalValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 724\n        },\n        __self: this\n      }))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: \"btn btn-secondary\",\n          value: \"Close\"\n        },\n        button2: {\n          className: 'btn btn-primary',\n          value: 'Save'\n        }\n      }\n    };\n    /* Edit Metadata Modal  */\n\n    var editMetaDataModal = {\n      trigger: {\n        triggerText: 'Edit Meta',\n        className: 'editMeta',\n        triggerId: 'editMetaTrigger'\n      },\n      id: 'editMetadataModal',\n      title: 'Edit Metadata',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 757\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }, \"Edit atom content\"), React.createElement(\"div\", {\n        className: \"form-group\",\n        id: \"edit_metadata\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control\",\n        rows: \"2\",\n        id: \"edit_atom_content\",\n        value: this.state.modalValue,\n        onChange: this.handleModalValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 760\n        },\n        __self: this\n      }))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: 'btn btn-secondary',\n          value: 'Close'\n        },\n        button2: {\n          className: 'btn btn-primary',\n          value: 'Save'\n        }\n      }\n    };\n    /* Edit Scheme Type Modal */\n\n    var editSchemeTypeModal = {\n      trigger: {\n        triggerText: 'Edit Scheme Type',\n        className: 'editScheme',\n        triggerId: 'editSchemeTrigger'\n      },\n      id: 'editSchemeModal',\n      title: 'Edit Scheme',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 794\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 795\n        },\n        __self: this\n      }, \"Select a scheme\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"sel2\",\n        onChange: this.handledropDownValue,\n        value: this.state.dropDownValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 802\n        },\n        __self: this\n      }, \"Support\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 803\n        },\n        __self: this\n      }, \"Conflict\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 804\n        },\n        __self: this\n      }, \"Argument from Sign\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 805\n        },\n        __self: this\n      }, \"Argument from an Exceptional Case\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 806\n        },\n        __self: this\n      }, \"Argument from Analogy\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 807\n        },\n        __self: this\n      }, \"Argument from Bias\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 808\n        },\n        __self: this\n      }, \"Argument from Cause to Effect\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 809\n        },\n        __self: this\n      }, \"Argument from Correlation to Causes\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 810\n        },\n        __self: this\n      }, \"Argument from Established Rule\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 811\n        },\n        __self: this\n      }, \"Argument from Evidence to a Hypothesis\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 812\n        },\n        __self: this\n      }, \"Argument from Falsification to a Hypothesis\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 813\n        },\n        __self: this\n      }, \"Argument from Example\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, \"Argument from Commitment\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, \"Circumstantial Argument Against the Person\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      }, \"Argument from Popular Practice\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 817\n        },\n        __self: this\n      }, \"Argument from Popularity\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818\n        },\n        __self: this\n      }, \"Argument from Position to Know\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819\n        },\n        __self: this\n      }, \"Argument from Expert Opinion\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820\n        },\n        __self: this\n      }, \"Argument from Precedent\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821\n        },\n        __self: this\n      }, \"Argument from Consequences\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, \"Argument from Waste\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, \"Causal Slippery Slope Argument\"))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: 'btn btn-secondary',\n          value: 'Close'\n        },\n        button2: {\n          className: 'btn btn-primary',\n          value: 'Save'\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 840\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: newAtomModal,\n      show: \"none\",\n      onClick: this.addAtom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 841\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      modalProps: newSchemeModal,\n      show: \"none\",\n      onClick: this.addScheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 846\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      modalProps: editContentModal,\n      show: \"none\",\n      onClick: this.editAtomContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 852\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      modalProps: editMetaDataModal,\n      show: \"none\",\n      onClick: this.editAtomMetadata,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      modalProps: editSchemeTypeModal,\n      show: \"none\",\n      onClick: this.editScheme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 864\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"cy\",\n      onDrop: this.dropHandler,\n      onDragOver: this.dragoverHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 869\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Cytoscape;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/VisualisationPane/VisualisationPane.js"],"names":["React","Component","Modal","cytoscape","cola","edgehandles","$","contextMenus","remove_falsy","update_scheme","update_atom_metadata","import_json","export_cytoscape","add_atom","sd","add_scheme","add_edge","get_atom","now","new_uuid","update_atom_text","get_sd","delete_edge","update","add_source","use","Cytoscape","constructor","props","newAtomRef","createRef","newSchemeRef","editContentRef","state","modalValue","dropDownValue","cy","default_sadface_doc","analyst_email","created_date","edited_date","document_id","analyst_name","position","edit_atom","selected","redo_stack","undo_stack","running","initialise_monkeypuzzle","bind","initCytoscape","setModalValue","handleModalValueChange","setDropDownValue","handledropDownValue","addScheme","editScheme","addAtom","editAtomContent","editAtomMetadata","deleteAtom","deleteNodes","undo","redrawVisualisation","dragoverHandler","dropHandler","localStorage","getItem","setCurrentSadFaceDoc","setCyData","current_sadface_doc","container","document","getElementById","elements","JSON","parse","cyData","style","selector","boxSelectionEnabled","autounselectify","selectionType","minZoom","maxZoom","layout","build_cola_layout","run","toggleOffOnLeave","handleNodes","handleSize","handleColor","handleHitThreshold","handleLineWidth","edgeType","complete","event","sourceNode","targetNode","addedEles","length","source_id","source","id","target_id","target","source_position","target_position","x","y","data","type","scheme","scheme_id","scheme_content","name","remove","add","group","toString","content","typeshape","classes","locked","edge1","edge2","edge","updateLocalStorage","cm","menuItems","onClickFunction","cyTarget","click","hasTrailingDivider","meta","stringify","metadata","forEach","node","console","log","coreAsWell","renderedPosition","cyPosition","show","redo","hideMenuItem","tooltipText","merge_nodes","on","png","full","handleSetPng","jpg","handleSetJpg","opts","cola_params","animate","randomize","padding","fit","maxSimulationTime","i","undefined","opt","makeLayout","newModalValue","setState","e","value","newDropDownValue","new_atom","atom_id","focused","width","height","new_scheme","editContent","atom","alert","size","Object","keys","nodes","removed","sds","edges","stop","options","eles","center","resize","ev","preventDefault","dataTransfer","dropEffect","clientX","clientY","selectedText","clearSelection","componentDidMount","getDerivedStateFromProps","nextProps","prevState","newAtomFromText","componentDidUpdate","prevProps","addAtomFromText","showResourcePane","render","newAtomModal","trigger","triggerText","triggerId","title","footer","buttonNo","button1","className","button2","newSchemeModal","editContentModal","editMetaDataModal","editSchemeTypeModal"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Modal from  '../Modal/Modal';\n\nimport cytoscape from 'cytoscape';\nimport cola from 'cytoscape-cola';\nimport edgehandles from 'cytoscape-edgehandles';\nimport $ from 'jquery';\nimport contextMenus from 'cytoscape-context-menus';\n\nimport 'cytoscape-context-menus/cytoscape-context-menus.css';\n\n\n\nimport {remove_falsy,update_scheme, update_atom_metadata, import_json,export_cytoscape,add_atom, sd,add_scheme, add_edge, get_atom, now, new_uuid, update_atom_text, get_sd, delete_edge, update, add_source} from '../../lib/Sadface'; \n\ncytoscape.use( cola );\ncytoscape.use(contextMenus, $);\ncytoscape.use( edgehandles );\n\n\n\nclass Cytoscape extends Component {\n  constructor(props){\n        super(props);\n        //create Refs\n        this.newAtomRef = React.createRef()\n        this.newSchemeRef = React.createRef();\n        this.editContentRef = React.createRef();\n\n        this.state={\n          modalValue: ' ',\n          dropDownValue: ' ',\n\n        }\n        //variables\n        this.cy = null;\n        this.default_sadface_doc= \"{\\\"analyst_email\\\":\\\"\"+this.analyst_email+\"\\\",\\\"analyst_name\\\":\\\"\"+this.analyst_email+\"\\\",\\\"created\\\":\\\"\"+this.created_date+\"\\\",\\\"edges\\\":[],\\\"edited\\\":\\\"\"+this.edited_date+\"\\\",\\\"id\\\":\\\"\"+this.document_id+\"\\\",\\\"metadata\\\":{},\\\"nodes\\\":[],\\\"resources\\\": []}\";\n        this.analyst_email = \"Default Analyst Email\";\n        this.analyst_name = \"Default Analsyst Name\";\n        this.position = null;\n        this.edit_atom=null;\n        this.selected=[];\n        this.redo_stack=[];\n        this.undo_stack=[];\n        this.running = false;\n        //functions\n        this.initialise_monkeypuzzle = this.initialise_monkeypuzzle.bind(this);\n        this.initCytoscape = this.initCytoscape.bind(this);\n\n        this.setModalValue = this.setModalValue.bind(this);\n        this.handleModalValueChange = this.handleModalValueChange.bind(this);\n        this.setDropDownValue = this.setDropDownValue.bind(this);\n        this.handledropDownValue =this.handledropDownValue.bind(this);\n\n\n        \n        this.addScheme = this.addScheme.bind(this);\n        this.editScheme = this.editScheme.bind(this);\n\n        this.addAtom = this.addAtom.bind(this);\n        this.editAtomContent = this.editAtomContent.bind(this);\n        this.editAtomMetadata = this.editAtomMetadata.bind(this);\n        this.deleteAtom = this.deleteAtom.bind(this);\n        this.deleteNodes = this.deleteNodes.bind(this);\n\n        this.undo =this.undo.bind(this);\n        this.redrawVisualisation = this.redrawVisualisation.bind(this);\n        this.dragoverHandler = this.dragoverHandler.bind(this);\n        this.dropHandler = this.dropHandler.bind(this);\n\n\n\n    }\n\n    initialise_monkeypuzzle(){\n      //load diagram if there is one in localStorage\n      if (localStorage.getItem(\"state\") !== \"undefined\"){\n//         this.props.loadJSON(localStorage.getItem(\"state\"));\n         this.initCytoscape();\n      \n        \n        // //else use default\n         } else{\n           this.props.setCurrentSadFaceDoc(this.default_sadface_doc);\n        //    localStorage.setItem(\"state\", this.props.current_sadface_doc);\n           this.props.setCyData(export_cytoscape(import_json(this.props.current_sadface_doc)));\n            this.initCytoscape();\n        }\n\n    }\n\n    initCytoscape(){\n      this.cy = cytoscape({\n            container: document.getElementById('cy'),\n            elements: JSON.parse(this.props.cyData),\n\n            style:[\n                {   selector: \"node\", \n                    style: {\n                        \"label\": \"data(content)\",\n                        \"text-opacity\": 0.7,\n                       // \"width\" : \"auto\",\n                    //    \"height\" : \"auto\",\n                        \"text-valign\": \"bottom\",\n                        \"text-halign\": \"right\",\n                        \"text-outline-color\": \"#eee\",\n                        \"text-outline-width\": 1\n                    }\n                },\n                \n                {   selector: \"[typeshape]\", \n                    style: {\n                        \"shape\":\"data(typeshape)\"\n                    }\n                },\n\n                {   selector: \"node[typeshape='diamond']\", \n                    style: {\n                        'background-color': '#CC9900'\n                    }\n                },\n\n                {   selector: \"node[typeshape='diamond'][content='Conflict']\",\n                    style: {\n                        'background-color': 'red'\n                    }\n                },\n\n                {   selector: \"node[typeshape='diamond'][content='Support']\",\n                    style: {\n                        'background-color': 'green'\n                    }\n                },\n\n                {   selector: \"edge\", \n                    style: {\n                        \"line-color\": \"#9dbaea\",\n                        \"target-arrow-shape\": \"triangle\",\n                        \"target-arrow-color\": \"#9dbaea\",\n                        \"curve-style\": \"bezier\"\n                    }\n                },\n\n\n                {   selector: \":selected\", \n                    style: {\n                        \"border-width\":\"1\",\n                        \"border-color\":\"black\",\n                        \"background-color\": \"#3399CC\"\n                    }\n                },\n\n\n                {   selector: \".atom-label\", \n                    style:{\n                        \"text-wrap\": \"wrap\",\n                        \"text-max-width\": 160\n                    }\n                },\n\n                {   selector: \".scheme-label\", \n                    style:{\n                        \"text-wrap\": \"wrap\",\n                        \"text-max-width\": 160\n                    }\n                },\n                {   selector: '.eh-handle',\n                    style: {\n                        'background-color': 'orange',\n                        'width': 10,\n                        'height': 10,\n                        'shape': 'ellipse',\n                        'overlay-opacity': 0,\n                        'border-width': 8, // makes the handle easier to hit\n                        'border-opacity': 0,\n                        'label': '',\n                    }\n                }\n                \n            ],\n\n            boxSelectionEnabled: false,\n            autounselectify: false,\n            selectionType: \"single\",\n            minZoom: 0.1,\n            maxZoom: 1.5\n      });//cytoscapefunction\n        \n   \n      this.layout = this.build_cola_layout();\n      this.layout.run();\n\n      this.cy.edgehandles({\n                toggleOffOnLeave: true,\n                handleNodes: \"node\",\n                handleSize: 10,\n                handleColor: \"#DF0085\",\n                handleHitThreshold: 8,\n                handleLineWidth: 5,\n                //handleLineType: \"flat\",\n                edgeType: function(){ return \"flat\"; },\n                complete: function(event, sourceNode, targetNode, addedEles){\n                    if (targetNode.length !== 0) {\n                        var source_id = targetNode[0].source().id();\n                        var target_id = targetNode[0].target().id();\n\n                        //get the mid point between source node and target node\n                        var source_position = targetNode[0].source().position();\n                        var target_position = targetNode[0].target().position();\n\n                        this.position = {};\n                        this.position.x = ((source_position.x + target_position.x)/2);\n                        this.position.y = ((source_position.y + target_position.y)/2);\n\n                        if (targetNode[0].source().data().type === \"atom\" && targetNode[0].target().data().type === \"atom\")\n                        {\n                            var scheme = add_scheme(\"Support\");\n                            var scheme_id = scheme.id;\n                            var scheme_content = scheme.name;\n                            //remove the automatically generated edge\n                            targetNode.remove();\n                            this.cy.add([\n                                {group: \"nodes\", data: {id: scheme_id.toString(),\n                                    content: scheme_content, typeshape: \"diamond\" }, classes: \"scheme-label\", locked: false, position: this.position}\n                                    ]);\n                            var edge1 = add_edge(source_id, scheme_id);\n                            var edge2 = add_edge(scheme_id, target_id);\n                            this.cy.add([\n                              { group: \"edges\", data: { id: edge1.id.toString(), source: source_id, target: scheme_id } },\n                              { group: \"edges\", data: { id: edge2.id.toString(), source: scheme_id, target: target_id } }\n                              ]);\n                        } else {\n                            targetNode.remove();\n                            var edge = add_edge(source_id, target_id);\n                            this.cy.add([\n                              { group: \"edges\", data: { id: edge.id.toString(), source: source_id, target: target_id } }\n                              ]);\n                        }\n                        this.props.updateLocalStorage();\n                    } else {\n                        targetNode.remove();\n                    }\n                }.bind(this)\n            });//edgehandles\n\n      /*\n     *\n     * Set up context menus\n     *\n     * */\n    this.cm = this.cy.contextMenus({\n               menuItems: [\n                    {\n                        id: \"edit-content\",\n                        content: \"edit content\",\n                        selector: \"node[type = \\\"atom\\\"]\",\n                        onClickFunction: function (event) {\n                            let target = event.target || event.cyTarget;\n                            document.getElementById(\"editContentTrigger\").click();\n                             this.setModalValue(target.data().content);\n                            this.edit_atom = target;\n                        }.bind(this),\n                        hasTrailingDivider: false\n                    },\n\n                    {\n                        id: \"edit-metadata\",\n                        content: \"edit metadata\",\n                        selector: \"node[type = \\\"atom\\\"]\",\n                        onClickFunction: function (event) {\n                              let target = event.target || event.cyTarget;\n                              let meta = JSON.stringify(target.data().metadata);\n                              document.getElementById(\"editMetaTrigger\").click();\n                              this.setModalValue(meta);\n                             this.edit_atom = target;\n                         }.bind(this),\n                         hasTrailingDivider: true\n                    },\n                    {\n                        id: \"change-scheme\",\n                        content: \"change scheme\",\n                        selector: \"node[typeshape = \\\"diamond\\\"]\",\n                        onClickFunction: function (event) {\n                            var target = event.target || event.cyTarget;\n                            this.setDropDownValue(target.data().content);\n                            document.getElementById(\"editSchemeTrigger\").click();\n                            this.edit_atom = target;\n                        }.bind(this),\n                        hasTrailingDivider: true\n                    },\n                    {\n                        id: \"remove\",\n                        content: \"remove\",\n                        selector: \"node, edge\",\n                        onClickFunction: function (event) {\n                            var target = event.target || event.cyTarget;\n                            if (this.selected.length !== 0) {\n                                this.selected.forEach(function(node) {\n                                    console.log(node, \"SELECTED\");\n                                    this.deleteNodes(node);\n                                }.bind(this));\n                                this.selected = [];\n                            } else {\n                                if (target.data().type === \"atom\") {\n                                    this.deleteNodes(event);\n                                    target.remove();\n                                } else if (target.data().typeshape === \"diamond\"){\n                                    this.deleteNodes(event);\n                                    target.remove();\n                                } else {\n                                    delete_edge(target.id());\n                                    this.updateLocalStorage();\n                                    target.remove();\n                                }\n                            }\n                        }.bind(this),\n                        hasTrailingDivider: true\n                    },\n                    {\n                        id: \"add-atom\",\n                        content: \"add atom\",\n                        coreAsWell: true,\n\n                        onClickFunction: function (event) {\n                            this.position = event.renderedPosition;\n                         this.setModalValue(\"\");\n                            document.getElementById(\"newAtomTrigger\").click();\n                        }.bind(this)\n                    },\n                    {\n                        id: \"add-scheme\",\n                        content: \"add scheme\",\n                        coreAsWell: true,\n                        onClickFunction: function (event) {\n\n                            this.position = event.position || event.cyPosition;\n                            this.setDropDownValue(\"Support\");\n                                document.getElementById(\"new_scheme\").click();\n                        }.bind(this),\n                        hasTrailingDivider: true\n                    },\n                    {\n                        id: \"redraw\",\n                        content: \"redraw\",\n                        coreAsWell: true,\n                        onClickFunction:  (event) => this.redrawVisualisation(),\n                        hasTrailingDivider: true\n                    },\n                    {\n                        id: \"undo\",\n                        content: \"undo\",\n                        selector: \"node, edge\",\n                        show: true,\n                        coreAsWell: true,\n                        onClickFunction:  (event) => this.undo(),\n                        hasTrailingDivider: false\n                    },\n                    {\n                        id: \"redo\",\n                        content: \"redo\",\n                        selector: \"node, edge\",\n                        show: false,\n                        coreAsWell: true,\n                        onClickFunction: function (event) {\n                          this.redo();\n                          if (this.redo_stack === []) {\n                            this.cm.hideMenuItem(\"redo\");\n                        }\n                        }.bind(this),\n                        hasTrailingDivider: true\n                    },\n                    {\n                      id: \"merge_nodes\",\n                      content: \"merge nodes\",\n                      selector: \"node\",\n                      tooltipText: \"hello\",\n                      show: false,\n                      coreAsWell: true,\n                      onClickFunction:  (event) => this.merge_nodes()\n                    }\n                ],//menuitems\n            });//close context menues\nthis.cy.on(\"layoutstart\", function(){\n                this.running = true;\n            });\n this.cy.on(\"layoutstop\", function(){\n                this.running = false;\n        \n                var png = this.cy.png({ full: true });\n                console.log(this.cy, \"PNG\");\n                this.props.handleSetPng(png);\n\n                var jpg = this.cy.jpg({ full: true });\n                this.props.handleSetJpg(jpg);\n            }.bind(this));\n            \n\n    }//initmonkeyPuzzle\n\n    build_cola_layout( opts ) {\n        var cola_params = {\n            name: \"cola\",\n            animate: true,\n            randomize: true,\n            padding: 100,\n            fit: false,\n            maxSimulationTime: 1500\n        };\n        var i = 0;\n        if (opts !== undefined) {\n            opts.forEach(function(opt) {\n             cola_params[i] = opts[i];\n             ++i;\n         });\n        }\n        return this.cy.makeLayout( cola_params );\n    }\n\n    setModalValue(newModalValue){\n        console.log(newModalValue, \"NEWModalValue\")\n        this.setState({modalValue: newModalValue}, () =>\n         console.log(this.state.modalValue, 'modal value set'));\n    }\n\n    handleModalValueChange(e) {\n        console.log(e.target.value, \"E\");\n     this.setState({modalValue: e.target.value}, () =>\n        console.log(this.state.modalValue,  \"modal value set\"));\n}\n\n    setDropDownValue(newDropDownValue){\n    this.setState({dropDownValue: newDropDownValue}, () =>\n        console.log(this.state.dropDownValue, 'modal value set'));\n}\n\nhandledropDownValue(e){\n    this.setState({dropDownValue: e.target.value}, () =>\n    console.log(this.state.dropDownValue, 'dropdown value'));\n}\n    addAtom(content=null) {\n        console.log(this.state.modalValue, \"modal value\");\n    if(content === null){\n        content = this.state.modalValue;\n    }\n    if(content === \"\"){\n        content = \"New Atom\";\n    }\n    var meta = {\"hello\":\"world\"};\n    var new_atom = add_atom(content);\n    var atom_id = new_atom.id;\n    if (this.props.focused != null) {\n        add_source(atom_id, this.props.focused.id, content, 0, 0);\n    }\n    if (this.position == null) {\n        this.position = {\"x\": this.cy.width()/2, \"y\": this.cy.height()/2};\n    }\n    this.cy.add([\n        {group: \"nodes\", data: {id: atom_id.toString(),\n            content: content, type: \"atom\", typeshape: \"roundrectangle\", metadata: meta }, \n            classes: \"atom-label\", locked: false, renderedPosition: this.position}\n    ]);\n\n    let node = this.cy.getElementById(atom_id.toString() );\n\n    this.position = null;\n    this.props.updateLocalStorage();\n\n}\n\n addScheme() {\n    let scheme = this.state.dropDownValue;\n    var new_scheme = add_scheme(scheme);\n    var scheme_id = new_scheme.id;\n\n    this.cy.add([\n        {group: \"nodes\", data: {id: scheme_id.toString(),\n            content: scheme, type: \"scheme\", typeshape: \"diamond\" }, classes: \"scheme-label\", locked: false, position: this.position}\n    ]);\n    this.props.updateLocalStorage();\n}\n\neditScheme(){\n    let content = this.state.dropDownValue;\n    let scheme = this.cy.$(\"#\"+this.edit_atom.id());\n    update_scheme(this.edit_atom.id(), content);\n    this.props.updateLocalStorage();\n    scheme.data(\"content\", content);\n    this.edit_atom = null;\n\n}\neditAtomContent() {\n    let editContent = this.state.modalValue;\n    let atom = this.cy.$(\"#\"+this.edit_atom.id());\n    update_atom_text(this.edit_atom.id(), editContent);\n    this.props.updateLocalStorage();\n    atom.data(\"content\", editContent);\n    this.edit_atom = null;\n}\n\neditAtomMetadata() {\n  let atom = this.cy.$(\"#\"+this.edit_atom.id());\n  let content = this.state.modalValue;\n  if(JSON.parse(content)){\n    let metadata = JSON.parse(content);\n    update_atom_metadata(atom.id(), metadata);\n    this.props.updateLocalStorage();\n    this.edit_atom=null;\n  }else {\n        alert(\"Metadata not in JSON format, unable to update\");\n    }\n             \n}\ndeleteAtom(atom_id) {\n    /*\n    Remove the atom from the sadface document identified by the\n    supplied atom ID\n    */\n    console.log(atom_id, \"AtomID\");\n    if (atom_id) {\n        var atom = get_atom(atom_id);\n        console.log(atom, \"ATOM\");\n        if (atom !== null && atom !== undefined) {\n            var size = Object.keys(sd.nodes).length;\n            for (var i = 0; i < size; ++i) {\n                if (sd.nodes[i].id === atom.id) {\n                    delete sd.nodes[i];\n                   sd.nodes = remove_falsy(sd.nodes);\n                        return;\n                }\n            }\n        }\n    }\n}\n\ndeleteNodes(event) {\n    var target = event.target || event.cyTarget;\n    var id = target.id();\n    let removed = target.remove();\n    this.deleteAtom(id);\n    var i = 0;\n    var sds = get_sd();\n    var edges = sds.edges;\n    edges.forEach(function(edge) {\n        if (edges[i] !== undefined) {\n            if (edges[i].source_id === id || edges[i].target_id === id) {\n                delete_edge(edges[i].id);\n            }\n            ++i;\n        }\n    });\n    this.props.updateLocalStorage();\n}\n\nundo() {\n    // if(this.props.undo_stack.length != 0){\n    //     let redo_item = get_sd();\n    //     this.props.setRedoStack(redo_item);\n    //     let state = this.props.undo_stack[this.props.undo_stack.length - 1];\n    //     console.log(this.props.undo_stack, \"state\");\n    //     this.props.loadJSON(JSON.stringify(state));\n\n    // }\n\n        }\n\n   \n\n\n\n\nredrawVisualisation() {\n    this.layout.stop();\n    this.layout.options.eles = this.cy.elements();\n    this.layout.run();\n    this.cy.center();\n    this.cy.resize();\n}\n\ndragoverHandler(ev) {\n    console.log(\"dragoverHandler\");\n     ev.preventDefault();\n     ev.dataTransfer.dropEffect = \"move\";\n}\n\ndropHandler(ev) {\n    ev.preventDefault();\n    this.position = {x: ev.clientX-300, y: ev.clientY};\n \n    if(this.props.selectedText !== null || this.props.selectedText != undefined){\n        console.log(this.props.selectedText, 'TEXT');\n        this.addAtom(this.props.selectedText);\n        this.props.clearSelection();\n    }\n    else { console.log(\"Not a valid text selection.\"); }\n}\n\n    componentDidMount(){\n       this.initialise_monkeypuzzle();\n       }\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n          if(nextProps.cyData !== prevState.cyData){\n              return{cyData: nextProps.cyData};\n              this.initialise_monkeypuzzle();\n          }\n         else return null;\n         if(nextProps.newAtomFromText !== prevState.newAtomFromText){\n            return{newAtomFromText: nextProps.cyData};\n         }else return null;\n      }\n    componentDidUpdate(prevProps, prevState) {\n      if(prevProps.cyData!==this.props.cyData){\n        //Perform some operation here\n        this.initialise_monkeypuzzle();\n      }\n      if(this.props.newAtomFromText === true){\n        console.log(\"new atom from text\");\n        this.addAtom(this.props.selectedText);\n        this.props.addAtomFromText();\n        this.props.clearSelection();\n      }\n      if(prevProps.showResourcePane !== this.props.showResourcePane){\n        this.redrawVisualisation();\n      }\n    }\n    render(){\n        /* New Atom Modal */\n        const newAtomModal = {\n            trigger: {\n                triggerText: 'New Atom',\n                triggerId: 'newAtomTrigger'\n            },\n              title: 'New Atom',\n              id: 'newAtomModal',\n              content: <div className=\"modal-body\">\n              <p>Add some content to the new atom</p>\n              <div className=\"form-group\">\n              <textarea \n                className=\"form-control\" \n                rows=\"2\" \n                id=\"new_atom_content\" \n                onChange={this.handleModalValueChange}\n                >\n              </textarea></div></div>,\n            footer: {\n                buttonNo:2,\n                button1: {\n                  className: \"btn btn-secondary\",\n                  value: \"Close\"\n                },\n                button2: {\n                  className: 'btn btn-primary',\n                  value: 'Create',\n                },\n            }\n        };\n\n        /* New Scheme Modal*/\n        var newSchemeModal = {\n            trigger: {\n                triggerText: 'New Scheme',\n                className: \"new_scheme\",\n                triggerId: \"new_scheme\",\n            },\n              id:\"newSchemeModal\",\n              title: 'New Scheme',\n              content: <div className=\"modal-body\">\n              <p>Select a scheme</p>\n              <select \n                className=\"form-control\" \n                id=\"sel1\" \n                value={this.state.dropDownValue}\n                onChange={this.handledropDownValue}\n                >\n              <option>Support</option>\n              <option>Conflict</option>\n              <option>Argument from Sign</option>\n              <option>Argument from an Exceptional Case</option>\n              <option>Argument from Analogy</option>\n              <option>Argument from Bias</option>\n              <option>Argument from Cause to Effect</option>\n              <option>Argument from Correlation to Causes</option>\n              <option>Argument from Established Rule</option>\n              <option>Argument from Evidence to a Hypothesis</option>\n              <option>Argument from Falsification to a Hypothesis</option>\n              <option>Argument from Example</option>\n              <option>Argument from Commitment</option>\n              <option>Circumstantial Argument Against the Person</option>\n              <option>Argument from Popular Practice</option>\n              <option>Argument from Popularity</option>\n              <option>Argument from Position to Know</option>\n              <option>Argument from Expert Opinion</option>\n              <option>Argument from Precedent</option>\n              <option>Argument from Consequences</option>\n              <option>Argument from Waste</option>\n              <option>Causal Slippery Slope Argument</option>\n              </select>\n              </div>,\n            footer: {\n                buttonNo: 2,\n                button1: {\n                  className: \"btn btn-secondary\",\n                  value: \"Close\"\n                },\n                button2: {\n                  className: \"btn btn-primary\",\n                  value: \"Create\"\n                }\n            }\n        };\n\n        /* Edit Content Modal */\n        var editContentModal = {\n            trigger: {\n                triggerText: 'editContentTrigger',\n                className: \"editContentTrigger\",\n                triggerId: \"editContentTrigger\",\n            },\n            id: 'editContentModal',\n            title: 'Edit Atom Content',\n            content: <div className=\"modal-body\">\n            <p>Edit atom content</p>\n            <div className=\"form-group\">\n            <textarea \n                className=\"form-control\" \n                rows=\"2\" \n                id=\"edit_atom_content_textarea\"\n                ref={this.editContentRef}\n                value={this.state.modalValue}\n                onChange={this.handleModalValueChange}\n                ></textarea>\n                </div>\n                </div>,\n            footer: {\n                buttonNo: 2,\n                button1:{\n                    className: \"btn btn-secondary\",\n                    value: \"Close\"\n                },\n                button2: {\n                    className: 'btn btn-primary',\n                    value: 'Save',\n                }\n            }\n        };\n\n        /* Edit Metadata Modal  */\n\n            var editMetaDataModal = {\n                trigger:{\n                    triggerText: 'Edit Meta',\n                    className: 'editMeta',\n                    triggerId: 'editMetaTrigger',\n                },\n                id: 'editMetadataModal',\n                title: 'Edit Metadata',\n                content: <div className=\"modal-body\">\n                <p>Edit atom content</p>\n                <div className=\"form-group\" id=\"edit_metadata\">\n                <textarea \n                    className=\"form-control\" \n                    rows=\"2\" \n                    id=\"edit_atom_content\"\n                    value={this.state.modalValue}\n                    onChange={this.handleModalValueChange}\n\n                    >\n                </textarea>\n                </div>\n                </div>,\n                footer: {\n                    buttonNo: 2,\n                    button1: {\n                        className: 'btn btn-secondary',\n                        value: 'Close',\n                    },\n                    button2: {\n                        className: 'btn btn-primary',\n                        value: 'Save',\n                    },  \n                },\n            };\n\n            /* Edit Scheme Type Modal */\n\n                var editSchemeTypeModal = {\n                  trigger:{\n                    triggerText: 'Edit Scheme Type',\n                    className: 'editScheme',\n                    triggerId: 'editSchemeTrigger',\n                  },\n                  id: 'editSchemeModal',\n                  title: 'Edit Scheme',\n                  content: <div className=\"modal-body\">\n                  <p>Select a scheme</p>\n                  <select \n                    className=\"form-control\" \n                    id=\"sel2\"\n                    onChange={this.handledropDownValue}\n                    value={this.state.dropDownValue}\n                        >\n                  <option>Support</option>\n                  <option>Conflict</option>\n                  <option>Argument from Sign</option>\n                  <option>Argument from an Exceptional Case</option>\n                  <option>Argument from Analogy</option>\n                  <option>Argument from Bias</option>\n                  <option>Argument from Cause to Effect</option>\n                  <option>Argument from Correlation to Causes</option>\n                  <option>Argument from Established Rule</option>\n                  <option>Argument from Evidence to a Hypothesis</option>\n                  <option>Argument from Falsification to a Hypothesis</option>\n                  <option>Argument from Example</option>\n                  <option>Argument from Commitment</option>\n                  <option>Circumstantial Argument Against the Person</option>\n                  <option>Argument from Popular Practice</option>\n                  <option>Argument from Popularity</option>\n                  <option>Argument from Position to Know</option>\n                  <option>Argument from Expert Opinion</option>\n                  <option>Argument from Precedent</option>\n                  <option>Argument from Consequences</option>\n                  <option>Argument from Waste</option>\n                  <option>Causal Slippery Slope Argument</option>\n                  </select>\n                  </div>,\n                  footer: {\n                    buttonNo: 2,\n                    button1: {\n                      className: 'btn btn-secondary',\n                      value: 'Close',\n                    },\n                    button2: {\n                      className:'btn btn-primary',\n                      value: 'Save',\n                    },\n                  } \n                };\n\n      return(\n        <div>\n        <Modal\n            modalProps={newAtomModal}\n            show=\"none\"\n            onClick={this.addAtom}\n        />\n      <Modal\n            modalProps={newSchemeModal}\n            show=\"none\"\n            onClick={this.addScheme}\n        />\n\n        <Modal\n            modalProps={editContentModal}\n            show=\"none\"\n            onClick={this.editAtomContent}\n        />\n\n        <Modal\n            modalProps={editMetaDataModal}\n            show=\"none\"\n            onClick={this.editAtomMetadata}\n        />\n\n         <Modal\n            modalProps={editSchemeTypeModal}\n            show=\"none\"\n            onClick={this.editScheme}\n        />\n         <div id=\"cy\" onDrop={this.dropHandler} onDragOver={this.dragoverHandler}>\n\n      </div>\n        </div>);\n\n  }\n}\n\nexport default Cytoscape;"]},"metadata":{},"sourceType":"module"}