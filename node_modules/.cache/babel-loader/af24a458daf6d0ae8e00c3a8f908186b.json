{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/Menu.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from './Modal';\nimport { resetConfirmModal } from './ModalData'; //import Button from './MyButton';\n//import TextArea from'./TextArea';\n\n/*const interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}*/\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.resetConfirmModal = {\n      trigger: {\n        triggerText: \"Reset\",\n        className: 'btn btn-danger',\n        triggerId: \"clear_storage_button\"\n      },\n      title: 'Reset MonkeyPuzzle',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Are you sure that you want to reset MonkeyPuzzle?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), \"This will empty the current analysis and adjust all options back to their initial settings.\")),\n      footer: {\n        className: 'btn btn-danger',\n        value: 'Reset',\n        action: 'mp_reset()'\n      }\n    };\n    this.state = {};\n    this.confirmReset = this.confirmReset.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.filemanger = this.filemanger.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n  }\n\n  confirmReset() {\n    console.log(\"reset\"); //$('#confirm_reset_modal').modal('show');\"\n  }\n\n  set_analyst_name() {\n    console.log('set name');\n  }\n\n  set_analyst_email() {\n    console.log('set email');\n  }\n\n  filemanger() {\n    console.log('file manager');\n  }\n\n  loadSADFace() {\n    // \"document.getElementByID('loadJSON').click();\"\n    console.log('loadSADFace');\n  }\n\n  render() {\n    return (\n      /*Slidein Panel: START*/\n      React.createElement(\"nav\", {\n        id: \"menu\",\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/monkeypuzzle/\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"menu-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"menu-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"MonkeyPuzzle\"))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Interface\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"toggle_resources\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Toggle the visibility of the resources pane\",\n        children: \"Toggle Resource Pane\",\n        onClick: this.props.toggleResourcePane,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalProps: resetConfirmModal,\n        onClick: this.props.mp_reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"load_demo_argument_button\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Load a demonstration SADFace document into MonkeyPuzzle\",\n        children: \"Load Demo\",\n        onClick: this.props.loadDemoArgument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"analyst_name_textarea\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"40\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Name\",\n        title: \"Type your name here...\",\n        onChange: this.props.set_analyst_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"analyst_email_textarea\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"40\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Email\",\n        title: \"Type your email address here...\",\n        onChange: this.props.set_analyst_email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Export\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"export_filename\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"20\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Filename\",\n        title: \"The name for the exported file\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"export_button\",\n        className: \"btn btn-default\",\n        onClick: this.props.download_sadface,\n        title: \"Export the current analysis to a SADFace formatted JSON document\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"SADFace\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"download_png\",\n        className: \"btn btn-default\",\n        title: \"Export the current analysis to a PNG image\",\n        onClick: this.props.download_png,\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"PNG\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"download_jpg\",\n        className: \"btn btn-default\",\n        title: \"Export the current analysis to a JPG image\",\n        onClick: this.props.download_jpg,\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"JPG\")))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Import\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"upload-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        rel: \"ignore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"loadJSON\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".json\",\n        role: \"button\",\n        tabIndex: \"-1000\",\n        type: \"file\",\n        className: \"upload-button\" //  onChange={this.props.fileManager('load','json',null,null,null)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"btn btn-default\" // onClick={document.getElementById('loadJSON').Click()}\n        ,\n        title: \"Load a SADFace formatted JSON document into MonkeyPuzzle\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"SADFace\")))))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Documentation\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"About MonkeyPuzzle\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, \"Quick-start\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Code Repository\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/issues\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Issue Tracker\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, \"Licensing\")))))\n      /* Slidein Panel: END */\n\n      /*}\n                 <nav id=\"menu\" className=\"menu\">\n                \t<a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n                    <header className=\"menu-header\">\n                        <span className=\"menu-header-title\">MonkeyPuzzle</span>\n                    </header>\n                  </a>\n      \n                  <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Interface</h3>\n                      <ul className=\"menu-section-list\">            \n                         <li>\n                          <a href=\"#\" id=\"toggle_resource\">\n                            <MyButton \n                              className=\"btn btn-default\"\n                              onClick={() => this.toggleResourcePane()}\n                              title=\"Toggle the visibility of the resources pane\"\n                            >\n                              Toggle Resource Pane\n                            </MyButton>\n                            </a>\n                         </li>\n                         <li>\n                          <a href=\"#\" id=\"clear_storage_button\">\n                            <MyButton\n                              className=\"btn btn-danger\"\n                              onClick={() => this.confirmReset()}\n                              title=\"Reset MonkeyPuzzle to her initial state\"\n                            >\n                              Reset\n                            </MyButton>\n                          </a>\n                         </li>\n                         <li>\n                           <a href=\"#\" id=\"load_demo_argument_button\">\n                            <MyButton\n                              className=\"btn btn-default\"\n                              onClick={() => this.loadDemoArgument()}\n                              title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                            >\n                              Load Demo \n                            </MyButton>\n                           </a>\n                         </li>\n                         <li>\n                           <div style={interfaceDivStyle}>\n                              <TextArea \n                                className = \"form-control\"\n                                id= \"analyst_name_textarea\"\n                                rows=\"1\"\n                                cols=\"20\"\n                                maxLength=\"40\"\n                                placeholder=\"Name\"\n                                title=\"Type your name here...\"\n                                onChange={() => this.set_analyst_name()}\n                              />\n                           </div>\n                         </li>\n                          <li>\n                           <div style={interfaceDivStyle}>\n                              <TextArea \n                                className = \"form-control\"\n                                id= \"analyst_email_textarea\"\n                                rows=\"1\"\n                                cols=\"20\"\n                                maxLength=\"40\"\n                                placeholder=\"Email\"\n                                title=\"Type your email here...\"\n                                onChange={() => this.set_analyst_email()}\n                              />\n                           </div>\n                         </li>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Export</h3>\n                      <ul className=\"menu-section-list\">\n                        <li>\n                          <div style={interfaceDivStyle}>\n                            <TextArea\n                              className=\"form-control\"\n                              id=\"export_filename\"\n                              rows=\"1\"\n                              cols=\"20\"\n                              maxLength=\"40\"\n                              placeholder=\"Filename\"\n                              title=\"The name for the exported file\"\n                            />\n                          </div>\n                        </li>\n                        <li>\n                          <a href=\"#\" id=\"export_button\">\n                            <MyButton\n                              className=\"btn btn-default\"\n                              onClick={() => this.download_sadface()}\n                              title=\"Export the current analysis to a SADFace formatted JSON document\"\n                            >\n                              SADFace\n                            </MyButton>\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#\" /*target=\"_blank\" id=\"download_png\">\n                            <MyButton \n                              className=\"btn btn_default\"\n                              title=\"Export the current analysis to a PNG image\"\n                              onClick={() => this.download_png()}\n                            >\n                              PNG\n                            </MyButton>\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#\" /*target=\"_blank\" id=\"download_jpg\">\n                            <MyButton\n                              className=\"btn btn_default\"\n                              title=\"Export the current analysis to a JPG image\"\n                              onClick={() => this.download_jpg()}\n                            >\n                              JPG\n                            </MyButton>\n                          </a>\n                        </li>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Import</h3>\n                      <ul className=\"menu-section-list\">\n                        <span className=\"upload-span\">\n                          <a rel=\"ignore\">\n                            <div display=\"inline-block\">\n                              <input id=\"loadJSON\" /*style=\"display:none;\" accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                              <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                            </div>\n                          </a>\n                        </span>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Documentation</h3>\n                      <ul className=\"menu-section-list\">\n                        <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                        <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                      </ul>\n                    </section>\n      \n                    </nav>\n                  */\n\n    );\n  }\n\n} // Slidein Panel: END \n\n\nexport default SlideIn;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/Menu.js"],"names":["React","Component","Button","Modal","resetConfirmModal","Menu","constructor","props","trigger","triggerText","className","triggerId","title","content","footer","value","action","state","confirmReset","bind","set_analyst_name","set_analyst_email","filemanger","loadSADFace","console","log","render","toggleResourcePane","mp_reset","loadDemoArgument","resize","download_sadface","download_png","download_jpg","display","SlideIn"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from './Modal';\nimport {resetConfirmModal} from './ModalData';\n\n\n\n//import Button from './MyButton';\n//import TextArea from'./TextArea';\n\n/*const interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}*/\n\n\nclass Menu extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    };\n\n    this.confirmReset = this.confirmReset.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.filemanger = this.filemanger.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n  }\n\n   \n\n  confirmReset(){\n    console.log(\"reset\");\n    //$('#confirm_reset_modal').modal('show');\"\n  }\n  \n\n\n  set_analyst_name(){\n    console.log('set name');\n  }\n\n  set_analyst_email(){\n    console.log('set email');\n  }\n\n  filemanger(){\n    console.log('file manager');\n  }\n  loadSADFace(){\n   // \"document.getElementByID('loadJSON').click();\"\n   console.log('loadSADFace');\n  }\n\n  resetConfirmModal = {\n              trigger:{\n                triggerText:  \"Reset\",\n                className: 'btn btn-danger',\n                triggerId: \"clear_storage_button\",\n                      },\n                title: 'Reset MonkeyPuzzle',\n                content:<div className=\"modal-body\">\n                          <p>Are you sure that you want to reset MonkeyPuzzle?<br /> \n                          This will empty the current analysis and adjust all options back to their initial settings.</p>\n                         </div>,\n                footer: {\n                className: 'btn btn-danger',\n                value: 'Reset',\n                action: 'mp_reset()'\n    } \n  }\n\n  render() {\n    return (\n            /*Slidein Panel: START*/\n\n      <nav id=\"menu\" className=\"menu\">\n    <a href=\"http://arg.napier.ac.uk/monkeypuzzle/\" target=\"_blank\">\n        <header className=\"menu-header\">\n          <span className=\"menu-header-title\">MonkeyPuzzle</span>\n        </header>\n    </a>\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Interface</h3>\n        <ul className=\"menu-section-list\">\n          <li>\n            <Button\n              id=\"toggle_resources\"\n              className=\"btn btn-default\" \n              variant=\"light\"\n              title=\"Toggle the visibility of the resources pane\"\n              children=\"Toggle Resource Pane\"\n              onClick={this.props.toggleResourcePane}\n\n            />\n          </li>\n          <li> \n            <Modal \n              modalProps = {resetConfirmModal}  \n              onClick = {this.props.mp_reset}\n\n            />\n          </li>\n          <li>\n           <Button\n            id=\"load_demo_argument_button\"\n            className=\"btn btn-default\" \n            variant=\"light\"\n            title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n            children=\"Load Demo\"\n            onClick={this.props.loadDemoArgument}\n\n          />\n          </li>\n          <li>\n              <textarea \n                id=\"analyst_name_textarea\" \n                type=\"text\" rows=\"1\" \n                cols=\"20\" \n                maxLength=\"40\" style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Name\" \n                title=\"Type your name here...\" \n                onChange={this.props.set_analyst_name}\n              >\n              </textarea>\n          </li>\n          <li>\n              <textarea \n                id=\"analyst_email_textarea\" \n                type=\"text\" \n                rows=\"1\" \n                cols=\"20\" \n                maxLength=\"40\" \n                style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Email\" \n                title=\"Type your email address here...\" \n                onChange={this.props.set_analyst_email}\n              >\n              </textarea>\n          </li>\n      </ul>\n    </section>\n\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Export</h3>\n        <ul className=\"menu-section-list\">\n           <li>\n              <textarea \n                id=\"export_filename\" \n                type=\"text\" \n                rows=\"1\" \n                cols=\"20\" \n                maxLength=\"20\" \n                style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Filename\" \n                title=\"The name for the exported file\"\n              >\n              </textarea>\n          </li>\n\n          <li>\n            <Button \n              id=\"export_button\"\n              className=\"btn btn-default\" \n              onClick={this.props.download_sadface} \n              title=\"Export the current analysis to a SADFace formatted JSON document\"\n              variant=\"light\"\n            >\n              SADFace\n            </Button>\n          </li>\n          <li>\n            <Button \n              id=\"download_png\"\n              className=\"btn btn-default\" \n              title=\"Export the current analysis to a PNG image\" \n              onClick={this.props.download_png}\n              variant=\"light\"\n            >\n              PNG\n            </Button>\n          </li>\n          <li>\n            <Button \n              id=\"download_jpg\"\n              className=\"btn btn-default\" \n              title=\"Export the current analysis to a JPG image\" \n              onClick={this.props.download_jpg}\n              variant=\"light\"\n            >\n              JPG\n            </Button>\n          </li>\n      </ul>\n      </section>\n      \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Import</h3>\n        <ul className=\"menu-section-list\">\n      <span className=\"upload-span\">\n        <a rel=\"ignore\">\n          <div style={{display: \"inline-block\"}}>\n           <input \n            id=\"loadJSON\" \n            style={{display: \"none\"}} \n            accept=\".json\" \n            role=\"button\" \n            tabIndex=\"-1000\" \n            type=\"file\" \n            className=\"upload-button\" \n          //  onChange={this.props.fileManager('load','json',null,null,null)}\n          />\n          \n          <Button\n            className=\"btn btn-default\"\n           // onClick={document.getElementById('loadJSON').Click()}\n            title=\"Load a SADFace formatted JSON document into MonkeyPuzzle\"\n            variant=\"light\"\n\n          >\n            SADFace\n          </Button>\n          </div>\n        </a>\n      </span>\n      \n        </ul>\n    </section>\n  \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Documentation</h3>\n        <ul className=\"menu-section-list\">  \n          <li>          \n            <a \n              href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" \n              id=\"a\"\n              >\n                About MonkeyPuzzle\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" \n              id=\"a\"\n              >\n                Quick-start\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" \n              id=\"a\"\n              >\n                Code Repository\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" \n              id=\"a\"\n            >\n              Issue Tracker\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" \n              id=\"a\"\n            >\n              Licensing\n            </a>\n          </li>\n      </ul>\n      </section>\n    </nav>\n\n\n   /* Slidein Panel: END */\n\n\n\n\n/*}\n           <nav id=\"menu\" className=\"menu\">\n          \t<a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n              <header className=\"menu-header\">\n                  <span className=\"menu-header-title\">MonkeyPuzzle</span>\n              </header>\n            </a>\n\n            <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Interface</h3>\n                <ul className=\"menu-section-list\">            \n                   <li>\n                    <a href=\"#\" id=\"toggle_resource\">\n                      <MyButton \n                        className=\"btn btn-default\"\n                        onClick={() => this.toggleResourcePane()}\n                        title=\"Toggle the visibility of the resources pane\"\n                      >\n                        Toggle Resource Pane\n                      </MyButton>\n                      </a>\n                   </li>\n                   <li>\n                    <a href=\"#\" id=\"clear_storage_button\">\n                      <MyButton\n                        className=\"btn btn-danger\"\n                        onClick={() => this.confirmReset()}\n                        title=\"Reset MonkeyPuzzle to her initial state\"\n                      >\n                        Reset\n                      </MyButton>\n                    </a>\n                   </li>\n                   <li>\n                     <a href=\"#\" id=\"load_demo_argument_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.loadDemoArgument()}\n                        title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                      >\n                        Load Demo \n                      </MyButton>\n                     </a>\n                   </li>\n                   <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_name_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Name\"\n                          title=\"Type your name here...\"\n                          onChange={() => this.set_analyst_name()}\n                        />\n                     </div>\n                   </li>\n                    <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_email_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Email\"\n                          title=\"Type your email here...\"\n                          onChange={() => this.set_analyst_email()}\n                        />\n                     </div>\n                   </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Export</h3>\n                <ul className=\"menu-section-list\">\n                  <li>\n                    <div style={interfaceDivStyle}>\n                      <TextArea\n                        className=\"form-control\"\n                        id=\"export_filename\"\n                        rows=\"1\"\n                        cols=\"20\"\n                        maxLength=\"40\"\n                        placeholder=\"Filename\"\n                        title=\"The name for the exported file\"\n                      />\n                    </div>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"export_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.download_sadface()}\n                        title=\"Export the current analysis to a SADFace formatted JSON document\"\n                      >\n                        SADFace\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\" id=\"download_png\">\n                      <MyButton \n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a PNG image\"\n                        onClick={() => this.download_png()}\n                      >\n                        PNG\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\" id=\"download_jpg\">\n                      <MyButton\n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a JPG image\"\n                        onClick={() => this.download_jpg()}\n                      >\n                        JPG\n                      </MyButton>\n                    </a>\n                  </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Import</h3>\n                <ul className=\"menu-section-list\">\n                  <span className=\"upload-span\">\n                    <a rel=\"ignore\">\n                      <div display=\"inline-block\">\n                        <input id=\"loadJSON\" /*style=\"display:none;\" accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                        <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                      </div>\n                    </a>\n                  </span>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Documentation</h3>\n                <ul className=\"menu-section-list\">\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                </ul>\n              </section>\n\n              </nav>\n            */\n    );\n  }\n}  // Slidein Panel: END \n\nexport default SlideIn;\n"]},"metadata":{},"sourceType":"module"}