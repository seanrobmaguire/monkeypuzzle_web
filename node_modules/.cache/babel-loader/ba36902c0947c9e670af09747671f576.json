{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle1/src/Components/Menu/Menu.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from '../Modal/Modal'; //import functions from sadface\n\nimport { update_analyst_name, update_analyst_email } from '../../lib/Sadface';\nimport './Menu.css';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {}; //refs\n\n    this.pngRef = React.createRef();\n    this.jpgRef = React.createRef();\n    this.loadJSONRef = React.createRef();\n    this.mp_reset = this.mp_reset.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.handleFileName = this.handleFileName.bind(this);\n    this.handleSADfaceUpload = this.handleSADfaceUpload.bind(this);\n    this.SADfaceUpload = this.SADfaceUpload.bind(this);\n  }\n\n  mp_reset() {\n    console.log(\"reset\");\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  handle_set_analyst_name(event) {\n    let analyst_name = event.target.value;\n    update_analyst_name(analyst_name);\n  }\n\n  handle_set_analyst_email(event) {\n    let analyst_email = event.target.value;\n    update_analyst_email(analyst_email);\n  }\n\n  download_png() {\n    var fileName = this.props.fileName;\n\n    if (fileName.length === 0) {\n      fileName = \"default\";\n    }\n\n    fileName += \".png\";\n    let link = this.pngRef.current;\n    link.download = fileName;\n  }\n\n  download_jpg() {\n    let fileName = this.props.fileName;\n\n    if (fileName.length === 0) {\n      fileName = \"default\";\n    }\n\n    fileName += \".jpg\";\n    let link = this.jpgRef.current;\n    link.download = fileName;\n  }\n\n  download_sadface() {\n    this.props.fileManager('save', 'json', null);\n  }\n\n  handleFileName(event) {\n    let file_name = event.target.value;\n    this.props.setFileName(file_name);\n  }\n\n  handleSADfaceUpload() {\n    let loadJSON = this.loadJSONRef.current;\n    loadJSON.click();\n  }\n\n  SADfaceUpload() {\n    let newFile = this.loadJSONRef.current.files;\n    this.props.fileManager('load', 'json', null, newFile);\n  }\n\n  render() {\n    /*Reset Confirmation Modal */\n    let resetConfirmModal = {\n      trigger: {\n        triggerText: 'Reset',\n        title: 'Reset MonkeyPuzzle to her initial state',\n        id: 'clear_storage_button',\n        className: 'btn btn-danger'\n      },\n      title: 'Reset MonkeyPuzzle',\n      id: \"confirm_reset_modal\",\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Are you sure that you want to reset MonkeyPuzzle?\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), \" This will empty the current analysis and adjust all options back to their initial settings.\")),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: 'btn btn-secondary',\n          value: 'Cancel'\n        },\n        button2: {\n          className: 'btn btn-danger',\n          value: 'Reset'\n        }\n      }\n    };\n    return (\n      /*Slidein Panel: START*/\n      React.createElement(\"nav\", {\n        id: \"menu\",\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/monkeypuzzle/\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"menu-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"menu-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"MonkeyPuzzle\"))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Interface\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"toggle_resources\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Toggle the visibility of the resources pane\",\n        children: \"Toggle Resource Pane\",\n        onClick: this.props.toggleResourcePane,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalProps: resetConfirmModal,\n        onClick: this.mp_reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"load_demo_argument_button\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Load a demonstration SADFace document into MonkeyPuzzle\",\n        children: \"Load Demo\",\n        onClick: this.props.load_demo_argument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"analyst_name_textarea\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"40\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Name\",\n        title: \"Type your name here...\",\n        onChange: this.handle_set_analyst_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"analyst_email_textarea\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"40\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Email\",\n        title: \"Type your email address here...\",\n        onChange: this.handle_set_analyst_email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Export\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"export_filename\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"20\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Filename\",\n        title: \"The name for the exported file\",\n        onChange: this.handleFileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"export_button\",\n        className: \"btn btn-default\",\n        onClick: this.download_sadface,\n        title: \"Export the current analysis to a SADFace formatted JSON document\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, \"SADFace\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: this.props.png,\n        target: \"blank\",\n        id: \"download_png\",\n        ref: this.pngRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Button // id=\"download_png\"\n      , {\n        className: \"btn btn-default\",\n        title: \"Export the current analysis to a PNG image\",\n        onClick: this.download_png,\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, \"PNG\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: this.props.jpg,\n        target: \"blank\",\n        id: \"download_jpg\",\n        ref: this.jpgRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"download_jpg\",\n        className: \"btn btn-default\",\n        title: \"Export the current analysis to a JPG image\",\n        onClick: this.download_jpg,\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"JPG\"))))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"Import\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"upload-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        rel: \"ignore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"loadJSON\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".json\",\n        role: \"button\",\n        tabIndex: \"-1000\",\n        type: \"file\",\n        className: \"upload-button\",\n        onChange: this.SADfaceUpload,\n        ref: this.loadJSONRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"btn btn-default\",\n        onClick: this.handleSADfaceUpload,\n        title: \"Load a SADFace formatted JSON document into MonkeyPuzzle\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"SADFace\")))))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Documentation\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, \"About MonkeyPuzzle\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Quick-start\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, \"Code Repository\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/issues\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, \"Issue Tracker\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Licensing\")))))\n    );\n  }\n\n} // Slidein Panel: END \n\n\nexport default Menu;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle1/src/Components/Menu/Menu.js"],"names":["React","Component","Button","Modal","update_analyst_name","update_analyst_email","Menu","constructor","props","state","pngRef","createRef","jpgRef","loadJSONRef","mp_reset","bind","download_png","download_jpg","download_sadface","handleFileName","handleSADfaceUpload","SADfaceUpload","console","log","localStorage","clear","window","location","reload","handle_set_analyst_name","event","analyst_name","target","value","handle_set_analyst_email","analyst_email","fileName","length","link","current","download","fileManager","file_name","setFileName","loadJSON","click","newFile","files","render","resetConfirmModal","trigger","triggerText","title","id","className","content","footer","buttonNo","button1","button2","toggleResourcePane","load_demo_argument","resize","png","jpg","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from '../Modal/Modal';\n\n//import functions from sadface\nimport {update_analyst_name, update_analyst_email} from '../../lib/Sadface'; \n\nimport './Menu.css';\nclass Menu extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      \n    };\n    //refs\n    this.pngRef = React.createRef();\n    this.jpgRef = React.createRef();\n    this.loadJSONRef = React.createRef();\n\n\n    this.mp_reset = this.mp_reset.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.handleFileName = this.handleFileName.bind(this);\n    this.handleSADfaceUpload = this.handleSADfaceUpload.bind(this);\n    this.SADfaceUpload = this.SADfaceUpload.bind(this);\n  }\n\n   \n\n  mp_reset(){\n    console.log(\"reset\");\n    localStorage.clear();\n    window.location.reload(false);\n  }\n  \n\n\n  handle_set_analyst_name(event){\n    let analyst_name = event.target.value;\n\n      update_analyst_name(analyst_name)\n  }\n\n  handle_set_analyst_email(event){\n    let analyst_email = event.target.value;\n\n    update_analyst_email(analyst_email);\n  }\n\n\n \n\n  download_png(){\n    var fileName = this.props.fileName;\n    if(fileName.length === 0) {fileName = \"default\"}\n      fileName+=\".png\";\n      let link = this.pngRef.current;\n      link.download = fileName;\n  }\n\n  download_jpg(){\n      let fileName = this.props.fileName;\n      if(fileName.length === 0) {fileName = \"default\"}\n        fileName+=\".jpg\"\n\n      let link = this.jpgRef.current;\n      link.download = fileName;\n\n  }\n\n \n\n  download_sadface(){\n    this.props.fileManager('save', 'json', null)\n  }\n\n   handleFileName(event){\n    let file_name = event.target.value;\n    this.props.setFileName(file_name);\n  }\n\n  handleSADfaceUpload(){\n    let loadJSON = this.loadJSONRef.current;\n    loadJSON.click();\n  }\n\n  SADfaceUpload(){\n    let newFile = this.loadJSONRef.current.files;\n    this.props.fileManager('load','json',null,newFile);\n\n  }\n\n  render() {\n    /*Reset Confirmation Modal */\n\n      let resetConfirmModal = {\n        trigger: {\n          triggerText: 'Reset',\n          title: 'Reset MonkeyPuzzle to her initial state',\n          id: 'clear_storage_button',\n          className: 'btn btn-danger',\n        },\n        title: 'Reset MonkeyPuzzle',\n        id: \"confirm_reset_modal\",\n        content: <div className=\"modal-body\">\n        <p>Are you sure that you want to reset MonkeyPuzzle?<br /> This will empty the current analysis and adjust all options back to their initial settings.</p>\n        </div>,\n        footer: {\n          buttonNo: 2,\n          button1: {\n            className: 'btn btn-secondary',\n            value: 'Cancel',\n          },\n          button2: {\n            className: 'btn btn-danger',\n            value: 'Reset',\n          },\n        } \n      };\n    return (\n            /*Slidein Panel: START*/\n\n      <nav id=\"menu\" className=\"menu\">\n    <a href=\"http://arg.napier.ac.uk/monkeypuzzle/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <header className=\"menu-header\">\n          <span className=\"menu-header-title\">MonkeyPuzzle</span>\n        </header>\n    </a>\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Interface</h3>\n        <ul className=\"menu-section-list\">\n          <li>\n            <Button\n              id=\"toggle_resources\"\n              className=\"btn btn-default\" \n              variant=\"light\"\n              title=\"Toggle the visibility of the resources pane\"\n              children=\"Toggle Resource Pane\"\n              onClick={this.props.toggleResourcePane}\n\n            />\n          </li>\n          <li> \n            <Modal \n              modalProps = {resetConfirmModal}  \n              onClick = {this.mp_reset}\n\n            />\n          </li>\n          <li>\n           <Button\n            id=\"load_demo_argument_button\"\n            className=\"btn btn-default\" \n            variant=\"light\"\n            title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n            children=\"Load Demo\"\n            onClick={this.props.load_demo_argument}\n\n          />\n          </li>\n          <li>\n              <textarea \n                id=\"analyst_name_textarea\" \n                type=\"text\" rows=\"1\" \n                cols=\"20\" \n                maxLength=\"40\" style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Name\" \n                title=\"Type your name here...\" \n                onChange={this.handle_set_analyst_name}\n              >\n              </textarea>\n          </li>\n          <li>\n              <textarea \n                id=\"analyst_email_textarea\" \n                type=\"text\" \n                rows=\"1\" \n                cols=\"20\" \n                maxLength=\"40\" \n                style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Email\" \n                title=\"Type your email address here...\" \n                onChange={this.handle_set_analyst_email}\n              >\n              </textarea>\n          </li>\n      </ul>\n    </section>\n\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Export</h3>\n        <ul className=\"menu-section-list\">\n           <li>\n              <textarea \n                id=\"export_filename\" \n                type=\"text\" \n                rows=\"1\" \n                cols=\"20\" \n                maxLength=\"20\" \n                style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Filename\" \n                title=\"The name for the exported file\"\n                onChange={this.handleFileName}\n              >\n              </textarea>\n          </li>\n\n          <li>\n            <Button \n              id=\"export_button\"\n              className=\"btn btn-default\" \n              onClick={this.download_sadface} \n              title=\"Export the current analysis to a SADFace formatted JSON document\"\n              variant=\"light\"\n            >\n              SADFace\n            </Button>\n          </li>\n          <li>\n          <a href={this.props.png} \n          target=\"blank\" \n          id=\"download_png\"\n          ref={this.pngRef}\n          >\n            <Button \n             // id=\"download_png\"\n              className=\"btn btn-default\" \n              title=\"Export the current analysis to a PNG image\" \n              onClick={this.download_png}\n              variant=\"light\"\n            >\n              PNG\n            </Button>\n            </a>\n          </li>\n          <li>\n             <a href={this.props.jpg} \n             target=\"blank\" \n             id=\"download_jpg\"\n             ref={this.jpgRef}\n             >\n            <Button \n              id=\"download_jpg\"\n              className=\"btn btn-default\" \n              title=\"Export the current analysis to a JPG image\" \n              onClick={this.download_jpg}\n              variant=\"light\"\n            >\n              JPG\n            </Button>\n            </a>\n          </li>\n      </ul>\n      </section>\n      \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Import</h3>\n        <ul className=\"menu-section-list\">\n      <span className=\"upload-span\">\n        <a rel=\"ignore\">\n          <div style={{display: \"inline-block\"}}>\n           <input \n            id=\"loadJSON\" \n            style={{display: \"none\"}} \n            accept=\".json\" \n            role=\"button\" \n            tabIndex=\"-1000\" \n            type=\"file\" \n            className=\"upload-button\" \n            onChange={this.SADfaceUpload}\n            ref={this.loadJSONRef}\n          />\n          \n          <Button\n            className=\"btn btn-default\"\n            onClick={this.handleSADfaceUpload}\n            title=\"Load a SADFace formatted JSON document into MonkeyPuzzle\"\n            variant=\"light\"\n\n          >\n            SADFace\n          </Button>\n          </div>\n        </a>\n      </span>\n      \n        </ul>\n    </section>\n  \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Documentation</h3>\n        <ul className=\"menu-section-list\">  \n          <li>          \n            <a \n              href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" \n              id=\"a\"\n              >\n                About MonkeyPuzzle\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" \n              id=\"a\"\n              >\n                Quick-start\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" \n              id=\"a\"\n              >\n                Code Repository\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" \n              id=\"a\"\n            >\n              Issue Tracker\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" \n              id=\"a\"\n            >\n              Licensing\n            </a>\n          </li>\n      </ul>\n      </section>\n    </nav>\n    );\n  }\n}  // Slidein Panel: END \n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}