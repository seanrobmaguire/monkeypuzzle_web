{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar shortestpaths_1 = require(\"./shortestpaths\");\n\nvar descent_1 = require(\"./descent\");\n\nvar rectangle_1 = require(\"./rectangle\");\n\nvar linklengths_1 = require(\"./linklengths\");\n\nvar Link3D = function () {\n  function Link3D(source, target) {\n    this.source = source;\n    this.target = target;\n  }\n\n  Link3D.prototype.actualLength = function (x) {\n    var _this = this;\n\n    return Math.sqrt(x.reduce(function (c, v) {\n      var dx = v[_this.target] - v[_this.source];\n      return c + dx * dx;\n    }, 0));\n  };\n\n  return Link3D;\n}();\n\nexports.Link3D = Link3D;\n\nvar Node3D = function () {\n  function Node3D(x, y, z) {\n    if (x === void 0) {\n      x = 0;\n    }\n\n    if (y === void 0) {\n      y = 0;\n    }\n\n    if (z === void 0) {\n      z = 0;\n    }\n\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  return Node3D;\n}();\n\nexports.Node3D = Node3D;\n\nvar Layout3D = function () {\n  function Layout3D(nodes, links, idealLinkLength) {\n    var _this = this;\n\n    if (idealLinkLength === void 0) {\n      idealLinkLength = 1;\n    }\n\n    this.nodes = nodes;\n    this.links = links;\n    this.idealLinkLength = idealLinkLength;\n    this.constraints = null;\n    this.useJaccardLinkLengths = true;\n    this.result = new Array(Layout3D.k);\n\n    for (var i = 0; i < Layout3D.k; ++i) {\n      this.result[i] = new Array(nodes.length);\n    }\n\n    nodes.forEach(function (v, i) {\n      for (var _i = 0, _a = Layout3D.dims; _i < _a.length; _i++) {\n        var dim = _a[_i];\n        if (typeof v[dim] == 'undefined') v[dim] = Math.random();\n      }\n\n      _this.result[0][i] = v.x;\n      _this.result[1][i] = v.y;\n      _this.result[2][i] = v.z;\n    });\n  }\n\n  ;\n\n  Layout3D.prototype.linkLength = function (l) {\n    return l.actualLength(this.result);\n  };\n\n  Layout3D.prototype.start = function (iterations) {\n    var _this = this;\n\n    if (iterations === void 0) {\n      iterations = 100;\n    }\n\n    var n = this.nodes.length;\n    var linkAccessor = new LinkAccessor();\n    if (this.useJaccardLinkLengths) linklengths_1.jaccardLinkLengths(this.links, linkAccessor, 1.5);\n    this.links.forEach(function (e) {\n      return e.length *= _this.idealLinkLength;\n    });\n    var distanceMatrix = new shortestpaths_1.Calculator(n, this.links, function (e) {\n      return e.source;\n    }, function (e) {\n      return e.target;\n    }, function (e) {\n      return e.length;\n    }).DistanceMatrix();\n    var D = descent_1.Descent.createSquareMatrix(n, function (i, j) {\n      return distanceMatrix[i][j];\n    });\n    var G = descent_1.Descent.createSquareMatrix(n, function () {\n      return 2;\n    });\n    this.links.forEach(function (_a) {\n      var source = _a.source,\n          target = _a.target;\n      return G[source][target] = G[target][source] = 1;\n    });\n    this.descent = new descent_1.Descent(this.result, D);\n    this.descent.threshold = 1e-3;\n    this.descent.G = G;\n    if (this.constraints) this.descent.project = new rectangle_1.Projection(this.nodes, null, null, this.constraints).projectFunctions();\n\n    for (var i = 0; i < this.nodes.length; i++) {\n      var v = this.nodes[i];\n\n      if (v.fixed) {\n        this.descent.locks.add(i, [v.x, v.y, v.z]);\n      }\n    }\n\n    this.descent.run(iterations);\n    return this;\n  };\n\n  Layout3D.prototype.tick = function () {\n    this.descent.locks.clear();\n\n    for (var i = 0; i < this.nodes.length; i++) {\n      var v = this.nodes[i];\n\n      if (v.fixed) {\n        this.descent.locks.add(i, [v.x, v.y, v.z]);\n      }\n    }\n\n    return this.descent.rungeKutta();\n  };\n\n  Layout3D.dims = ['x', 'y', 'z'];\n  Layout3D.k = Layout3D.dims.length;\n  return Layout3D;\n}();\n\nexports.Layout3D = Layout3D;\n\nvar LinkAccessor = function () {\n  function LinkAccessor() {}\n\n  LinkAccessor.prototype.getSourceIndex = function (e) {\n    return e.source;\n  };\n\n  LinkAccessor.prototype.getTargetIndex = function (e) {\n    return e.target;\n  };\n\n  LinkAccessor.prototype.getLength = function (e) {\n    return e.length;\n  };\n\n  LinkAccessor.prototype.setLength = function (e, l) {\n    e.length = l;\n  };\n\n  return LinkAccessor;\n}();","map":null,"metadata":{},"sourceType":"script"}