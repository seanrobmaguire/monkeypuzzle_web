{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'; //Import Components\n\nimport Modal from '../Modal/Modal';\nimport TabBody from './TabBody';\nimport { update_resource, remove_resources_from_nodes, delete_resource, add_resource, add_resource_metadata, get_sd } from '../../lib/Sadface';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resourceType: 'text',\n      current_tab: null,\n      tabs: []\n    };\n    this.addTab = this.addTab.bind(this);\n    this.setType = this.setType.bind(this);\n    this.addTabToArray = this.addTabToArray.bind(this);\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.updateTab = this.updateTab.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n  }\n\n  addTab() {\n    console.log(this.state.tabs, \"TABS newTAbs\");\n    let newTab = {};\n    newTab = add_resource(' ');\n    console.log(this.state.tabs, \"TABS newTAbs\");\n    add_resource_metadata(newTab.id, 'title', '');\n    newTab.metadata = {\n      title: '' //localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n    };\n    newTab.type = this.state.resourceType;\n    console.log(this.state.tabs, \"TABS newTAbs\");\n    this.addTabToArray(newTab);\n  }\n\n  setType(e) {\n    this.setState({\n      resourceType: e.target.value.toLowerCase()\n    }, () => console.log(this.state.resourceType, 'type set'));\n  }\n\n  addTabToArray(newTab) {\n    console.log(newTab, \"addTabToArray\");\n    console.log(this.state.tabs, \"addto array tabs\");\n    this.setState({\n      tabs: [...this.state.tabs, newTab]\n    }, () => console.log(this.state.tabs, \"add to arry\")); // this.setState(state => {\n    //     const tabs = this.state.tabs.concat(newTab);\n    //     console.log(this.state.tabs);\n    //         return {\n    //             tabs,\n    //         }\n    //     }, () => {\n    //             console.log(this.state.tabs, 'added to array');\n    //            this.setActiveTab(newTab.id);\n    //         }\n    // );\n  }\n\n  setActiveTab(value) {\n    console.log(\"setActiveTabs\");\n    this.setState({\n      current_tab: value\n    }, function () {\n      console.log(this.state.current_tab, 'active');\n    });\n  }\n\n  remove_tab(i, tabId) {\n    delete_resource(tabId);\n    remove_resources_from_nodes(tabId);\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n    if (this.state.tabs.length >= 1 && i !== -1) {\n      this.setState(state => {\n        const tabs = state.tabs.filter((item, j) => i !== j);\n        return {\n          tabs\n        };\n      }, () => {\n        if (this.state.tabs.length >= 1) {\n          this.setActiveTab(this.state.tabs[this.state.tabs.length - 1].id);\n        }\n      });\n    }\n  }\n\n  updateTab(tab_id, title, content) {\n    const tabs = this.state.tabs.slice();\n    tabs.forEach(tab => {\n      if (tab.id === tab_id) {\n        if (title !== null) {\n          tab.metadata.title = title;\n          update_resource(tab_id, null, title);\n        }\n\n        if (content !== null) {\n          tab.content = content;\n          update_resource(tab_id, content, null);\n        }\n      }\n    });\n    this.setState({\n      tabs\n    }, () => console.log(\"Tabs updated\"));\n    this.props.updateLocalStorage();\n  }\n\n  loadTabs(resources) {\n    console.log(\"loadTabs\", resources);\n    this.setState({\n      tabs: resources\n    }, () => {\n      console.log(this.state.tabs, \"TABS\");\n      this.setActiveTab(this.state.tabs[this.state.tabs.length - 1].id);\n    });\n  }\n\n  componentDidUpdate(prevProps, prevSate) {\n    if (prevProps.newResource !== this.props.newResource) {\n      this.updateTab(this.props.newResource.tab, null, this.props.newResource.content);\n      this.updateTab(this.props.newResource.tab, this.props.newResource.filename, null);\n    }\n\n    if (prevProps.resourcesFromJson !== this.props.resourcesFromJson) {\n      this.loadTabs(this.props.resourcesFromJson);\n    }\n  }\n\n  render() {\n    let num = 0;\n    const newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        onChange: this.setType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        buttonNo: 2,\n        button1: {\n          className: \"btn btn-secondary\",\n          value: \"Close\"\n        },\n        button2: {\n          className: \"btn btn-primary\",\n          value: \"Add\"\n        }\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      style: {\n        display: this.props.showResourcePane ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: newResourceModal,\n      onClick: this.addTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), this.state.tabs.map((item, i) => {\n      const onSetActiveTab = () => this.setActiveTab(item.id);\n\n      return React.createElement(\"button\", {\n        key: item.id + '_btn',\n        onClick: onSetActiveTab,\n        className: this.state.current_tab === item.id ? \"tablinks active\" : \"tablinks\",\n        id: item.id + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, ++num);\n    })), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, this.state.tabs.map((item, i) => {\n      if (item.type === \"text\") {\n        this.loadTxtRef = React.createRef();\n\n        const handleRemove = () => this.remove_tab(i, item.id);\n\n        const clickLoad = () => {\n          this.loadTxtRef.current.click();\n        };\n\n        const handleFileUpload = e => {\n          this.props.fileManager('load', 'txt', item.id, e.target.files);\n        };\n\n        const handleFileDownload = () => {\n          this.props.fileManager('save', 'txt', item);\n        };\n\n        const handleChangeTitle = e => {\n          var titleValue = e.target.value;\n          this.updateTab(item.id, titleValue, null);\n        };\n\n        const handleChangeContent = e => {\n          var contentValue = e.target.value;\n          this.updateTab(item.id, null, contentValue);\n        };\n\n        const handleAddAtomFromText = e => {\n          this.props.addAtomFromText();\n        };\n\n        return React.createElement(TabBody, {\n          id: item.id,\n          key: item.id + '_bdy',\n          i: i,\n          style: {\n            display: this.state.current_tab === item.id ? 'block' : 'none'\n          },\n          handleremove: handleRemove,\n          handleFileUpload: handleFileUpload,\n          handleFileDownload: handleFileDownload,\n          clickLoad: clickLoad,\n          handleAddAtomFromText: handleAddAtomFromText,\n          selectedText: this.props.selectedText,\n          titleValue: item.metadata.title,\n          contentValue: item.content,\n          handleChange_title: handleChangeTitle,\n          handleChangeContent: handleChangeContent,\n          loadTxtRef: this.loadTxtRef,\n          setSelectedText: this.props.setSelectedText,\n          setFocus: this.props.setFocus,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        });\n      }\n    })));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane/ResourcePane.js"],"names":["React","Component","FontAwesomeIcon","faPlusSquare","Modal","TabBody","update_resource","remove_resources_from_nodes","delete_resource","add_resource","add_resource_metadata","get_sd","ResourcePane","constructor","props","state","resourceType","current_tab","tabs","addTab","bind","setType","addTabToArray","setActiveTab","remove_tab","updateTab","loadTabs","console","log","newTab","id","metadata","title","type","e","setState","target","value","toLowerCase","i","tabId","localStorage","setItem","JSON","stringify","length","filter","item","j","tab_id","content","slice","forEach","tab","updateLocalStorage","resources","componentDidUpdate","prevProps","prevSate","newResource","filename","resourcesFromJson","render","num","newResourceModal","trigger","triggerText","className","triggerId","footer","buttonNo","button1","button2","display","showResourcePane","map","onSetActiveTab","loadTxtRef","createRef","handleRemove","clickLoad","current","click","handleFileUpload","fileManager","files","handleFileDownload","handleChangeTitle","titleValue","handleChangeContent","contentValue","handleAddAtomFromText","addAtomFromText","selectedText","setSelectedText","setFocus"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B,C,CACA;;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAOC,eAAP,EAAuBC,2BAAvB,EAAmDC,eAAnD,EAAoEC,YAApE,EAAkFC,qBAAlF,EAAyGC,MAAzG,QAAsH,mBAAtH;;AAEA,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AACjCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,YAAY,EAAE,MADP;AAEPC,MAAAA,WAAW,EAAE,IAFN;AAGPC,MAAAA,IAAI,EAAE;AAHC,KAAX;AAMA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKK,SAAL,GAAiB,KAAKA,SAAL,CAAeL,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKM,QAAL,GAAe,KAAKA,QAAL,CAAcN,IAAd,CAAmB,IAAnB,CAAf;AACH;;AAEDD,EAAAA,MAAM,GAAE;AACJQ,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB,EAA6B,cAA7B;AACA,QAAIW,MAAM,GAAG,EAAb;AAEAA,IAAAA,MAAM,GAAGpB,YAAY,CAAC,GAAD,CAArB;AACQkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB,EAA6B,cAA7B;AAERR,IAAAA,qBAAqB,CAACmB,MAAM,CAACC,EAAR,EAAY,OAAZ,EAAqB,EAArB,CAArB;AACAD,IAAAA,MAAM,CAACE,QAAP,GAAkB;AAACC,MAAAA,KAAK,EAAE,EAAR,CAC1B;;AAD0B,KAAlB;AAEAH,IAAAA,MAAM,CAACI,IAAP,GAAc,KAAKlB,KAAL,CAAWC,YAAzB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB,EAA6B,cAA7B;AACA,SAAKI,aAAL,CAAmBO,MAAnB;AAEH;;AAECR,EAAAA,OAAO,CAACa,CAAD,EAAG;AACR,SAAKC,QAAL,CAAc;AAACnB,MAAAA,YAAY,EAAEkB,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,WAAf;AAAf,KAAd,EAA4D,MACxDX,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,YAAvB,EAAqC,UAArC,CADJ;AAEH;;AAEAM,EAAAA,aAAa,CAACO,MAAD,EAAQ;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ,EAAoB,eAApB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB,EAA6B,kBAA7B;AACA,SAAKiB,QAAL,CAAc;AACVjB,MAAAA,IAAI,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,IAAf,EAAqBW,MAArB;AADI,KAAd,EAEG,MAAMF,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB,EAA6B,aAA7B,CAFT,EAHkB,CAMlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF;;AAEAK,EAAAA,YAAY,CAACc,KAAD,EAAO;AAChBV,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAKO,QAAL,CAAc;AACVlB,MAAAA,WAAW,EAAEoB;AADH,KAAd,EAEG,YAAW;AACVV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWE,WAAvB,EAAoC,QAApC;AACH,KAJD;AAKH;;AAECO,EAAAA,UAAU,CAACe,CAAD,EAAIC,KAAJ,EAAU;AAClBhC,IAAAA,eAAe,CAACgC,KAAD,CAAf;AACAjC,IAAAA,2BAA2B,CAACiC,KAAD,CAA3B;AAEAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAejC,MAAM,EAArB,CAA7B;;AAEA,QAAI,KAAKI,KAAL,CAAWG,IAAX,CAAgB2B,MAAhB,IAA0B,CAA1B,IAA+BN,CAAC,KAAK,CAAC,CAA1C,EAA4C;AACxC,WAAKJ,QAAL,CAAcpB,KAAK,IAAG;AAClB,cAAMG,IAAI,GAAGH,KAAK,CAACG,IAAN,CAAW4B,MAAX,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAaT,CAAC,KAAIS,CAApC,CAAb;AACA,eAAO;AACH9B,UAAAA;AADG,SAAP;AAGH,OALD,EAKG,MAAM;AACT,YAAG,KAAKH,KAAL,CAAWG,IAAX,CAAgB2B,MAAhB,IAAyB,CAA5B,EAA8B;AAC1B,eAAKtB,YAAL,CAAkB,KAAKR,KAAL,CAAWG,IAAX,CAAgB,KAAKH,KAAL,CAAWG,IAAX,CAAgB2B,MAAhB,GAAuB,CAAvC,EAA0Cf,EAA5D;AACH;AACA,OATD;AAUH;AACJ;;AAEGL,EAAAA,SAAS,CAACwB,MAAD,EAASjB,KAAT,EAAgBkB,OAAhB,EAAwB;AAC7B,UAAMhC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAX,CAAgBiC,KAAhB,EAAb;AACAjC,IAAAA,IAAI,CAACkC,OAAL,CAAcC,GAAD,IAAQ;AACjB,UAAGA,GAAG,CAACvB,EAAJ,KAAWmB,MAAd,EAAsB;AAClB,YAAGjB,KAAK,KAAK,IAAb,EAAkB;AACdqB,UAAAA,GAAG,CAACtB,QAAJ,CAAaC,KAAb,GAAqBA,KAArB;AACA1B,UAAAA,eAAe,CAAC2C,MAAD,EAAS,IAAT,EAAejB,KAAf,CAAf;AACH;;AACD,YAAGkB,OAAO,KAAK,IAAf,EAAoB;AACpBG,UAAAA,GAAG,CAACH,OAAJ,GAAcA,OAAd;AACA5C,UAAAA,eAAe,CAAC2C,MAAD,EAASC,OAAT,EAAkB,IAAlB,CAAf;AACH;AACA;AACJ,KAXD;AAYA,SAAKf,QAAL,CAAc;AAACjB,MAAAA;AAAD,KAAd,EAAsB,MAClBS,OAAO,CAACC,GAAR,CAAa,cAAb,CADJ;AAEI,SAAKd,KAAL,CAAWwC,kBAAX;AACP;;AAED5B,EAAAA,QAAQ,CAAC6B,SAAD,EAAW;AACf5B,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB2B,SAAxB;AACA,SAAKpB,QAAL,CAAc;AAACjB,MAAAA,IAAI,EAAEqC;AAAP,KAAd,EAAiC,MAAM;AACnC5B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWG,IAAvB,EAA6B,MAA7B;AACA,WAAKK,YAAL,CAAkB,KAAKR,KAAL,CAAWG,IAAX,CAAgB,KAAKH,KAAL,CAAWG,IAAX,CAAgB2B,MAAhB,GAAyB,CAAzC,EAA4Cf,EAA9D;AAEH,KAJD;AASF;;AAEN0B,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,QAAZ,EAAsB;AACpC,QAAGD,SAAS,CAACE,WAAV,KAA0B,KAAK7C,KAAL,CAAW6C,WAAxC,EAAoD;AAC5C,WAAKlC,SAAL,CAAe,KAAKX,KAAL,CAAW6C,WAAX,CAAuBN,GAAtC,EAA2C,IAA3C,EAAiD,KAAKvC,KAAL,CAAW6C,WAAX,CAAuBT,OAAxE;AACA,WAAKzB,SAAL,CAAe,KAAKX,KAAL,CAAW6C,WAAX,CAAuBN,GAAtC,EAA2C,KAAKvC,KAAL,CAAW6C,WAAX,CAAuBC,QAAlE,EAA4E,IAA5E;AACP;;AACD,QAAGH,SAAS,CAACI,iBAAV,KAAgC,KAAK/C,KAAL,CAAW+C,iBAA9C,EAAgE;AACxD,WAAKnC,QAAL,CAAc,KAAKZ,KAAL,CAAW+C,iBAAzB;AAIP;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,GAAG,GAAE,CAAT;AACA,UAAMC,gBAAgB,GAAG;AACrBC,MAAAA,OAAO,EAAE;AACLC,QAAAA,WAAW,EAAE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAE/D,YAAvB;AAAqC,UAAA,IAAI,EAAC,IAA1C;AAA+C,UAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAELgE,QAAAA,SAAS,EAAE,gBAFN;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADY;AAMrBtC,MAAAA,EAAE,EAAC,+BANkB;AAOrBE,MAAAA,KAAK,EAAE,mBAPc;AAQrBkB,MAAAA,OAAO,EAAG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADM,EAEN;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,EAAE,EAAC,eAApC;AAAoD,QAAA,QAAQ,EAAE,KAAK7B,OAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAFM,CARW;AAcrBgD,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,EAAE,CADN;AAEJC,QAAAA,OAAO,EAAE;AACLJ,UAAAA,SAAS,EAAE,mBADN;AAEL9B,UAAAA,KAAK,EAAE;AAFF,SAFL;AAMJmC,QAAAA,OAAO,EAAE;AACLL,UAAAA,SAAS,EAAE,iBADN;AAEL9B,UAAAA,KAAK,EAAE;AAFF;AANL;AAda,KAAzB;AA4BA,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,eAAlC;AAAkD,MAAA,KAAK,EAAE;AAACoC,QAAAA,OAAO,EAAE,KAAK3D,KAAL,CAAW4D,gBAAX,GAA8B,OAA9B,GAAwC;AAAlD,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAwC,MAAA,EAAE,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,KAAD;AACI,MAAA,UAAU,EAAIV,gBADlB;AAEI,MAAA,OAAO,EAAI,KAAK7C,MAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,EAOQ,KAAKJ,KAAL,CAAWG,IAAX,CAAgByD,GAAhB,CAAoB,CAAC5B,IAAD,EAAOR,CAAP,KAAY;AAC5B,YAAMqC,cAAc,GAAG,MACnB,KAAKrD,YAAL,CAAkBwB,IAAI,CAACjB,EAAvB,CADJ;;AAEQ,aACI;AACI,QAAA,GAAG,EAAEiB,IAAI,CAACjB,EAAL,GAAU,MADnB;AAEI,QAAA,OAAO,EAAE8C,cAFb;AAGI,QAAA,SAAS,EAAE,KAAK7D,KAAL,CAAWE,WAAX,KAA2B8B,IAAI,CAACjB,EAAhC,GAAqC,iBAArC,GAAyD,UAHxE;AAII,QAAA,EAAE,EAAEiB,IAAI,CAACjB,EAAL,GAAQ,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMK,EAAEiC,GANP,CADJ;AAUX,KAbD,CAPR,CADJ,EAyBY;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhD,KAAL,CAAWG,IAAX,CAAgByD,GAAhB,CAAoB,CAAC5B,IAAD,EAAMR,CAAN,KAAY;AAC7B,UAAGQ,IAAI,CAACd,IAAL,KAAc,MAAjB,EAAwB;AACxB,aAAK4C,UAAL,GAAkB7E,KAAK,CAAC8E,SAAN,EAAlB;;AAGA,cAAMC,YAAY,GAAG,MACjB,KAAKvD,UAAL,CAAgBe,CAAhB,EAAmBQ,IAAI,CAACjB,EAAxB,CADJ;;AAEA,cAAMkD,SAAS,GAAE,MAAM;AACnB,eAAKH,UAAL,CAAgBI,OAAhB,CAAwBC,KAAxB;AACH,SAFD;;AAIA,cAAMC,gBAAgB,GAAIjD,CAAD,IAAM;AAC3B,eAAKpB,KAAL,CAAWsE,WAAX,CAAuB,MAAvB,EAA+B,KAA/B,EAAsCrC,IAAI,CAACjB,EAA3C,EAA+CI,CAAC,CAACE,MAAF,CAASiD,KAAxD;AAEH,SAHD;;AAIA,cAAMC,kBAAkB,GAAG,MAAK;AAE5B,eAAKxE,KAAL,CAAWsE,WAAX,CAAuB,MAAvB,EAA+B,KAA/B,EAAsCrC,IAAtC;AAEH,SAJD;;AAKA,cAAMwC,iBAAiB,GAAIrD,CAAD,IAAM;AAC5B,cAAIsD,UAAU,GAAGtD,CAAC,CAACE,MAAF,CAASC,KAA1B;AACA,eAAKZ,SAAL,CAAesB,IAAI,CAACjB,EAApB,EAAwB0D,UAAxB,EAAoC,IAApC;AACH,SAHD;;AAKA,cAAMC,mBAAmB,GAAIvD,CAAD,IAAM;AAC9B,cAAIwD,YAAY,GAAGxD,CAAC,CAACE,MAAF,CAASC,KAA5B;AACA,eAAKZ,SAAL,CAAesB,IAAI,CAACjB,EAApB,EAAwB,IAAxB,EAA8B4D,YAA9B;AACH,SAHD;;AAIA,cAAMC,qBAAqB,GAAIzD,CAAD,IAAM;AAChC,eAAKpB,KAAL,CAAW8E,eAAX;AACH,SAFD;;AAGA,eACI,oBAAC,OAAD;AACI,UAAA,EAAE,EAAE7C,IAAI,CAACjB,EADb;AAEI,UAAA,GAAG,EAAEiB,IAAI,CAACjB,EAAL,GAAU,MAFnB;AAGI,UAAA,CAAC,EAAES,CAHP;AAII,UAAA,KAAK,EAAE;AAACkC,YAAAA,OAAO,EAAE,KAAK1D,KAAL,CAAWE,WAAX,KAA2B8B,IAAI,CAACjB,EAAhC,GAAqC,OAArC,GAA+C;AAAzD,WAJX;AAMI,UAAA,YAAY,EAAEiD,YANlB;AAOI,UAAA,gBAAgB,EAAEI,gBAPtB;AAQI,UAAA,kBAAkB,EAAEG,kBARxB;AASI,UAAA,SAAS,EAAEN,SATf;AAUI,UAAA,qBAAqB,EAAIW,qBAV7B;AAWI,UAAA,YAAY,EAAE,KAAK7E,KAAL,CAAW+E,YAX7B;AAcI,UAAA,UAAU,EAAE9C,IAAI,CAAChB,QAAL,CAAcC,KAd9B;AAeI,UAAA,YAAY,EAAIe,IAAI,CAACG,OAfzB;AAiBI,UAAA,kBAAkB,EAAEqC,iBAjBxB;AAkBI,UAAA,mBAAmB,EAAEE,mBAlBzB;AAqBI,UAAA,UAAU,EAAE,KAAKZ,UArBrB;AAsBI,UAAA,eAAe,EAAE,KAAK/D,KAAL,CAAWgF,eAtBhC;AAuBI,UAAA,QAAQ,EAAE,KAAKhF,KAAL,CAAWiF,QAvBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH;AACA,KA7DA,CADL,CAzBZ,CADJ;AA4FH;;AA9PgC;;AAgQrC,eAAenF,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\n//Import Components\nimport Modal from '../Modal/Modal';\nimport TabBody from './TabBody';\nimport{update_resource,remove_resources_from_nodes,delete_resource, add_resource, add_resource_metadata, get_sd} from '../../lib/Sadface'; \n\nclass ResourcePane extends Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            resourceType: 'text',\n            current_tab: null,\n            tabs: [],\n        }\n        \n        this.addTab = this.addTab.bind(this);\n        this.setType = this.setType.bind(this);\n        this.addTabToArray = this.addTabToArray.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.remove_tab = this.remove_tab.bind(this);\n        this.updateTab = this.updateTab.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n    };\n\n    addTab(){\n        console.log(this.state.tabs, \"TABS newTAbs\");\n        let newTab = {}\n        \n        newTab = add_resource(' ');\n                console.log(this.state.tabs, \"TABS newTAbs\");\n\n        add_resource_metadata(newTab.id, 'title', '');\n        newTab.metadata = {title: ''}\n//localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n        newTab.type = this.state.resourceType;\n        console.log(this.state.tabs, \"TABS newTAbs\");\n        this.addTabToArray(newTab);   \n    \n    }\n\n      setType(e){\n        this.setState({resourceType: e.target.value.toLowerCase()}, () =>\n            console.log(this.state.resourceType, 'type set'));\n    }\n\n     addTabToArray(newTab){\n        console.log(newTab, \"addTabToArray\");\n        console.log(this.state.tabs, \"addto array tabs\");\n        this.setState({\n            tabs: [...this.state.tabs, newTab]\n        }, () => console.log(this.state.tabs, \"add to arry\"))\n        // this.setState(state => {\n        //     const tabs = this.state.tabs.concat(newTab);\n        //     console.log(this.state.tabs);\n        //         return {\n        //             tabs,\n        //         }\n        //     }, () => {\n        //             console.log(this.state.tabs, 'added to array');\n        //            this.setActiveTab(newTab.id);\n        //         }\n       // );\n    }\n\n     setActiveTab(value){\n        console.log(\"setActiveTabs\");\n        this.setState({\n            current_tab: value\n        }, function (){\n            console.log(this.state.current_tab, 'active');\n        });\n    }\n\n      remove_tab(i, tabId){\n        delete_resource(tabId);\n        remove_resources_from_nodes(tabId);\n\n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        \n        if (this.state.tabs.length >= 1 && i !== -1){\n            this.setState(state =>{\n                const tabs = state.tabs.filter((item, j) => i !==j);\n                return {\n                    tabs,\n                };\n            }, () => {    \n            if(this.state.tabs.length >=1){\n                this.setActiveTab(this.state.tabs[this.state.tabs.length-1].id);\n            }\n            });      \n        }   \n    };\n\n        updateTab(tab_id, title, content){\n            const tabs = this.state.tabs.slice();\n            tabs.forEach((tab) =>{\n                if(tab.id === tab_id) {\n                    if(title !== null){\n                        tab.metadata.title = title;\n                        update_resource(tab_id, null, title);\n                    }\n                    if(content !== null){\n                    tab.content = content;\n                    update_resource(tab_id, content, null);\n                }\n                }\n            });\n            this.setState({tabs}, () =>\n                console.log( \"Tabs updated\"));\n                this.props.updateLocalStorage();\n        }\n\n        loadTabs(resources){\n            console.log(\"loadTabs\", resources);\n            this.setState({tabs: resources}, () => {\n                console.log(this.state.tabs, \"TABS\");\n                this.setActiveTab(this.state.tabs[this.state.tabs.length - 1].id);\n               \n            }\n            \n\n                );\n\n         }\n\n    componentDidUpdate(prevProps, prevSate) {\n        if(prevProps.newResource !== this.props.newResource){\n                this.updateTab(this.props.newResource.tab, null, this.props.newResource.content);\n                this.updateTab(this.props.newResource.tab, this.props.newResource.filename, null);\n        }\n        if(prevProps.resourcesFromJson !== this.props.resourcesFromJson){\n                this.loadTabs(this.props.resourcesFromJson);\n            \n            \n\n        }\n    }\n\n    render() {\n        let num =0;\n        const newResourceModal = {\n            trigger: {\n                triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n                className: 'add_tab_button',\n                triggerId: \"add_tab_button\",\n            },\n            id:\"resource_pane_selection_modal\",\n            title: 'New Resource Pane',\n            content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\" onChange={this.setType}>\n                <option>Text</option>\n                </select>\n                </div>,\n            footer: {\n                buttonNo: 2,\n                button1: {\n                    className: \"btn btn-secondary\",\n                    value: \"Close\"\n                },\n                button2: {\n                    className: \"btn btn-primary\",\n                    value: \"Add\"\n                }\n            }\n        };\n\n\n        return ( \n            <div className=\"resource-pane\" id=\"resource-pane\" style={{display: this.props.showResourcePane ? \"block\" : \"none\"}}> \n                <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                     <Modal\n                         modalProps = {newResourceModal}  \n                         onClick = {this.addTab} \n\n                     />\n                    {\n                        this.state.tabs.map((item, i)=> {\n                            const onSetActiveTab = () =>\n                                this.setActiveTab(item.id);\n                                    return(\n                                        <button  \n                                            key={item.id + '_btn'}\n                                            onClick={onSetActiveTab} \n                                            className={this.state.current_tab === item.id ? \"tablinks active\" : \"tablinks\"}\n                                            id={item.id+\"_btn\"}\n                                        >\n                                            {++num}\n                                        </button>\n                                    );\n                        })\n                    }\n                </div>\n                            \n                        <div className=\"tab_body\" id=\"tab_body\">\n                            {this.state.tabs.map((item,i) => {\n                                if(item.type === \"text\"){\n                                this.loadTxtRef = React.createRef();\n                                \n\n                                const handleRemove = () =>\n                                    this.remove_tab(i, item.id);\n                                const clickLoad =() => {        \n                                    this.loadTxtRef.current.click();\n                                }\n\n                                const handleFileUpload = (e) =>{\n                                    this.props.fileManager('load', 'txt', item.id, e.target.files);\n\n                                }\n                                const handleFileDownload = () =>{\n\n                                    this.props.fileManager('save', 'txt', item);\n\n                                }\n                                const handleChangeTitle = (e) =>{\n                                    var titleValue = e.target.value;\n                                    this.updateTab(item.id, titleValue, null)\n                                }\n\n                                const handleChangeContent = (e) =>{\n                                    var contentValue = e.target.value;\n                                    this.updateTab(item.id, null, contentValue)\n                                }\n                                const handleAddAtomFromText = (e) =>{\n                                    this.props.addAtomFromText();\n                                }\n                                return(\n                                    <TabBody\n                                        id={item.id}\n                                        key={item.id + '_bdy'}\n                                        i={i}\n                                        style={{display: this.state.current_tab === item.id ? 'block' : 'none'}}\n\n                                        handleremove={handleRemove}\n                                        handleFileUpload={handleFileUpload}\n                                        handleFileDownload={handleFileDownload}\n                                        clickLoad={clickLoad}\n                                        handleAddAtomFromText = {handleAddAtomFromText}\n                                        selectedText={this.props.selectedText}\n\n\n                                        titleValue={item.metadata.title}\n                                        contentValue = {item.content}\n                                    \n                                        handleChange_title={handleChangeTitle}\n                                        handleChangeContent={handleChangeContent}\n\n\n                                        loadTxtRef={this.loadTxtRef}\n                                        setSelectedText={this.props.setSelectedText}\n                                        setFocus={this.props.setFocus}\n                                       \n                                    />\n                                );\n                            }\n                            })}\n                        </div>\n            </div>\n        );\n    }\n}\nexport default ResourcePane;\n"]},"metadata":{},"sourceType":"module"}