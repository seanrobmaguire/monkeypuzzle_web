{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Immutable from 'immutable';\n\nclass CytoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    //const elements = this.props.cy_data;\n    const elements = this.props.cy_data;\n    return React.createElement(CytoscapeComponent, {\n      elements: CytoscapeComponent.normalizeElements(elements),\n      stylesheet: [{\n        selector: \"node\",\n        style: {\n          \"content\": \"data(content)\",\n          \"text-opacity\": 0.7,\n          \"width\": \"100%\",\n          \"height\": \"100%\",\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          \"text-outline-color\": \"#eee\",\n          \"text-outline-width\": 1\n        }\n      }, {\n        selector: \"[typeshape]\",\n        style: {\n          \"shape\": \"data(typeshape)\"\n        }\n      }, {\n        selector: \"node[typeshape='diamond']\",\n        style: {\n          'background-color': '#CC9900'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Conflict']\",\n        style: {\n          'background-color': 'red'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Support']\",\n        style: {\n          'background-color': 'green'\n        }\n      }, {\n        selector: \"edge\",\n        style: {\n          \"line-color\": \"#9dbaea\",\n          \"target-arrow-shape\": \"triangle\",\n          \"target-arrow-color\": \"#9dbaea\",\n          \"curve-style\": \"bezier\"\n        }\n      }, {\n        selector: \":selected\",\n        style: {\n          \"border-width\": \"1\",\n          \"border-color\": \"black\",\n          \"background-color\": \"#3399CC\"\n        }\n      }, {\n        selector: \".atom-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }, {\n        selector: \".scheme-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CytoContainer;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js"],"names":["React","ReactDOM","CytoscapeComponent","Immutable","CytoContainer","Component","constructor","props","render","elements","cy_data","normalizeElements","selector","style"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN;AACA,UAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWG,OAA5B;AAEA,WACJ,oBAAC,kBAAD;AACE,MAAA,QAAQ,EAAER,kBAAkB,CAACS,iBAAnB,CAAqCF,QAArC,CADZ;AAEE,MAAA,UAAU,EAAG,CACH;AAAIG,QAAAA,QAAQ,EAAE,MAAd;AACIC,QAAAA,KAAK,EAAE;AACH,qBAAW,eADR;AAEH,0BAAgB,GAFb;AAGH,mBAAU,MAHP;AAIH,oBAAW,MAJR;AAKH,yBAAe,QALZ;AAMH,yBAAe,OANZ;AAOH,gCAAsB,MAPnB;AAQH,gCAAsB;AARnB;AADX,OADG,EAaH;AAAID,QAAAA,QAAQ,EAAE,aAAd;AACIC,QAAAA,KAAK,EAAE;AACH,mBAAQ;AADL;AADX,OAbG,EAkBH;AAAID,QAAAA,QAAQ,EAAE,2BAAd;AACIC,QAAAA,KAAK,EAAE;AACH,8BAAoB;AADjB;AADX,OAlBG,EAuBH;AACID,QAAAA,QAAQ,EAAE,+CADd;AAEIC,QAAAA,KAAK,EAAE;AACH,8BAAoB;AADjB;AAFX,OAvBG,EA6BH;AACID,QAAAA,QAAQ,EAAE,8CADd;AAEIC,QAAAA,KAAK,EAAE;AACH,8BAAoB;AADjB;AAFX,OA7BG,EAmCH;AAAID,QAAAA,QAAQ,EAAE,MAAd;AACIC,QAAAA,KAAK,EAAE;AACH,wBAAc,SADX;AAEH,gCAAsB,UAFnB;AAGH,gCAAsB,SAHnB;AAIH,yBAAe;AAJZ;AADX,OAnCG,EA2CH;AAAID,QAAAA,QAAQ,EAAE,WAAd;AACIC,QAAAA,KAAK,EAAE;AACH,0BAAe,GADZ;AAEH,0BAAe,OAFZ;AAGH,8BAAoB;AAHjB;AADX,OA3CG,EAkDH;AAAID,QAAAA,QAAQ,EAAE,aAAd;AACIC,QAAAA,KAAK,EAAC;AACF,uBAAa,MADX;AAEF,4BAAkB;AAFhB;AADV,OAlDG,EAwDH;AAAID,QAAAA,QAAQ,EAAE,eAAd;AACIC,QAAAA,KAAK,EAAC;AACF,uBAAa,MADX;AAEF,4BAAkB;AAFhB;AADV,OAxDG,CAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI;AAmEC;;AA5EuC;;AA+E5C,eAAeT,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Immutable from 'immutable';\n\nclass CytoContainer extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    //const elements = this.props.cy_data;\n    const elements = this.props.cy_data;\n\n    return (\n<CytoscapeComponent\n  elements={CytoscapeComponent.normalizeElements(elements)}\n  stylesheet= {[\n            {   selector: \"node\", \n                style: {\n                    \"content\": \"data(content)\",\n                    \"text-opacity\": 0.7,\n                    \"width\" : \"100%\",\n                    \"height\" : \"100%\",\n                    \"text-valign\": \"bottom\",\n                    \"text-halign\": \"right\",\n                    \"text-outline-color\": \"#eee\",\n                    \"text-outline-width\": 1\n              }\n            },\n            {   selector: \"[typeshape]\", \n                style: {\n                    \"shape\":\"data(typeshape)\"\n                }\n            },\n            {   selector: \"node[typeshape='diamond']\", \n                style: {\n                    'background-color': '#CC9900'\n                }\n            },\n            {\n                selector: \"node[typeshape='diamond'][content='Conflict']\",\n                style: {\n                    'background-color': 'red'\n                }\n            },\n            {\n                selector: \"node[typeshape='diamond'][content='Support']\",\n                style: {\n                    'background-color': 'green'\n                }\n            },\n            {   selector: \"edge\", \n                style: {\n                    \"line-color\": \"#9dbaea\",\n                    \"target-arrow-shape\": \"triangle\",\n                    \"target-arrow-color\": \"#9dbaea\",\n                    \"curve-style\": \"bezier\"\n                }\n            },\n            {   selector: \":selected\", \n                style: {\n                    \"border-width\":\"1\",\n                    \"border-color\":\"black\",\n                    \"background-color\": \"#3399CC\"\n                }\n            },\n            {   selector: \".atom-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            },\n            {   selector: \".scheme-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            }\n            ]}\n/>\n);  }\n}\n\nexport default CytoContainer;"]},"metadata":{},"sourceType":"module"}