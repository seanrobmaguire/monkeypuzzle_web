{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/Interface.js\";\nimport React, { Component } from 'react';\nimport MyButton from './MyButton';\nimport TextArea from './TextArea';\nconst interfaceDivStyle = {\n  marginLeft: '20px',\n  marginRight: '60px'\n};\n\nclass Interface extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.confirmReset = this.confirmReset.bind(this);\n    this.loadDemoArgument = this.loadDemoArgument.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.filemanger = this.filemanger.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n  }\n\n  toggleResourcePane() {\n    console.log('toggleResourcePane');\n  }\n\n  confirmReset() {\n    console.log(\"reset\"); //$('#confirm_reset_modal').modal('show');\"\n  }\n\n  loadDemoArgument() {\n    console.log('load');\n  }\n\n  set_analyst_name() {\n    console.log('set name');\n  }\n\n  set_analyst_email() {\n    console.log('set email');\n  }\n\n  filemanger() {\n    console.log('file manager');\n  }\n\n  loadSADFace() {\n    // \"document.getElementByID('loadJSON').click();\"\n    console.log('loadSADFace');\n  }\n\n  render() {\n    return React.createElement(\"nav\", {\n      id: \"menu\",\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://arg.napier.ac.uk/monkeypuzzle/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"menu-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"menu-header-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"MonkeyPuzzle\"))), React.createElement(\"section\", {\n      className: \"menu-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"menu-section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Interface\"), React.createElement(\"ul\", {\n      className: \"menu-section-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      id: \"toggle_resource\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      className: \"btn btn-default\",\n      onClick: () => this.toggleResourcePane(),\n      title: \"Toggle the visibility of the resources pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Toggle Resource Pane\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      id: \"clear_storage_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      className: \"btn btn-danger\",\n      onClick: () => this.confirmReset(),\n      title: \"Reset MonkeyPuzzle to her initial state\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Reset\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      id: \"load_demo_argument_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      className: \"btn btn-default\",\n      onClick: () => this.loadDemoArgument(),\n      title: \"Load a demonstration SADFace document into MonkeyPuzzle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Load Demo\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: interfaceDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      className: \"form-control\",\n      id: \"analyst_name_textarea\",\n      rows: \"1\",\n      cols: \"20\",\n      maxLength: \"40\",\n      placeholder: \"Name\",\n      title: \"Type your name here...\",\n      onChange: () => this.set_analyst_name(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: interfaceDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      className: \"form-control\",\n      id: \"analyst_email_textarea\",\n      rows: \"1\",\n      cols: \"20\",\n      maxLength: \"40\",\n      placeholder: \"Email\",\n      title: \"Type your email here...\",\n      onChange: () => this.set_analyst_email(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }))))), React.createElement(\"section\", {\n      className: \"menu-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"menu-section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Export\"), React.createElement(\"ul\", {\n      className: \"menu-section-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: interfaceDivStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      className: \"form-control\",\n      id: \"export_filename\",\n      rows: \"1\",\n      cols: \"20\",\n      maxLength: \"40\",\n      placeholder: \"Filename\",\n      title: \"The name for the exported file\",\n      style: textAreaStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      id: \"export_button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      className: \"btn btn-default\",\n      onClick: () => this.download_sadface(),\n      title: \"Export the current analysis to a SADFace formatted JSON document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"SADFace\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\"\n      /*target=\"_blank\"*/\n      ,\n      id: \"download_png\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      className: \"btn btn_default\",\n      title: \"Export the current analysis to a PNG image\",\n      onClick: () => this.download_png(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"PNG\"))), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\"\n      /*target=\"_blank\"*/\n      ,\n      id: \"download_jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(MyButton, {\n      className: \"btn btn_default\",\n      title: \"Export the current analysis to a JPG image\",\n      onClick: () => this.download_jpg(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"JPG\"))))), React.createElement(\"section\", {\n      className: \"menu-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"menu-section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Import\"), React.createElement(\"ul\", {\n      className: \"menu-section-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"upload-span\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      rel: \"ignore\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      display: \"inline-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"loadJSON\"\n      /*style=\"display:none;\"*/\n      ,\n      accept: \".json\",\n      role: \"button\",\n      tabIndex: \"-1000\",\n      type: \"file\",\n      className: \"uploadbutton\",\n      onChange: () => this.filemanger('load', 'json', null, null, null),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"button\",\n      className: \"btn btn-default\",\n      value: \"SADFace\",\n      onClick: () => this.loadSADFace(),\n      title: \"Load a SADFace formated JSON document into MonkeyPuzzle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })))))), React.createElement(\"section\", {\n      className: \"menu-section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"menu-section-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Documentation\"), React.createElement(\"ul\", {\n      className: \"menu-section-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/\",\n      id: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, \"About MonkeyPuzzle\"), React.createElement(\"a\", {\n      href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\",\n      id: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \"Quick-start\"), React.createElement(\"a\", {\n      href: \"https://github.com/ARG-ENU/monkeypuzzle_web\",\n      id: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Code Repository\"), React.createElement(\"a\", {\n      href: \"https://github.com/ARG-ENU/monkeypuzzle_web/issues\",\n      id: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Issue Tracker\"), React.createElement(\"a\", {\n      href: \"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\",\n      id: \"a\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, \"Licensing\"))));\n  }\n\n} // Slidein Panel: END \n\n\nexport default Interface;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/Interface.js"],"names":["React","Component","MyButton","TextArea","interfaceDivStyle","marginLeft","marginRight","Interface","constructor","props","state","toggleResourcePane","bind","confirmReset","loadDemoArgument","set_analyst_name","set_analyst_email","filemanger","loadSADFace","console","log","render","textAreaStyle","download_sadface","download_png","download_jpg"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport MyButton from './MyButton';\nimport TextArea from'./TextArea';\n\nconst interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}\n\n\nclass Interface extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n    };\n\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.confirmReset = this.confirmReset.bind(this);\n    this.loadDemoArgument = this.loadDemoArgument.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.filemanger = this.filemanger.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n  }\n\n   toggleResourcePane(){\n      console.log('toggleResourcePane');\n  }\n\n  confirmReset(){\n    console.log(\"reset\");\n    //$('#confirm_reset_modal').modal('show');\"\n  }\n  \n  loadDemoArgument(){\n    console.log('load');\n  }\n\n  set_analyst_name(){\n    console.log('set name');\n  }\n\n  set_analyst_email(){\n    console.log('set email');\n  }\n\n  filemanger(){\n    console.log('file manager');\n  }\n  loadSADFace(){\n   // \"document.getElementByID('loadJSON').click();\"\n   console.log('loadSADFace');\n  }\n\n  render() {\n    return (\n\n           <nav id=\"menu\" className=\"menu\">\n          <a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n                <header className=\"menu-header\">\n                  <span className=\"menu-header-title\">MonkeyPuzzle</span>\n                </header>\n            </a>\n\n            <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Interface</h3>\n                <ul className=\"menu-section-list\">            \n                   <li>\n                    <a href=\"#\" id=\"toggle_resource\">\n                      <MyButton \n                        className=\"btn btn-default\"\n                        onClick={() => this.toggleResourcePane()}\n                        title=\"Toggle the visibility of the resources pane\"\n                      >\n                        Toggle Resource Pane\n                      </MyButton>\n                      </a>\n                   </li>\n                   <li>\n                    <a href=\"#\" id=\"clear_storage_button\">\n                      <MyButton\n                        className=\"btn btn-danger\"\n                        onClick={() => this.confirmReset()}\n                        title=\"Reset MonkeyPuzzle to her initial state\"\n                      >\n                        Reset\n                      </MyButton>\n                    </a>\n                   </li>\n                   <li>\n                     <a href=\"#\" id=\"load_demo_argument_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.loadDemoArgument()}\n                        title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                      >\n                        Load Demo \n                      </MyButton>\n                     </a>\n                   </li>\n                   <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_name_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Name\"\n                          title=\"Type your name here...\"\n                          onChange={() => this.set_analyst_name()}\n                        />\n                     </div>\n                   </li>\n                    <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_email_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Email\"\n                          title=\"Type your email here...\"\n                          onChange={() => this.set_analyst_email()}\n                        />\n                     </div>\n                   </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Export</h3>\n                <ul className=\"menu-section-list\">\n                  <li>\n                    <div style={interfaceDivStyle}>\n                      <TextArea\n                        className=\"form-control\"\n                        id=\"export_filename\"\n                        rows=\"1\"\n                        cols=\"20\"\n                        maxLength=\"40\"\n                        placeholder=\"Filename\"\n                        title=\"The name for the exported file\"\n                        style={textAreaStyle}\n                      />\n                    </div>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"export_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.download_sadface()}\n                        title=\"Export the current analysis to a SADFace formatted JSON document\"\n                      >\n                        SADFace\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\"*/ id=\"download_png\">\n                      <MyButton \n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a PNG image\"\n                        onClick={() => this.download_png()}\n                      >\n                        PNG\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\"*/ id=\"download_jpg\">\n                      <MyButton\n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a JPG image\"\n                        onClick={() => this.download_jpg()}\n                      >\n                        JPG\n                      </MyButton>\n                    </a>\n                  </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Import</h3>\n                <ul className=\"menu-section-list\">\n                  <span className=\"upload-span\">\n                    <a rel=\"ignore\">\n                      <div display=\"inline-block\">\n                        <input id=\"loadJSON\" /*style=\"display:none;\"*/ accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                        <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                      </div>\n                    </a>\n                  </span>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Documentation</h3>\n                <ul className=\"menu-section-list\">\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                </ul>\n              </section>\n\n              </nav>\n    );\n  }\n}  // Slidein Panel: END \n\nexport default Interface;\n"]},"metadata":{},"sourceType":"module"}