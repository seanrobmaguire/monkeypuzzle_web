{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape'; //import Components\n\nimport ResourcePane from './Components/ResourcePane';\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\nimport Modal from './Components/Modal'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { get_sd, import_json, add_resource, export_cytoscape, new_uuid, add_resource_metadata } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: [],\n      last_number: 0,\n      tab_id: \"\",\n      sd: {},\n      showResourcePane: true,\n      test: {},\n      activeTab: 0,\n      cy_data: null,\n      selected: ''\n    };\n    this.test = this.test.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.download = this.download.bind(this);\n    this.saveSADFace = this.saveSADFace.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.remove_all_tabs = this.remove_all_tabs.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.mp_reset = this.mp_reset.bind(this);\n    this.clear_local_storage = this.clear_local_storage.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.download = this.download.bind(this); //ResourcePane Functions\n\n    this.add_tab = this.add_tab.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.change_title = this.change_title.bind(this);\n    this.set_text_resource_content = this.set_text_resource_content.bind(this);\n    this.add_resource_header = this.add_resource_header.bind(this); //slide in\n\n    this.loadDemoArgument = this.loadDemoArgument.bind(this);\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  openAddBoardModal() {\n    this.setState({\n      boardAddModalShow: true\n    }, function () {\n      console.log(this.state.boardAddModalShow);\n    });\n  }\n\n  createNewTab() {}\n\n  add_tab(load_id = null) {\n    let newTab = {};\n\n    if (load_id == null) {\n      var new_resource = add_resource(' ');\n      newTab.tab_id = new_resource.id;\n      add_resource_metadata(newTab.tab_id, 'title', '');\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    } else {\n      newTab.tab_id = load_id;\n    }\n\n    this.add_resource_header(newTab);\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    newTab.media = resource_type_txt;\n  }\n\n  add_resource_header(newTab) {\n    let tab_number = 33333;\n    this.setState({\n      last_number: this.state.last_number + 1\n    }, function () {\n      console.log(this.state.last_number, 'try');\n      tab_number = this.state.last_number;\n      console.log(tab_number, 'tab head');\n      newTab.tab_number = tab_number;\n      this.setState(state => {\n        const tabs = this.state.tabs.concat(newTab);\n        return {\n          tabs\n        };\n      }, function () {\n        console.log(this.state.tabs, 'header');\n        this.setActiveTab(tab_number);\n      });\n    });\n  }\n\n  test(index) {\n    this.setState({\n      activeTab: index\n    });\n    console.log(this.activeTab);\n  }\n\n  setActiveTab(value) {\n    this.setState({\n      activeTab: value\n    }, function () {\n      console.log(this.state.activeTab, 'active');\n    });\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.sate.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    this.setState(state => {\n      const tabs = state.tabs.filter((item, j) => i !== j);\n      delete_resource(current_tab);\n      sd.nodes.forEach(node => {\n        if (node.type == 'atom') {\n          if (current_tab in node.sources) {\n            delete_source(node.id, current_tab);\n          }\n        }\n      });\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n      if (tabs.length >= 1 && idx != -1) {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length - 1];\n        set_active_tab(current_tab + \"_body\");\n      }\n\n      return {\n        tabs\n      };\n    });\n    /*\n        delete_resource(current_tab);\n        sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (current_tab in node.sources) {\n                    delete_source(node.id, current_tab);\n                }\n            }\n        });\n        \n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        if (tabs.length >= 1 && idx != -1)\n        {\n            tabs.splice(idx, 1);\n            current_tab = tabs[tabs.length-1];\n            set_active_tab(current_tab+\"_body\");\n        }\n        */\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  download(filename, text) {}\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        if (document.getElementById(\"title_\" + tab_id).value !== '') {\n          var filename = document.getElementById(\"title_\" + tab_id).value + \".txt\";\n        } else {\n          var filename = \"tab\" + tab_id + \"_text.txt\";\n        }\n\n        var text = document.getElementById(tab_id).value;\n        this.download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = document.getElementById(\"export_filename\").value;\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        this.saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + tab_id).files;\n        var file = files[0];\n        var filename = file.name;\n        document.getElementById(\"title_\" + tab_id).innerText = filename;\n        console.log(file.name);\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          document.getElementById(tab_id).innerText = content;\n          this.update_resource(tab_id, content, filename);\n        };\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = this.loadSADFace(file);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          this.remove_all_tabs();\n          this.loadTabs(json.resources);\n        };\n      }\n    }\n  }\n\n  download(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \" + filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n    outfile.click();\n    document.body.removeChild(outfile);\n  }\n\n  get_resource(resource_id) {\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n     Returns: An resource dict\n    */\n    if (resource_id) {\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n      return resource;\n    }\n  }\n\n  isTab_id(tab) {\n    return tab.tab_id;\n  }\n\n  loadTabs() {}\n\n  saveSADFace() {}\n\n  loadSADFace() {}\n\n  loadJSON() {}\n\n  loadTabs(tabs) {\n    this.state.tabs.forEach(function (tab) {\n      this.load_tab(tab);\n    });\n  }\n\n  load_tab(resource) {\n    if (resource != null) {\n      var tab_id = resource.id;\n      this.add_tab(tab_id);\n      this.set_text_resource_title(tab_id, resource.metadata.title);\n      this.set_text_resource_content(tab_id, resource.content);\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      console.log(\"update resource\");\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.title = title;\n        }\n        /*  this.state.sd.resources.forEach((res) => {\n              if(res.id === resource_id) {\n                  res = resource;\n              }\n          });*/\n\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n\n      this.setState({\n        tabs\n      }, () => {\n        console.log(\"update tabs\");\n      });\n    }\n  } //Resource Pane Functions\n\n\n  change_title(tab_id, val) {\n    console.log(\"change title\" + tab_id + val);\n    this.set_text_resource_title(tab_id, val);\n  }\n\n  set_text_resource_title(tab_id, title) {\n    console.log(\"set text resource title\" + tab_id + title);\n    this.update_resource(tab_id, null, title); //    this.update_local_storage();\n  }\n\n  change_content(tab_id, val) {\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n  }\n\n  set_text_resource_content(tab_id, text) {\n    this.update_resource(tab_id, text, null); //update_local_storage();\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  mp_reset() {\n    this.clear_local_storage();\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  set_analyst_name() {\n    console.log(\"set_analyst_name\");\n  }\n\n  set_analyst_email() {\n    console.log(\"set_analyst_email\");\n  }\n\n  download_sadface() {\n    console.log(\"download_sadface\");\n  }\n\n  download_png() {\n    console.log(\"download_png\");\n  }\n\n  download_jpg() {\n    console.log(\"download_jpg\");\n  }\n\n  loadDemoArgument() {\n    console.log('load demo');\n    var elements = [// list of graph elements to start with\n    {\n      // node a\n      data: {\n        id: 'a'\n      }\n    }, {\n      // node b\n      data: {\n        id: 'b'\n      }\n    }, {\n      // edge ab\n      data: {\n        id: 'ab',\n        source: 'a',\n        target: 'b'\n      }\n    }];\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    var cy_data = export_cytoscape(import_json(demo_sadface_doc)); // initCytoscape();\n\n    var elements = JSON.parse(cy_data);\n    console.log(elements);\n    this.setState({\n      cy_data: elements\n    }, () => console.log(this.state.cy_data));\n    console.log(this.state.cy_data);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      toggleResourcePane: this.toggleResourcePane,\n      mp_reset: this.mp_reset,\n      loadDemoArgument: this.loadDemoArgument,\n      set_analyst_name: this.set_analyst_name,\n      set_analyst_email: this.set_analyst_email,\n      download_sadface: this.download_sadface,\n      download_png: this.download_png,\n      download_jpg: this.download_jpg,\n      fileManager: this.fileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      activeTab: this.state.activeTab,\n      setActiveTab: this.setActiveTab,\n      fileManager: this.fileManager,\n      change_title: this.change_title,\n      change_content: this.change_content,\n      new_uuid: this.new_uuid,\n      loadTabs: this.loadTabs,\n      cy_data: this.state.cy_data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","ReactCytoscape","ResourcePane","MainUI","Menu","Modal","get_sd","import_json","add_resource","export_cytoscape","new_uuid","add_resource_metadata","App","constructor","props","state","tabs","last_number","tab_id","sd","showResourcePane","test","activeTab","cy_data","selected","bind","toggleButton","add_to_tabs_arr","download","saveSADFace","update_resource","loadSADFace","loadJSON","remove_all_tabs","loadTabs","get_resource","toggleResourcePane","mp_reset","clear_local_storage","set_analyst_name","set_analyst_email","download_sadface","download_png","download_jpg","setActiveTab","add_tab","remove_tab","change_title","set_text_resource_content","add_resource_header","loadDemoArgument","setState","concat","console","log","openAddBoardModal","boardAddModalShow","createNewTab","load_id","newTab","new_resource","id","localStorage","setItem","JSON","stringify","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","media","tab_number","index","value","resource_id","key","sate","resources","forEach","res","metadata","content","componentDidMount","slideout","i","filter","item","j","delete_resource","current_tab","nodes","node","type","sources","delete_source","length","idx","splice","set_active_tab","toggle","filename","fileManager","operation","filetype","files","file","name","innerText","reader","FileReader","onload","e","result","readAsText","json","parse","outfile","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","resource","findIndex","tab","isTab_id","load_tab","set_text_resource_title","title","undefined","val","change_content","clear","window","location","reload","elements","data","source","target","demo_sadface_doc","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape';\n\n//import Components\nimport ResourcePane from './Components/ResourcePane';\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\n\nimport Modal from './Components/Modal';\n\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {get_sd,import_json, add_resource, export_cytoscape, new_uuid,add_resource_metadata} from './lib/Sadface'; \n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 0,\n\t\t\ttab_id:\"\",\n            sd: {},\n            showResourcePane: true,\n            test:{},\n            activeTab: 0,\n            cy_data: null,\n            selected: '',\n\n\n\n\n\n        };\n        this.test = this.test.bind(this);\n        this.toggleButton = this.toggleButton.bind(this);\n        this.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.download = this.download.bind(this);\n        this.saveSADFace = this.saveSADFace.bind(this);\n        this.update_resource =this.update_resource.bind(this);\n        this.loadSADFace =this.loadSADFace.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.remove_all_tabs = this.remove_all_tabs.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.mp_reset =this.mp_reset.bind(this);\n        this.clear_local_storage = this.clear_local_storage.bind(this);\n        this.set_analyst_name = this.set_analyst_name.bind(this);\n        this.set_analyst_email =this.set_analyst_email.bind(this);\n        this.download_sadface =this.download_sadface.bind(this);\n        this.download_png =this.download_png.bind(this);\n        this.download_jpg = this.download_jpg.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.download = this.download.bind(this);\n\n        //ResourcePane Functions\n        this.add_tab = this.add_tab.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.change_title = this.change_title.bind(this);\n        this.set_text_resource_content = this.set_text_resource_content.bind(this);\n        this.add_resource_header = this.add_resource_header.bind(this);\n\n        //slide in\n        this.loadDemoArgument = this.loadDemoArgument.bind(this);\n\n\n    }\n\n\n\n\n\n\n\n\n\n    add_to_tabs_arr(tab_id){\n       this.setState(state => {\n          const tabs = state.tabs.concat(tab_id);\n          return {\n             tabs,\n         }}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n\n   }\n   openAddBoardModal(){\n    this.setState({ boardAddModalShow: true }, function () {\n       console.log(this.state.boardAddModalShow);\n   });\n\n}\n\ncreateNewTab(){\n}\n\n\n\n\n\n\n\nadd_tab(load_id=null){\n    let newTab = {};\n    if (load_id == null) {\n        var new_resource = add_resource(' ');\n        newTab.tab_id = new_resource.id;\n        add_resource_metadata(newTab.tab_id, 'title', '');\n        localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    }else{ newTab.tab_id = load_id; }\n\n    this.add_resource_header(newTab);\n    \n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    newTab.media = resource_type_txt;\n\n    \n        \n    }\n    \n    add_resource_header(newTab){\n\n        let tab_number = 33333;\n        this.setState({ last_number: this.state.last_number + 1}, function(){\n            console.log(this.state.last_number, 'try');\n            tab_number = this.state.last_number;\n            console.log(tab_number, 'tab head');\n            newTab.tab_number = tab_number;\n\n            this.setState(state => {\n                const tabs = this.state.tabs.concat(newTab);\n                return {\n                    tabs,\n                }}, function (){\n                    console.log(this.state.tabs, 'header');\n                    this.setActiveTab(tab_number);\n                }\n                )\n        });\n    }\n\n\n\n\n\n    test(index) {\n        this.setState({\n            activeTab: index\n        });\n        console.log(this.activeTab);\n    }\n\n    setActiveTab(value){\n        this.setState({\n            activeTab: value\n        }, function (){\n            console.log(this.state.activeTab, 'active');\n        });\n\n\n\n    }\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.sate.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\nnew_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n\n\n\n\n\n\ncomponentDidMount() {\n this.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n});\n}\n\nremove_tab(i){\n    this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n        return {\n            tabs,\n        };\n    });\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n    */\n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n    this.slideout.toggle();\n}\n\n\n\ndownload(filename,text){\n\n}\n\nfileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n    if (\"save\" == operation)    {\n        // if it's a txt file\n        if (\"txt\" == filetype) {    \n            if (document.getElementById(\"title_\"+tab_id).value !== '') {\n                var filename = document.getElementById(\"title_\"+tab_id).value+\".txt\";\n            } else {\n                var filename = \"tab\"+tab_id+\"_text.txt\";\n            }\n            var text = document.getElementById(tab_id).value;\n            this.download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var filename = document.getElementById(\"export_filename\").value;\n            if(filename.length == 0){ filename = \"default\"}\n                this.saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            var files = document.getElementById(\"load\"+tab_id).files;\n            var file = files[0];\n            var filename = file.name;\n            document.getElementById(\"title_\"+tab_id).innerText = filename;\n            console.log(file.name);\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                document.getElementById(tab_id).innerText = content;\n                this.update_resource(tab_id, content, filename);\n            }\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = this.loadSADFace(file);\n            reader.onload = function(e) {\n                var result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                this.remove_all_tabs();\n                this.loadTabs(json.resources);\n            }\n        }\n    }\n}\n\ndownload(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \"+filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n\n    outfile.click();\n\n    document.body.removeChild(outfile);\n}\n\n\nget_resource(resource_id){\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n\n    Returns: An resource dict\n    */\n    if(resource_id){\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n        return resource;\n    }\n}\n\nisTab_id(tab){\n    return tab.tab_id\n}\nloadTabs(){\n\n}\n\nsaveSADFace(){\n\n}\n\nloadSADFace(){\n\n}\n\nloadJSON(){\n\n}\n\nloadTabs(tabs) {\n    this.state.tabs.forEach(function(tab) {\n     this.load_tab(tab);\n });\n}\n\nload_tab(resource) {\n    if (resource != null) {\n        var tab_id = resource.id;\n        this.add_tab(tab_id);\n        this.set_text_resource_title(tab_id, resource.metadata.title);\n        this.set_text_resource_content(tab_id, resource.content);\n    }\n}\n\nupdate_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    \n\n    if (resource_id && (content || title)) {\n        console.log(\"update resource\");\n\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.title = title;\n            }\n          /*  this.state.sd.resources.forEach((res) => {\n                if(res.id === resource_id) {\n                    res = resource;\n                }\n            });*/\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n        this.setState({tabs}, () =>{\n            console.log(\"update tabs\");\n        });\n    }\n}\n\n//Resource Pane Functions\nchange_title(tab_id, val) {\n    console.log(\"change title\" +tab_id+val);\n    this.set_text_resource_title(tab_id, val)\n}\n\nset_text_resource_title(tab_id, title){\n    console.log(\"set text resource title\" +tab_id + title)\n    this.update_resource(tab_id, null, title);\n//    this.update_local_storage();\n}\n\nchange_content(tab_id, val){\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n}\n\nset_text_resource_content(tab_id, text){\n    this.update_resource(tab_id, text, null);\n    //update_local_storage();\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\nmp_reset()\n{\n    this.clear_local_storage();\n}\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\n\n\nset_analyst_name(){\n    console.log(\"set_analyst_name\");\n}\n\nset_analyst_email(){\n    console.log(\"set_analyst_email\");\n}\n\ndownload_sadface(){\n    console.log(\"download_sadface\")\n}\n\ndownload_png(){\n    console.log(\"download_png\");\n}\n\ndownload_jpg(){\n    console.log(\"download_jpg\");\n}\n\nloadDemoArgument(){\n    console.log('load demo');\n    var elements = [ // list of graph elements to start with\n    { // node a\n      data: { id: 'a' }\n  },\n    { // node b\n      data: { id: 'b' }\n  },\n    { // edge ab\n      data: { id: 'ab', source: 'a', target: 'b' }\n  }\n  ];\n  var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n  localStorage.setItem(\"state\",demo_sadface_doc);\n  var cy_data = export_cytoscape(import_json(demo_sadface_doc));\n   // initCytoscape();\n   var elements = JSON.parse(cy_data);\n   console.log(elements);\n   this.setState({cy_data: elements}, () => console.log(this.state.cy_data))\n   console.log(this.state.cy_data);\n}\n\n\nrender(){\n\n    return (\n    \t<div>\n\n\n\n    \t<Menu \n        toggleResourcePane={this.toggleResourcePane}\n        mp_reset={this.mp_reset}\n        loadDemoArgument={this.loadDemoArgument}\n        set_analyst_name={this.set_analyst_name}\n        set_analyst_email={this.set_analyst_email}\n        download_sadface={this.download_sadface}\n        download_png={this.download_png}\n        download_jpg={this.download_jpg}\n        fileManager={this.fileManager}\n\n        />\n\n        <MainUI\n        toggleSlideIn={() => this.toggleButton()}\n        addTab = {() => this.add_tab()}\n        tabs = {this.state.tabs}\n        remove_tab={this.remove_tab}\n        fileManager={this.fileManager}\n        showResourcePane={this.state.showResourcePane}\n        activeTab={this.state.activeTab}\n        setActiveTab={this.setActiveTab}\n        fileManager={this.fileManager}\n        change_title={this.change_title}\n        change_content={this.change_content}\n        new_uuid = {this.new_uuid}\n        loadTabs= {this.loadTabs}\n        cy_data= {this.state.cy_data}\n\n\n\n        />\n\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}