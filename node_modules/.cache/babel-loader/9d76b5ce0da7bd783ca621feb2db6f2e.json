{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js\";\nimport React, { Component } from 'react'; //Import Components\n\nimport Modal from './Modal';\nimport { newResourceModal } from './ModalData.jsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      //tabs: this.props.tabs,\n      activeTab: this.props.activeTab,\n      last_number: 1\n    };\n    this.handlefileManager = this.handlefileManager.bind(this);\n  }\n\n  searchTabs(tab) {}\n\n  handlefileManager() {\n    this.props.fileManager();\n  }\n\n  render() {\n    const activeTab = this.props.activeTab;\n    var tabNumber = 1;\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      style: {\n        display: this.props.showResourcePane ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: newAtomModal //   onClick = {this.props.addTab}               \n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), this.props.tabs.map((item, i) => {\n      const onSetActiveTab = () => this.props.setActiveTab(i);\n\n      return React.createElement(\"button\", {\n        onClick: onSetActiveTab,\n        className: this.props.activeTab === i ? \"tablinks active\" : \"tablinks\",\n        key: item.tab_id,\n        id: item.tab_id + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, tabNumber++);\n    })));\n  }\n\n}\n\nclass TabBody extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      readOnly: false\n    };\n    this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n  }\n\n  toggle_edit_lock() {\n    this.setState({\n      readOnly: !this.state.readOnly\n    });\n  }\n\n  render() {\n    const _this$props = this.props,\n          tabs = _this$props.tabs,\n          id = _this$props.id,\n          i = _this$props.i,\n          activeTab = _this$props.activeTab,\n          handleremove = _this$props.handleremove,\n          handleLoad = _this$props.handleLoad,\n          fileManager = _this$props.fileManager,\n          style = _this$props.style,\n          loadTrigger = _this$props.loadTrigger,\n          ref = _this$props.ref,\n          clickLoad = _this$props.clickLoad,\n          loadRef = _this$props.loadRef,\n          titleRef = _this$props.titleRef,\n          contentRef = _this$props.contentRef,\n          handleFileUpload = _this$props.handleFileUpload,\n          handleChange_title = _this$props.handleChange_title,\n          handleChange_content = _this$props.handleChange_content;\n    return React.createElement(\"div\", {\n      id: id + \"_body\",\n      className: \"resource_pane_tab_content\",\n      style: style,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Remove this tab from the resource pane\",\n      onClick: handleremove,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"load\" + id,\n      style: {\n        display: \"block\"\n      },\n      accept: \".txt\",\n      ref: loadRef,\n      onChange: handleFileUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      id: \"load\" + id + \"_btn\",\n      className: \"btn btn-default\",\n      onClick: clickLoad,\n      title: \"Load a text file into this resource tab\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-upload fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      onClick: fileManager\n      /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/\n      ,\n      title: \"Save this resource tab to a text file\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-download fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"toggle_edit_lock_button\",\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Toggle editability of the content area\",\n      onClick: this.toggle_edit_lock,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      id: \"toggle_edit_lock_icon_\" + id,\n      className: this.state.readOnly ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Add node from text selection\"\n      /* onclick=\"new_atom_txt_resource_button();\"*/\n      ,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-puzzle-piece fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"textarea\", {\n      id: \"title_\" + id,\n      type: \"text\",\n      rows: \"1\",\n      style: {\n        resize: \"none\"\n      },\n      className: \"form-control\",\n      placeholder: \"The name of this resource...\",\n      onChange: handleChange_title,\n      ref: titleRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      id: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: id,\n      className: \"form-control\",\n      placeholder: \"Enter your source text here...\",\n      rows: \"20\",\n      ref: contentRef,\n      onChange: handleChange_content\n      /*onfocus=\"set_focus(this)\"*/\n      ,\n      style: {\n        resize: \"vertical\",\n        minHeight: \"35px\"\n      },\n      readOnly: this.state.readOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js"],"names":["React","Component","Modal","newResourceModal","FontAwesomeIcon","faPlusSquare","Button","ResourcePane","constructor","props","trigger","triggerText","className","triggerId","id","title","content","footer","value","state","activeTab","last_number","handlefileManager","bind","searchTabs","tab","fileManager","render","tabNumber","display","showResourcePane","newAtomModal","tabs","map","item","i","onSetActiveTab","setActiveTab","tab_id","TabBody","readOnly","toggle_edit_lock","setState","handleremove","handleLoad","style","loadTrigger","ref","clickLoad","loadRef","titleRef","contentRef","handleFileUpload","handleChange_title","handleChange_content","resize","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n//Import Components\nimport Modal from './Modal';\nimport {newResourceModal} from './ModalData.jsx';\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass ResourcePane extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tabs: this.props.tabs,\n            activeTab: this.props.activeTab,\n            last_number: 1,\n        }\n        this.handlefileManager =this.handlefileManager.bind(this);\n\n\n    };\n    newResourceModal = {\n        trigger: {\n          triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n          className: 'add_tab_button',\n          triggerId: \"add_tab_button\",\n      },\n      id:\"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content:  <div className=\"modal-body\">\n      <p>Select a resource type</p>\n      <select className=\"form-control\" id=\"resource_type\">\n      <option>Text</option>\n      </select>\n      </div>,\n      footer: {\n          className: 'btn btn-primary',\n          value: 'Add',\n     // action: this.add_tab() \n }\n};\n\n\nsearchTabs(tab){\n\n}\n\n\n\n\n\nhandlefileManager(){\n    this.props.fileManager()\n}\n\nrender() {\n    const{\n        activeTab\n\n\n    } =this.props;\n    var tabNumber = 1;\n\n\n    return ( \n        <div className=\"resource-pane\" id=\"resource-pane\" style={{display: this.props.showResourcePane ? \"block\" : \"none\"}}> \n\n            <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                        <Modal\n                            modalProps = {newAtomModal}  \n                         //   onClick = {this.props.addTab}               \n                         />\n                    \n                        {\n                            this.props.tabs.map((item, i)=> {\n                            const onSetActiveTab = () =>\n                                this.props.setActiveTab(i);\n                            return(\n                                <button  \n                                    onClick={onSetActiveTab} \n                                    className={this.props.activeTab === i ? \"tablinks active\" : \"tablinks\"}\n                                    key={item.tab_id}\n                                    id={item.tab_id+\"_btn\"}\n                                >\n                                    {tabNumber++}\n                                </button>\n                                \n                                )})}\n                    </div>\n\n{/*\n                        \n                    <div className=\"tab_body\" id=\"tab_body\">\n                        {this.props.tabs.map((item,i) => {\n                            this.myRef = React.createRef();\n                            this.contentRef = React.createRef();\n                            this.titleRef = React.createRef();\n\n                            const handleRemove = () =>\n                                this.props.remove_tab(i);\n\n                            const clickLoad =() => {\n                                \n                                this.myRef.current.click();\n\n                            }\n\n                            const handleFileUpload = () =>{\n                            var files = this.myRef.current.files;\n                            this.props.fileManager('load','txt',  item.tab_id ,files);\n\n                            }\n                            const handlefileManager = () =>{\n\n                                this.props.fileManager('save', 'txt', item.tab_id); \n                            }\n                            const handleChange_title = (e) =>{\n                                var titleValue = this.titleRef.current.value;\n                                this.props.change_title(item.tab_id, titleValue);\n                            }\n\n                            const handleChange_content = () =>{\n                                var contentValue = this.contentRef.current.value;\n                                this.props.change_content(item.tab_id, contentValue);\n                            }\n\n                            return(\n                                <TabBody\n                                    id={item.tab_id}\n                                    key={item.tab_id}\n                                    i={i}\n                                    activeTab={this.state.activeTab}\n                                    handleremove={handleRemove}\n                                    fileManager={handlefileManager}\n                                    style={{display: this.props.activeTab === i ? 'block' : 'none'}}\n                                    clickLoad={clickLoad}\n                                   \n                                    handleFileUpload={handleFileUpload}\n                                    handleChange_title={handleChange_title}\n                                    handleChange_content={handleChange_content}\n\n                                    loadRef={this.myRef}\n                                    titleRef={this.titleRef}\n                                    contentRef={this.contentRef}\n                                />\n\n                                )\n                        })}\n                    </div>*/}\n                    </div>\n                    );\n\n}\n}\n\n\n\n\nclass TabBody extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            readOnly: false,\n        }\n        this.toggle_edit_lock = this.toggle_edit_lock.bind(this);\n\n    }\n\n    toggle_edit_lock(){\n        this.setState({readOnly: !this.state.readOnly})\n\n    }\n\n    render() { \n        const {\n          tabs,\n          id,\n          i,\n          activeTab,\n          handleremove,\n          handleLoad,\n          fileManager,\n          style,\n          loadTrigger,\n          ref,\n          clickLoad,\n//element references\nloadRef,\ntitleRef,\ncontentRef,\n\nhandleFileUpload,\nhandleChange_title,\nhandleChange_content\n\n\n\n}=this.props\n\n\n\nreturn (\n    <div id={id+\"_body\"} className=\"resource_pane_tab_content\" style={style}>\n    <form>\n    <div className=\"form-group\">\n\n    <Button \n    type=\"button\" \n    className=\"btn btn-default\" \n    title=\"Remove this tab from the resource pane\"\n    onClick={handleremove}\n    variant=\"light\"\n    >\n    <i className=\"fa fa-trash fa-fw fa-lg\"></i>\n    </Button>\n    <input \n    type=\"file\" \n    id={\"load\" + id} \n    style={{display: \"block\"}} \n    accept=\".txt\" \n    ref={loadRef}\n    onChange= {handleFileUpload}\n    />\n    <Button \n    type=\"button\" \n    id={\"load\" + id + \"_btn\"} \n    className=\"btn btn-default\" \n    onClick={clickLoad}\n\n    title=\"Load a text file into this resource tab\"\n    variant=\"light\"\n    >\n    <i className=\"fa fa-upload fa-fw fa-lg\"></i>\n\n    </Button>\n    <Button \n    type=\"button\" \n    className=\"btn btn-default\" \n    onClick={fileManager}\n    /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/ \n    title=\"Save this resource tab to a text file\"\n    variant=\"light\"\n    >\n    <i className=\"fa fa-download fa-fw fa-lg\"></i>\n    </Button>\n    <Button id=\"toggle_edit_lock_button\" \n    type=\"button\" \n    className=\"btn btn-default\" \n    title=\"Toggle editability of the content area\" \n    onClick={this.toggle_edit_lock}\n    variant=\"light\"\n    >\n    <i id={\"toggle_edit_lock_icon_\" + id} \n    className={(this.state.readOnly) ? \"fa fa-lock fa-fw fa-lg\" : \"fa fa-unlock fa-fw fa-lg\"}></i>\n    </Button>\n    <Button \n    type=\"button\" \n    className=\"btn btn-default\" \n    title=\"Add node from text selection\"\n    /* onclick=\"new_atom_txt_resource_button();\"*/\n    variant=\"light\"\n    >\n    <i className=\"fa fa-puzzle-piece fa-fw fa-lg\"></i>\n    </Button>\n    </div>\n    <div className=\"form-group\">\n    <label>Title</label>\n    <textarea \n    id={\"title_\"+id} \n    type=\"text\" \n    rows=\"1\" \n    style={{resize: \"none\"}} \n    className=\"form-control\" \n    placeholder=\"The name of this resource...\" \n    onChange={handleChange_title}\n    ref={titleRef}\n    >\n    </textarea> \n    <label>Content</label>\n    <div id=\"textarea\">\n    <textarea \n    id={id} \n    className=\"form-control\" \n    placeholder=\"Enter your source text here...\" \n    rows=\"20\" \n    ref={contentRef}\n    onChange={handleChange_content} \n    /*onfocus=\"set_focus(this)\"*/ \n    style={{resize: \"vertical\", minHeight: \"35px\"}} \n    readOnly={this.state.readOnly}>\n    </textarea>\n    </div>  \n    </div> \n    </form>\n    </div>\n    );\n}\n\n\n}   \n\n\n\n\n\n\nexport default ResourcePane;\n"]},"metadata":{},"sourceType":"module"}