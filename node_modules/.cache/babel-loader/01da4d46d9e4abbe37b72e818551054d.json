{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\n\nclass CytoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const elements = [{\n      data: {\n        id: 'one',\n        label: 'Node 1'\n      },\n      position: {\n        x: 0,\n        y: 0\n      }\n    }, {\n      data: {\n        id: 'two',\n        label: 'Node 2'\n      },\n      position: {\n        x: 100,\n        y: 0\n      }\n    }, {\n      data: {\n        source: 'one',\n        target: 'two',\n        label: 'Edge from Node1 to Node2'\n      }\n    }];\n    return React.createElement(CytoscapeComponent, {\n      elements: CytoscapeComponent.normalizeElements({\n        nodes: [{\n          data: {\n            id: 'one',\n            label: 'Node 1'\n          },\n          position: {\n            x: 0,\n            y: 0\n          }\n        }, {\n          data: {\n            id: 'two',\n            label: 'Node 2'\n          },\n          position: {\n            x: 100,\n            y: 0\n          }\n        }],\n        edges: [{\n          data: {\n            source: 'one',\n            target: 'two',\n            label: 'Edge from Node1 to Node2'\n          }\n        }]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CytoContainer;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js"],"names":["React","ReactDOM","CytoscapeComponent","CytoContainer","Component","constructor","props","render","elements","data","id","label","position","x","y","source","target","normalizeElements","nodes","edges"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAG,CACd;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAR;AAAwCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX;AAAlD,KADc,EAEd;AAAEL,MAAAA,IAAI,EAAE;AAAEC,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAR;AAAwCC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE;AAAb;AAAlD,KAFc,EAGd;AAAEL,MAAAA,IAAI,EAAE;AAAEM,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,MAAM,EAAE,KAAzB;AAAgCL,QAAAA,KAAK,EAAE;AAAvC;AAAR,KAHc,CAAjB;AAMA,WACJ,oBAAC,kBAAD;AACE,MAAA,QAAQ,EAAET,kBAAkB,CAACe,iBAAnB,CAAqC;AAC7CC,QAAAA,KAAK,EAAE,CACL;AAAET,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE,KAAN;AAAaC,YAAAA,KAAK,EAAE;AAApB,WAAR;AAAwCC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX;AAAlD,SADK,EAEL;AAAEL,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE,KAAN;AAAaC,YAAAA,KAAK,EAAE;AAApB,WAAR;AAAwCC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE;AAAb;AAAlD,SAFK,CADsC;AAK7CK,QAAAA,KAAK,EAAE,CACL;AACEV,UAAAA,IAAI,EAAE;AAAEM,YAAAA,MAAM,EAAE,KAAV;AAAiBC,YAAAA,MAAM,EAAE,KAAzB;AAAgCL,YAAAA,KAAK,EAAE;AAAvC;AADR,SADK;AALsC,OAArC,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI;AAcC;;AA1BuC;;AA6B5C,eAAeR,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\n\nclass CytoContainer extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const elements = [\n       { data: { id: 'one', label: 'Node 1' }, position: { x: 0, y: 0 } },\n       { data: { id: 'two', label: 'Node 2' }, position: { x: 100, y: 0 } },\n       { data: { source: 'one', target: 'two', label: 'Edge from Node1 to Node2' } }\n    ];\n\n    return (\n<CytoscapeComponent\n  elements={CytoscapeComponent.normalizeElements({\n    nodes: [\n      { data: { id: 'one', label: 'Node 1' }, position: { x: 0, y: 0 } },\n      { data: { id: 'two', label: 'Node 2' }, position: { x: 100, y: 0 } }\n    ],\n    edges: [\n      {\n        data: { source: 'one', target: 'two', label: 'Edge from Node1 to Node2' }\n      }\n    ]\n  })}\n/>\n);  }\n}\n\nexport default CytoContainer;"]},"metadata":{},"sourceType":"module"}