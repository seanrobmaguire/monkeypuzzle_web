{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/Menu.js\";\nimport React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from './Modal';\nimport { resetConfirmModal } from './ModalData'; //import Button from './MyButton';\n//import TextArea from'./TextArea';\n\n/*const interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}*/\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileName: '',\n      analystName: '',\n      analystEmail: ''\n    };\n    this.mp_reset = this.mp_reset.bind(this);\n    this.handleFileName = this.handleFileName.bind(this);\n    this.handle_set_analyst_name = this.handle_set_analyst_name.bind(this);\n    this.handle_set_analyst_email = this.handle_set_analyst_email.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n  }\n\n  mp_reset() {\n    console.log(\"reset\");\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  handle_set_analyst_name(event) {\n    this.setState({\n      analystName: event.target.value\n    }, () => console.log(this.state.analystName, 'analystName'));\n  }\n\n  handle_set_analyst_email(event) {\n    this.setState({\n      analystEmail: event.target.value\n    }, () => console.log(this.state.analystEmail, 'analystEmail'));\n  }\n\n  handleFileName(event) {\n    this.setState({\n      fileName: event.target.value\n    }, () => console.log(this.state.fileName, 'filename'));\n  }\n\n  download_png() {\n    var fileName = this.state.fileName;\n\n    if (fileName.length == 0) {\n      fileName = \"default\";\n    }\n\n    fileName += \".png\";\n    var link = document.getElementById(\"download_png\");\n    link.download = fileName;\n  }\n\n  download_jpg() {\n    var fileName = this.state.fileName;\n\n    if (fileName.length == 0) {\n      fileName = \"default\";\n    }\n\n    fileName += \".jpg\";\n    var link = document.getElementById(\"download_jpg\");\n    link.download = fileName;\n  }\n\n  download_sadface() {\n    console.log(\"sadface\");\n    this.props.fileManager('save', 'josn', null);\n  }\n\n  render() {\n    return (\n      /*Slidein Panel: START*/\n      React.createElement(\"nav\", {\n        id: \"menu\",\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/monkeypuzzle/\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"menu-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"menu-header-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"MonkeyPuzzle\"))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Interface\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"toggle_resources\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Toggle the visibility of the resources pane\",\n        children: \"Toggle Resource Pane\",\n        onClick: this.props.toggleResourcePane,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        modalProps: resetConfirmModal,\n        onClick: this.mp_reset,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"load_demo_argument_button\",\n        className: \"btn btn-default\",\n        variant: \"light\",\n        title: \"Load a demonstration SADFace document into MonkeyPuzzle\",\n        children: \"Load Demo\",\n        onClick: this.props.load_demo_argument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"analyst_name_textarea\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"40\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Name\",\n        title: \"Type your name here...\",\n        onChange: this.handle_set_analyst_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"analyst_email_textarea\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"40\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Email\",\n        title: \"Type your email address here...\",\n        onChange: this.handle_set_analyst_email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Export\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        id: \"export_filename\",\n        type: \"text\",\n        rows: \"1\",\n        cols: \"20\",\n        maxLength: \"20\",\n        style: {\n          resize: \"none\"\n        },\n        className: \"form-control\",\n        placeholder: \"Filename\",\n        title: \"The name for the exported file\",\n        onChange: this.handleFileName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"export_button\",\n        className: \"btn btn-default\",\n        onClick: this.download_sadface,\n        title: \"Export the current analysis to a SADFace formatted JSON document\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"SADFace\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: this.props.png,\n        target: \"blank\",\n        id: \"download_png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button // id=\"download_png\"\n      , {\n        className: \"btn btn-default\",\n        title: \"Export the current analysis to a PNG image\",\n        onClick: this.download_png,\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"PNG\"))), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: this.props.jpg,\n        target: \"blank\",\n        id: \"download_jpg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"download_jpg\",\n        className: \"btn btn-default\",\n        title: \"Export the current analysis to a JPG image\",\n        onClick: this.download_jpg,\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"JPG\"))))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, \"Import\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"upload-span\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        rel: \"ignore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          display: \"inline-block\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"loadJSON\",\n        style: {\n          display: \"none\"\n        },\n        accept: \".json\",\n        role: \"button\",\n        tabIndex: \"-1000\",\n        type: \"file\",\n        className: \"upload-button\" //  onChange={this.props.fileManager('load','json',null,null,null)}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"btn btn-default\" // onClick={document.getElementById('loadJSON').Click()}\n        ,\n        title: \"Load a SADFace formatted JSON document into MonkeyPuzzle\",\n        variant: \"light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"SADFace\")))))), React.createElement(\"section\", {\n        className: \"menu-section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"menu-section-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Documentation\"), React.createElement(\"ul\", {\n        className: \"menu-section-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"About MonkeyPuzzle\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Quick-start\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Code Repository\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/issues\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, \"Issue Tracker\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\",\n        id: \"a\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, \"Licensing\")))))\n      /* Slidein Panel: END */\n\n      /*}\n                 <nav id=\"menu\" className=\"menu\">\n                \t<a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n                    <header className=\"menu-header\">\n                        <span className=\"menu-header-title\">MonkeyPuzzle</span>\n                    </header>\n                  </a>\n      \n                  <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Interface</h3>\n                      <ul className=\"menu-section-list\">            \n                         <li>\n                          <a href=\"#\" id=\"toggle_resource\">\n                            <MyButton \n                              className=\"btn btn-default\"\n                              onClick={() => this.toggleResourcePane()}\n                              title=\"Toggle the visibility of the resources pane\"\n                            >\n                              Toggle Resource Pane\n                            </MyButton>\n                            </a>\n                         </li>\n                         <li>\n                          <a href=\"#\" id=\"clear_storage_button\">\n                            <MyButton\n                              className=\"btn btn-danger\"\n                              onClick={() => this.confirmReset()}\n                              title=\"Reset MonkeyPuzzle to her initial state\"\n                            >\n                              Reset\n                            </MyButton>\n                          </a>\n                         </li>\n                         <li>\n                           <a href=\"#\" id=\"load_demo_argument_button\">\n                            <MyButton\n                              className=\"btn btn-default\"\n                              onClick={() => this.loadDemoArgument()}\n                              title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                            >\n                              Load Demo \n                            </MyButton>\n                           </a>\n                         </li>\n                         <li>\n                           <div style={interfaceDivStyle}>\n                              <TextArea \n                                className = \"form-control\"\n                                id= \"analyst_name_textarea\"\n                                rows=\"1\"\n                                cols=\"20\"\n                                maxLength=\"40\"\n                                placeholder=\"Name\"\n                                title=\"Type your name here...\"\n                                onChange={() => this.set_analyst_name()}\n                              />\n                           </div>\n                         </li>\n                          <li>\n                           <div style={interfaceDivStyle}>\n                              <TextArea \n                                className = \"form-control\"\n                                id= \"analyst_email_textarea\"\n                                rows=\"1\"\n                                cols=\"20\"\n                                maxLength=\"40\"\n                                placeholder=\"Email\"\n                                title=\"Type your email here...\"\n                                onChange={() => this.set_analyst_email()}\n                              />\n                           </div>\n                         </li>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Export</h3>\n                      <ul className=\"menu-section-list\">\n                        <li>\n                          <div style={interfaceDivStyle}>\n                            <TextArea\n                              className=\"form-control\"\n                              id=\"export_filename\"\n                              rows=\"1\"\n                              cols=\"20\"\n                              maxLength=\"40\"\n                              placeholder=\"Filename\"\n                              title=\"The name for the exported file\"\n                            />\n                          </div>\n                        </li>\n                        <li>\n                          <a href=\"#\" id=\"export_button\">\n                            <MyButton\n                              className=\"btn btn-default\"\n                              onClick={() => this.download_sadface()}\n                              title=\"Export the current analysis to a SADFace formatted JSON document\"\n                            >\n                              SADFace\n                            </MyButton>\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#\" /*target=\"_blank\" id=\"download_png\">\n                            <MyButton \n                              className=\"btn btn_default\"\n                              title=\"Export the current analysis to a PNG image\"\n                              onClick={() => this.download_png()}\n                            >\n                              PNG\n                            </MyButton>\n                          </a>\n                        </li>\n                        <li>\n                          <a href=\"#\" /*target=\"_blank\" id=\"download_jpg\">\n                            <MyButton\n                              className=\"btn btn_default\"\n                              title=\"Export the current analysis to a JPG image\"\n                              onClick={() => this.download_jpg()}\n                            >\n                              JPG\n                            </MyButton>\n                          </a>\n                        </li>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Import</h3>\n                      <ul className=\"menu-section-list\">\n                        <span className=\"upload-span\">\n                          <a rel=\"ignore\">\n                            <div display=\"inline-block\">\n                              <input id=\"loadJSON\" /*style=\"display:none;\" accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                              <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                            </div>\n                          </a>\n                        </span>\n                      </ul>\n                    </section>\n      \n                    <section className=\"menu-section\">\n                      <h3 className=\"menu-section-title\">Documentation</h3>\n                      <ul className=\"menu-section-list\">\n                        <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                        <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                        <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                      </ul>\n                    </section>\n      \n                    </nav>\n                  */\n\n    );\n  }\n\n} // Slidein Panel: END \n\n\nexport default Menu;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/Menu.js"],"names":["React","Component","Button","Modal","resetConfirmModal","Menu","constructor","props","state","fileName","analystName","analystEmail","mp_reset","bind","handleFileName","handle_set_analyst_name","handle_set_analyst_email","download_png","download_jpg","download_sadface","console","log","localStorage","clear","window","location","reload","event","setState","target","value","length","link","document","getElementById","download","fileManager","render","toggleResourcePane","load_demo_argument","resize","png","jpg","display"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from './Modal';\nimport {resetConfirmModal} from './ModalData';\n\n\n\n//import Button from './MyButton';\n//import TextArea from'./TextArea';\n\n/*const interfaceDivStyle = {\n  marginLeft:'20px',\n  marginRight:'60px'\n}*/\n\n\nclass Menu extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fileName: '',\n      analystName: '',\n      analystEmail: '',\n    };\n\n    this.mp_reset = this.mp_reset.bind(this);\n    this.handleFileName = this.handleFileName.bind(this);\n    this.handle_set_analyst_name = this.handle_set_analyst_name.bind(this);\n    this.handle_set_analyst_email = this.handle_set_analyst_email.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n  }\n\n   \n\n  mp_reset(){\n    console.log(\"reset\");\n    localStorage.clear();\n    window.location.reload(false);\n  }\n  \n\n\n  handle_set_analyst_name(event){\n    this.setState({analystName: event.target.value}, () => \n      console.log(this.state.analystName, 'analystName'));\n  }\n\n  handle_set_analyst_email(event){\n    this.setState({analystEmail: event.target.value}, () =>\n      console.log(this.state.analystEmail, 'analystEmail'));\n  }\n\n\n  handleFileName(event){\n    this.setState({fileName: event.target.value}, () => \n      console.log(this.state.fileName, 'filename'));\n  }\n\n  download_png(){\n    var fileName = this.state.fileName;\n    if(fileName.length == 0) {fileName = \"default\"}\n      fileName+=\".png\";\n\n      var link = document.getElementById(\"download_png\");\n      link.download = fileName;\n  }\n\n  download_jpg(){\n      var fileName = this.state.fileName;\n      if(fileName.length == 0) {fileName = \"default\"}\n        fileName+=\".jpg\"\n\n      var link = document.getElementById(\"download_jpg\");\n      link.download = fileName;\n\n  }\n\n \n\n  download_sadface(){\n    console.log(\"sadface\");\n    this.props.fileManager('save', 'josn', null)\n  }\n\n  render() {\n    return (\n            /*Slidein Panel: START*/\n\n      <nav id=\"menu\" className=\"menu\">\n    <a href=\"http://arg.napier.ac.uk/monkeypuzzle/\" target=\"_blank\">\n        <header className=\"menu-header\">\n          <span className=\"menu-header-title\">MonkeyPuzzle</span>\n        </header>\n    </a>\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Interface</h3>\n        <ul className=\"menu-section-list\">\n          <li>\n            <Button\n              id=\"toggle_resources\"\n              className=\"btn btn-default\" \n              variant=\"light\"\n              title=\"Toggle the visibility of the resources pane\"\n              children=\"Toggle Resource Pane\"\n              onClick={this.props.toggleResourcePane}\n\n            />\n          </li>\n          <li> \n            <Modal \n              modalProps = {resetConfirmModal}  \n              onClick = {this.mp_reset}\n\n            />\n          </li>\n          <li>\n           <Button\n            id=\"load_demo_argument_button\"\n            className=\"btn btn-default\" \n            variant=\"light\"\n            title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n            children=\"Load Demo\"\n            onClick={this.props.load_demo_argument}\n\n          />\n          </li>\n          <li>\n              <textarea \n                id=\"analyst_name_textarea\" \n                type=\"text\" rows=\"1\" \n                cols=\"20\" \n                maxLength=\"40\" style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Name\" \n                title=\"Type your name here...\" \n                onChange={this.handle_set_analyst_name}\n              >\n              </textarea>\n          </li>\n          <li>\n              <textarea \n                id=\"analyst_email_textarea\" \n                type=\"text\" \n                rows=\"1\" \n                cols=\"20\" \n                maxLength=\"40\" \n                style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Email\" \n                title=\"Type your email address here...\" \n                onChange={this.handle_set_analyst_email}\n              >\n              </textarea>\n          </li>\n      </ul>\n    </section>\n\n\n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Export</h3>\n        <ul className=\"menu-section-list\">\n           <li>\n              <textarea \n                id=\"export_filename\" \n                type=\"text\" \n                rows=\"1\" \n                cols=\"20\" \n                maxLength=\"20\" \n                style={{resize: \"none\"}} \n                className=\"form-control\"  \n                placeholder=\"Filename\" \n                title=\"The name for the exported file\"\n                onChange={this.handleFileName}\n              >\n              </textarea>\n          </li>\n\n          <li>\n            <Button \n              id=\"export_button\"\n              className=\"btn btn-default\" \n              onClick={this.download_sadface} \n              title=\"Export the current analysis to a SADFace formatted JSON document\"\n              variant=\"light\"\n            >\n              SADFace\n            </Button>\n          </li>\n          <li>\n          <a href={this.props.png} target=\"blank\" id=\"download_png\">\n            <Button \n             // id=\"download_png\"\n              className=\"btn btn-default\" \n              title=\"Export the current analysis to a PNG image\" \n              onClick={this.download_png}\n              variant=\"light\"\n            >\n              PNG\n            </Button>\n            </a>\n          </li>\n          <li>\n             <a href={this.props.jpg} target=\"blank\" id=\"download_jpg\">\n            <Button \n              id=\"download_jpg\"\n              className=\"btn btn-default\" \n              title=\"Export the current analysis to a JPG image\" \n              onClick={this.download_jpg}\n              variant=\"light\"\n            >\n              JPG\n            </Button>\n            </a>\n          </li>\n      </ul>\n      </section>\n      \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Import</h3>\n        <ul className=\"menu-section-list\">\n      <span className=\"upload-span\">\n        <a rel=\"ignore\">\n          <div style={{display: \"inline-block\"}}>\n           <input \n            id=\"loadJSON\" \n            style={{display: \"none\"}} \n            accept=\".json\" \n            role=\"button\" \n            tabIndex=\"-1000\" \n            type=\"file\" \n            className=\"upload-button\" \n          //  onChange={this.props.fileManager('load','json',null,null,null)}\n          />\n          \n          <Button\n            className=\"btn btn-default\"\n           // onClick={document.getElementById('loadJSON').Click()}\n            title=\"Load a SADFace formatted JSON document into MonkeyPuzzle\"\n            variant=\"light\"\n\n          >\n            SADFace\n          </Button>\n          </div>\n        </a>\n      </span>\n      \n        </ul>\n    </section>\n  \n    <section className=\"menu-section\">\n        <h3 className=\"menu-section-title\">Documentation</h3>\n        <ul className=\"menu-section-list\">  \n          <li>          \n            <a \n              href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" \n              id=\"a\"\n              >\n                About MonkeyPuzzle\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" \n              id=\"a\"\n              >\n                Quick-start\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" \n              id=\"a\"\n              >\n                Code Repository\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" \n              id=\"a\"\n            >\n              Issue Tracker\n            </a>\n          </li>\n          <li>\n            <a \n              href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" \n              id=\"a\"\n            >\n              Licensing\n            </a>\n          </li>\n      </ul>\n      </section>\n    </nav>\n\n\n   /* Slidein Panel: END */\n\n\n\n\n/*}\n           <nav id=\"menu\" className=\"menu\">\n          \t<a href=\"http://arg.napier.ac.uk/monkeypuzzle/\">\n              <header className=\"menu-header\">\n                  <span className=\"menu-header-title\">MonkeyPuzzle</span>\n              </header>\n            </a>\n\n            <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Interface</h3>\n                <ul className=\"menu-section-list\">            \n                   <li>\n                    <a href=\"#\" id=\"toggle_resource\">\n                      <MyButton \n                        className=\"btn btn-default\"\n                        onClick={() => this.toggleResourcePane()}\n                        title=\"Toggle the visibility of the resources pane\"\n                      >\n                        Toggle Resource Pane\n                      </MyButton>\n                      </a>\n                   </li>\n                   <li>\n                    <a href=\"#\" id=\"clear_storage_button\">\n                      <MyButton\n                        className=\"btn btn-danger\"\n                        onClick={() => this.confirmReset()}\n                        title=\"Reset MonkeyPuzzle to her initial state\"\n                      >\n                        Reset\n                      </MyButton>\n                    </a>\n                   </li>\n                   <li>\n                     <a href=\"#\" id=\"load_demo_argument_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.loadDemoArgument()}\n                        title=\"Load a demonstration SADFace document into MonkeyPuzzle\"\n                      >\n                        Load Demo \n                      </MyButton>\n                     </a>\n                   </li>\n                   <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_name_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Name\"\n                          title=\"Type your name here...\"\n                          onChange={() => this.set_analyst_name()}\n                        />\n                     </div>\n                   </li>\n                    <li>\n                     <div style={interfaceDivStyle}>\n                        <TextArea \n                          className = \"form-control\"\n                          id= \"analyst_email_textarea\"\n                          rows=\"1\"\n                          cols=\"20\"\n                          maxLength=\"40\"\n                          placeholder=\"Email\"\n                          title=\"Type your email here...\"\n                          onChange={() => this.set_analyst_email()}\n                        />\n                     </div>\n                   </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Export</h3>\n                <ul className=\"menu-section-list\">\n                  <li>\n                    <div style={interfaceDivStyle}>\n                      <TextArea\n                        className=\"form-control\"\n                        id=\"export_filename\"\n                        rows=\"1\"\n                        cols=\"20\"\n                        maxLength=\"40\"\n                        placeholder=\"Filename\"\n                        title=\"The name for the exported file\"\n                      />\n                    </div>\n                  </li>\n                  <li>\n                    <a href=\"#\" id=\"export_button\">\n                      <MyButton\n                        className=\"btn btn-default\"\n                        onClick={() => this.download_sadface()}\n                        title=\"Export the current analysis to a SADFace formatted JSON document\"\n                      >\n                        SADFace\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\" id=\"download_png\">\n                      <MyButton \n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a PNG image\"\n                        onClick={() => this.download_png()}\n                      >\n                        PNG\n                      </MyButton>\n                    </a>\n                  </li>\n                  <li>\n                    <a href=\"#\" /*target=\"_blank\" id=\"download_jpg\">\n                      <MyButton\n                        className=\"btn btn_default\"\n                        title=\"Export the current analysis to a JPG image\"\n                        onClick={() => this.download_jpg()}\n                      >\n                        JPG\n                      </MyButton>\n                    </a>\n                  </li>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Import</h3>\n                <ul className=\"menu-section-list\">\n                  <span className=\"upload-span\">\n                    <a rel=\"ignore\">\n                      <div display=\"inline-block\">\n                        <input id=\"loadJSON\" /*style=\"display:none;\" accept=\".json\" role=\"button\" tabIndex=\"-1000\" type=\"file\" className=\"uploadbutton\" onChange={() => this.filemanger('load', 'json', null, null, null)} />\n                        <input type=\"button\" className=\"btn btn-default\" value=\"SADFace\" onClick={() => this.loadSADFace()} title=\"Load a SADFace formated JSON document into MonkeyPuzzle\" />\n                      </div>\n                    </a>\n                  </span>\n                </ul>\n              </section>\n\n              <section className=\"menu-section\">\n                <h3 className=\"menu-section-title\">Documentation</h3>\n                <ul className=\"menu-section-list\">\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/\" id=\"a\">About MonkeyPuzzle</a>\n                  <a href=\"http://arg.napier.ac.uk/page/project/monkeypuzzle/quickstart/\" id=\"a\">Quick-start</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web\" id=\"a\">Code Repository</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/issues\" id=\"a\">Issue Tracker</a>\n                  <a href=\"https://github.com/ARG-ENU/monkeypuzzle_web/blob/master/LICENSE\" id=\"a\">Licensing</a>\n                </ul>\n              </section>\n\n              </nav>\n            */\n    );\n  }\n}  // Slidein Panel: END \n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}