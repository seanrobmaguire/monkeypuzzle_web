{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Immutable from 'immutable';\n\nclass CytoContainer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const elements = Immutable.List([Immutable.Map({\n      data: Immutable.Map({\n        id: 'foo',\n        label: 'bar'\n      })\n    })]);\n    return React.createElement(CytoscapeComponent, {\n      elements: elements,\n      style: {\n        width: '600px',\n        height: '600px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CytoContainer;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js"],"names":["React","ReactDOM","CytoscapeComponent","Immutable","CytoContainer","Component","constructor","props","render","elements","List","Map","data","id","label","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,WAAtB;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAGN,SAAS,CAACO,IAAV,CAAe,CAClCP,SAAS,CAACQ,GAAV,CAAc;AAAEC,MAAAA,IAAI,EAAET,SAAS,CAACQ,GAAV,CAAc;AAAEE,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE;AAApB,OAAd;AAAR,KAAd,CADkC,CAAf,CAAjB;AAIA,WACJ,oBAAC,kBAAD;AACE,MAAA,QAAQ,EAAEL,QADZ;AAEE,MAAA,KAAK,EAAG;AAAEM,QAAAA,KAAK,EAAE,OAAT;AAAkBC,QAAAA,MAAM,EAAE;AAA1B,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI;AAKC;;AAfuC;;AAkB5C,eAAeZ,aAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Immutable from 'immutable';\n\nclass CytoContainer extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    const elements = Immutable.List([\n  Immutable.Map({ data: Immutable.Map({ id: 'foo', label: 'bar' }) })\n]);\n\n    return (\n<CytoscapeComponent\n  elements={elements}\n  style={ { width: '600px', height: '600px' } }\n/>\n);  }\n}\n\nexport default CytoContainer;"]},"metadata":{},"sourceType":"module"}