{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/Cytoscape.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport cytoscape from 'cytoscape';\n\nclass Cytoscape extends Component {\n  constructor(props) {\n    super(props);\n    this.initCytoscape = this.initCytoscape.bind(this);\n    this.build_cola_layout = this.build_cola_layout.bind(this);\n  }\n\n  initCytoscape() {\n    console.log(\"test\");\n    this.cy = cytoscape({\n      container: document.getElementById('cy'),\n      elements: {\n        nodes: [{\n          data: {\n            id: 'cat'\n          }\n        }, {\n          data: {\n            id: 'bird'\n          }\n        }, {\n          data: {\n            id: 'ladybug'\n          }\n        }, {\n          data: {\n            id: 'aphid'\n          }\n        }, {\n          data: {\n            id: 'rose'\n          }\n        }, {\n          data: {\n            id: 'grasshopper'\n          }\n        }, {\n          data: {\n            id: 'plant'\n          }\n        }, {\n          data: {\n            id: 'wheat'\n          }\n        }],\n        edges: [{\n          data: {\n            source: 'cat',\n            target: 'bird'\n          }\n        }, {\n          data: {\n            source: 'bird',\n            target: 'ladybug'\n          }\n        }, {\n          data: {\n            source: 'bird',\n            target: 'grasshopper'\n          }\n        }, {\n          data: {\n            source: 'grasshopper',\n            target: 'plant'\n          }\n        }, {\n          data: {\n            source: 'grasshopper',\n            target: 'wheat'\n          }\n        }, {\n          data: {\n            source: 'ladybug',\n            target: 'aphid'\n          }\n        }, {\n          data: {\n            source: 'aphid',\n            target: 'rose'\n          }\n        }]\n      },\n      style: [{\n        selector: \"node\",\n        style: {\n          \"content\": \"data(content)\",\n          \"text-opacity\": 0.7,\n          \"width\": \"auto\",\n          \"height\": \"auto\",\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          \"text-outline-color\": \"#eee\",\n          \"text-outline-width\": 1\n        }\n      }, {\n        selector: \"[typeshape]\",\n        style: {\n          \"shape\": \"data(typeshape)\"\n        }\n      }, {\n        selector: \"node[typeshape='diamond']\",\n        style: {\n          'background-color': '#CC9900'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Conflict']\",\n        style: {\n          'background-color': 'red'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Support']\",\n        style: {\n          'background-color': 'green'\n        }\n      }, {\n        selector: \"edge\",\n        style: {\n          \"line-color\": \"#9dbaea\",\n          \"target-arrow-shape\": \"triangle\",\n          \"target-arrow-color\": \"#9dbaea\",\n          \"curve-style\": \"bezier\"\n        }\n      }, {\n        selector: \":selected\",\n        style: {\n          \"border-width\": \"1\",\n          \"border-color\": \"black\",\n          \"background-color\": \"#3399CC\"\n        }\n      }, {\n        selector: \".atom-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }, {\n        selector: \".scheme-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }],\n      boxSelectionEnabled: false,\n      autounselectify: false,\n      selectionType: \"single\",\n      minZoom: 0.1,\n      maxZoom: 1.5\n    });\n    this.layout = this.build_cola_layout();\n    layout.run();\n  }\n\n  build_cola_layout(opts) {\n    var cola_params = {\n      name: \"cola\",\n      animate: true,\n      randomize: true,\n      padding: 100,\n      fit: false,\n      maxSimulationTime: 1500\n    };\n    var i = 0;\n\n    if (opts !== undefined) {\n      opts.forEach(function (opt) {\n        cola_params[i] = opts[i];\n        ++i;\n      });\n    }\n\n    return cy.makeLayout(cola_params);\n  }\n\n  componentDidMount() {\n    this.initCytoscape();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"cy\",\n      style: {\n        height: '600px',\n        width: '600px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Cytoscape;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/Cytoscape.js"],"names":["React","Component","ReactDOM","cytoscape","Cytoscape","constructor","props","initCytoscape","bind","build_cola_layout","console","log","cy","container","document","getElementById","elements","nodes","data","id","edges","source","target","style","selector","boxSelectionEnabled","autounselectify","selectionType","minZoom","maxZoom","layout","run","opts","cola_params","name","animate","randomize","padding","fit","maxSimulationTime","i","undefined","forEach","opt","makeLayout","componentDidMount","render","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,SAAP,MAAsB,WAAtB;;AAKA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AAEDD,EAAAA,aAAa,GAAE;AACjBG,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACG,SAAKC,EAAL,GAAUT,SAAS,CAAC;AACnBU,MAAAA,SAAS,EAAEC,QAAQ,CAACC,cAAT,CAAwB,IAAxB,CADQ;AAElBC,MAAAA,QAAQ,EAAE;AACCC,QAAAA,KAAK,EAAE,CACH;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SADG,EAEH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SAFG,EAGH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SAHG,EAIH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SAJG,EAKH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SALG,EAMH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SANG,EAOH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SAPG,EAQH;AAAED,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE;AAAN;AAAR,SARG,CADR;AAWCC,QAAAA,KAAK,EAAE,CACH;AAAEF,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,KAAV;AAAiBC,YAAAA,MAAM,EAAE;AAAzB;AAAR,SADG,EAEH;AAAEJ,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,MAAV;AAAkBC,YAAAA,MAAM,EAAE;AAA1B;AAAR,SAFG,EAGH;AAAEJ,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,MAAV;AAAkBC,YAAAA,MAAM,EAAE;AAA1B;AAAR,SAHG,EAIH;AAAEJ,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,aAAV;AAAyBC,YAAAA,MAAM,EAAE;AAAjC;AAAR,SAJG,EAKH;AAAEJ,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,aAAV;AAAyBC,YAAAA,MAAM,EAAE;AAAjC;AAAR,SALG,EAMH;AAAEJ,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,SAAV;AAAqBC,YAAAA,MAAM,EAAE;AAA7B;AAAR,SANG,EAOH;AAAEJ,UAAAA,IAAI,EAAE;AAAEG,YAAAA,MAAM,EAAE,OAAV;AAAmBC,YAAAA,MAAM,EAAE;AAA3B;AAAR,SAPG;AAXR,OAFQ;AAwBfC,MAAAA,KAAK,EAAC,CACF;AAAIC,QAAAA,QAAQ,EAAE,MAAd;AACID,QAAAA,KAAK,EAAE;AACH,qBAAW,eADR;AAEH,0BAAgB,GAFb;AAGH,mBAAU,MAHP;AAIH,oBAAW,MAJR;AAKH,yBAAe,QALZ;AAMH,yBAAe,OANZ;AAOH,gCAAsB,MAPnB;AAQH,gCAAsB;AARnB;AADX,OADE,EAaF;AAAIC,QAAAA,QAAQ,EAAE,aAAd;AACID,QAAAA,KAAK,EAAE;AACH,mBAAQ;AADL;AADX,OAbE,EAkBF;AAAIC,QAAAA,QAAQ,EAAE,2BAAd;AACID,QAAAA,KAAK,EAAE;AACH,8BAAoB;AADjB;AADX,OAlBE,EAuBF;AACIC,QAAAA,QAAQ,EAAE,+CADd;AAEID,QAAAA,KAAK,EAAE;AACH,8BAAoB;AADjB;AAFX,OAvBE,EA6BF;AACIC,QAAAA,QAAQ,EAAE,8CADd;AAEID,QAAAA,KAAK,EAAE;AACH,8BAAoB;AADjB;AAFX,OA7BE,EAmCF;AAAIC,QAAAA,QAAQ,EAAE,MAAd;AACID,QAAAA,KAAK,EAAE;AACH,wBAAc,SADX;AAEH,gCAAsB,UAFnB;AAGH,gCAAsB,SAHnB;AAIH,yBAAe;AAJZ;AADX,OAnCE,EA2CF;AAAIC,QAAAA,QAAQ,EAAE,WAAd;AACID,QAAAA,KAAK,EAAE;AACH,0BAAe,GADZ;AAEH,0BAAe,OAFZ;AAGH,8BAAoB;AAHjB;AADX,OA3CE,EAkDF;AAAIC,QAAAA,QAAQ,EAAE,aAAd;AACID,QAAAA,KAAK,EAAC;AACF,uBAAa,MADX;AAEF,4BAAkB;AAFhB;AADV,OAlDE,EAwDF;AAAIC,QAAAA,QAAQ,EAAE,eAAd;AACID,QAAAA,KAAK,EAAC;AACF,uBAAa,MADX;AAEF,4BAAkB;AAFhB;AADV,OAxDE,CAxBS;AAuFXE,MAAAA,mBAAmB,EAAE,KAvFV;AAwFXC,MAAAA,eAAe,EAAE,KAxFN;AAyFXC,MAAAA,aAAa,EAAE,QAzFJ;AA0FXC,MAAAA,OAAO,EAAE,GA1FE;AA2FXC,MAAAA,OAAO,EAAE;AA3FE,KAAD,CAAnB;AA+FA,SAAKC,MAAL,GAAc,KAAKrB,iBAAL,EAAd;AACCqB,IAAAA,MAAM,CAACC,GAAP;AAED;;AAEDtB,EAAAA,iBAAiB,CAAEuB,IAAF,EAAS;AACxB,QAAIC,WAAW,GAAG;AACdC,MAAAA,IAAI,EAAE,MADQ;AAEdC,MAAAA,OAAO,EAAE,IAFK;AAGdC,MAAAA,SAAS,EAAE,IAHG;AAIdC,MAAAA,OAAO,EAAE,GAJK;AAKdC,MAAAA,GAAG,EAAE,KALS;AAMdC,MAAAA,iBAAiB,EAAE;AANL,KAAlB;AAQA,QAAIC,CAAC,GAAG,CAAR;;AACA,QAAIR,IAAI,KAAKS,SAAb,EAAwB;AACpBT,MAAAA,IAAI,CAACU,OAAL,CAAa,UAASC,GAAT,EAAc;AACxBV,QAAAA,WAAW,CAACO,CAAD,CAAX,GAAiBR,IAAI,CAACQ,CAAD,CAArB;AACA,UAAEA,CAAF;AACF,OAHD;AAIH;;AACD,WAAO5B,EAAE,CAACgC,UAAH,CAAeX,WAAf,CAAP;AACH;;AACCY,EAAAA,iBAAiB,GAAE;AAClB,SAAKtC,aAAL;AACA;;AAEAuC,EAAAA,MAAM,GAAE;AAIP,WACC;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,OAAR;AAAiBC,QAAAA,KAAK,EAAC;AAAvB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGC;;AA1I6B;;AA6I9B,eAAe5C,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport cytoscape from 'cytoscape';\n\n\n\n\nclass Cytoscape extends Component {\n  constructor(props){\n    super(props);\n    this.initCytoscape = this.initCytoscape.bind(this);\n    this.build_cola_layout = this.build_cola_layout.bind(this);\n  }\n\n  initCytoscape(){\nconsole.log(\"test\");\n  \tthis.cy = cytoscape({\n  \t\tcontainer: document.getElementById('cy'),\n  \t\t elements: {\n                nodes: [\n                    { data: { id: 'cat' } },\n                    { data: { id: 'bird' } },\n                    { data: { id: 'ladybug' } },\n                    { data: { id: 'aphid' } },\n                    { data: { id: 'rose' } },\n                    { data: { id: 'grasshopper' } },\n                    { data: { id: 'plant' } },\n                    { data: { id: 'wheat' } }\n                ],\n                edges: [\n                    { data: { source: 'cat', target: 'bird' } },\n                    { data: { source: 'bird', target: 'ladybug' } },\n                    { data: { source: 'bird', target: 'grasshopper' } },\n                    { data: { source: 'grasshopper', target: 'plant' } },\n                    { data: { source: 'grasshopper', target: 'wheat' } },\n                    { data: { source: 'ladybug', target: 'aphid' } },\n                    { data: { source: 'aphid', target: 'rose' } }\n                ]\n            },\n\n        style:[\n            {   selector: \"node\", \n                style: {\n                    \"content\": \"data(content)\",\n                    \"text-opacity\": 0.7,\n                    \"width\" : \"auto\",\n                    \"height\" : \"auto\",\n                    \"text-valign\": \"bottom\",\n                    \"text-halign\": \"right\",\n                    \"text-outline-color\": \"#eee\",\n                    \"text-outline-width\": 1\n              }\n            },\n            {   selector: \"[typeshape]\", \n                style: {\n                    \"shape\":\"data(typeshape)\"\n                }\n            },\n            {   selector: \"node[typeshape='diamond']\", \n                style: {\n                    'background-color': '#CC9900'\n                }\n            },\n            {\n                selector: \"node[typeshape='diamond'][content='Conflict']\",\n                style: {\n                    'background-color': 'red'\n                }\n            },\n            {\n                selector: \"node[typeshape='diamond'][content='Support']\",\n                style: {\n                    'background-color': 'green'\n                }\n            },\n            {   selector: \"edge\", \n                style: {\n                    \"line-color\": \"#9dbaea\",\n                    \"target-arrow-shape\": \"triangle\",\n                    \"target-arrow-color\": \"#9dbaea\",\n                    \"curve-style\": \"bezier\"\n                }\n            },\n            {   selector: \":selected\", \n                style: {\n                    \"border-width\":\"1\",\n                    \"border-color\":\"black\",\n                    \"background-color\": \"#3399CC\"\n                }\n            },\n            {   selector: \".atom-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            },\n            {   selector: \".scheme-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            }\n            ],\n            boxSelectionEnabled: false,\n            autounselectify: false,\n            selectionType: \"single\",\n            minZoom: 0.1,\n            maxZoom: 1.5\n                \n    });\n\n  \tthis.layout = this.build_cola_layout();\n    layout.run();\n\n  }\n\n  build_cola_layout( opts ) {\n    var cola_params = {\n        name: \"cola\",\n        animate: true,\n        randomize: true,\n        padding: 100,\n        fit: false,\n        maxSimulationTime: 1500\n    };\n    var i = 0;\n    if (opts !== undefined) {\n        opts.forEach(function(opt) {\n           cola_params[i] = opts[i];\n           ++i;\n        });\n    }\n    return cy.makeLayout( cola_params );\n}\n  componentDidMount(){\n  \tthis.initCytoscape();\n  }\n\n   render(){\n\n  \n\n    return (\n    \t<div id=\"cy\" style={{height:'600px', width:'600px'}}></div>\n    );\n    }\n    }\n\n    export default Cytoscape;"]},"metadata":{},"sourceType":"module"}