{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/MainUI.js\";\nimport React, { Component } from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport SlideInTrigger from './SlideInTrigger';\nimport ResourcePane from './ResourcePane';\nimport CytoContainer from './CytoContainer';\n\nclass MainUI extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      current_tab: '0'\n    };\n  }\n\n  set_active_tab(tab_id) {\n    if (this.props.tabs.length > 0) {\n      console.log(\"set active tabs \" + tab_id);\n      this.setState({\n        current_tab: tab_id.substring(0, tab_id.indexOf(\"_body\"))\n      });\n      var i, tabcontent, tablinks;\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          toggleSlideIn = _this$props.toggleSlideIn,\n          addTab = _this$props.addTab,\n          remove_tab = _this$props.remove_tab,\n          fileManager = _this$props.fileManager,\n          showResourcePane = _this$props.showResourcePane;\n    return (\n      /* Main UI: START */\n      React.createElement(\"main\", {\n        id: \"panel\",\n        className: \"panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(ResourcePane, {\n        addTab: addTab,\n        tabs: this.props.tabs,\n        remove_tab: this.props.remove_tab,\n        fileManager: this.props.fileManager,\n        showResourcePane: this.props.showResourcePane,\n        activeTab: this.props.activeTab,\n        setActiveTab: this.props.setActiveTab,\n        fileManager: this.props.fileManager,\n        change_title: this.props.change_title,\n        change_content: this.props.change_content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"splitter\",\n        id: \"splitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"visualisation-pane\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"navbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(SlideInTrigger, {\n        className: \"btn-hamburger toggle-button\",\n        onClick: toggleSlideIn,\n        showResourcePane: showResourcePane,\n        loadDemoArgument: this.loadDemoArgument,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })))))\n      /* Main UI: END */\n\n    );\n  }\n\n}\n\nexport default MainUI;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/MainUI.js"],"names":["React","Component","Modal","FontAwesomeIcon","faPlusSquare","SlideInTrigger","ResourcePane","CytoContainer","MainUI","constructor","props","newResourceModal","trigger","triggerText","className","triggerId","id","title","content","footer","value","state","current_tab","set_active_tab","tab_id","tabs","length","console","log","setState","substring","indexOf","i","tabcontent","tablinks","render","toggleSlideIn","addTab","remove_tab","fileManager","showResourcePane","activeTab","setActiveTab","change_title","change_content","loadDemoArgument"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\nimport SlideInTrigger from './SlideInTrigger';\nimport ResourcePane from './ResourcePane';\nimport CytoContainer from './CytoContainer';\n\n\n\n\n\n\n\nclass MainUI extends Component {\n  constructor(props){\n    super(props);\n    this.state ={\n      current_tab:'0',\n    }\n\n\n  };\n\n\n  newResourceModal = {\n    trigger: {\n      triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n      className: 'add_tab_button',\n      triggerId: \"add_tab_button\",\n    },\n    id:\"resource_pane_selection_modal\",\n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n     // action: this.add_tab() \n    }\n\n  };\n\n  set_active_tab(tab_id){\n  if(this.props.tabs.length > 0){\n    console.log(\"set active tabs \"+tab_id);\n     this.setState({current_tab:  tab_id.substring(0, tab_id.indexOf(\"_body\")) });\n     var i, tabcontent, tablinks;\n  }\n}\n\n\n\n  render() {\n    const {\n      toggleSlideIn,\n      addTab,\n      \n      remove_tab,\n      fileManager,\n      showResourcePane\n\n    } = this.props;\n\n\n    return (\n            /* Main UI: START */\n\n    <main id=\"panel\" className=\"panel\">\n      <div className=\"ui-container\">\n          <ResourcePane \n              addTab = {addTab}\n              tabs={this.props.tabs}\n              remove_tab={this.props.remove_tab}\n              fileManager={this.props.fileManager}\n              showResourcePane={this.props.showResourcePane}\n              activeTab={this.props.activeTab}\n              setActiveTab={this.props.setActiveTab}\n              fileManager={this.props.fileManager}\n              change_title={this.props.change_title}\n              change_content={this.props.change_content}\n\n         />\n          <div className=\"splitter\" id=\"splitter\">\n          </div>\n\n          <div className=\"visualisation-pane\">\n              <div id=\"navbar\">\n                 \n                  <SlideInTrigger\n                    className=\"btn-hamburger toggle-button\"\n                    onClick={toggleSlideIn}\n                    showResourcePane={showResourcePane}\n                    loadDemoArgument={this.loadDemoArgument}\n                  />\n              </div>\n\n          </div>\n      </div>\n    </main>\n\n   /* Main UI: END */\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\nexport default MainUI;"]},"metadata":{},"sourceType":"module"}