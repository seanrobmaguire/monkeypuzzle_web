{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/VisualisationPane/VisualisationPane.js\";\nimport React, { Component } from 'react';\n\nclass Cytoscape extends Component {\n  constructor(props) {\n    super(props); //create Refs\n\n    this.newAtomRef = React.createRef();\n    this.newSchemeRef = React.createRef();\n    this.editContentRef = React.createRef();\n    this.state = {\n      modalValue: ' ',\n      dropDownValue: ' ',\n      cy: null\n    };\n    this.initialise_monkeypuzzle = this.initialise_monkeypuzzle.bind(this);\n    this.initCytoscape = this.initCytoscape.bind(this);\n  }\n\n  initialise_monkeypuzzle() {\n    //load diagram if there is one in localStorage\n    if (localStorage.getItem(\"state\")) {\n      this.props.loadJSON(localStorage.getItem(\"state\"));\n      this.initCytoscape(); //else use default\n    } else {\n      this.props.setCurrentSadFaceDoc(default_sadface_doc);\n      localStorage.setItem(\"state\", this.props.current_sadface_doc);\n      this.props.setCyData(export_cytoscape(import_json(this.props.current_sadface_doc)));\n      this.initCytoscape();\n    }\n  }\n\n  initCytoscape() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"cy\",\n      onDrop: this.dropHandler,\n      onDragOver: this.dragoverHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Cytoscape;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/VisualisationPane/VisualisationPane.js"],"names":["React","Component","Cytoscape","constructor","props","newAtomRef","createRef","newSchemeRef","editContentRef","state","modalValue","dropDownValue","cy","initialise_monkeypuzzle","bind","initCytoscape","localStorage","getItem","loadJSON","setCurrentSadFaceDoc","default_sadface_doc","setItem","current_sadface_doc","setCyData","export_cytoscape","import_json","render","dropHandler","dragoverHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAChCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACZ,UAAMA,KAAN,EADY,CAEZ;;AACA,SAAKC,UAAL,GAAkBL,KAAK,CAACM,SAAN,EAAlB;AACA,SAAKC,YAAL,GAAoBP,KAAK,CAACM,SAAN,EAApB;AACA,SAAKE,cAAL,GAAsBR,KAAK,CAACM,SAAN,EAAtB;AAEA,SAAKG,KAAL,GAAW;AACVC,MAAAA,UAAU,EAAE,GADF;AAEVC,MAAAA,aAAa,EAAE,GAFL;AAGVC,MAAAA,EAAE,EAAE;AAHM,KAAX;AAMA,SAAKC,uBAAL,GAA+B,KAAKA,uBAAL,CAA6BC,IAA7B,CAAkC,IAAlC,CAA/B;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AAIH;;AAEDD,EAAAA,uBAAuB,GAAE;AACvB;AACE,QAAIG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EACA;AACI,WAAKb,KAAL,CAAWc,QAAX,CAAoBF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB;AACA,WAAKF,aAAL,GAFJ,CAGA;AACC,KALD,MAMA;AACI,WAAKX,KAAL,CAAWe,oBAAX,CAAgCC,mBAAhC;AACAJ,MAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8B,KAAKjB,KAAL,CAAWkB,mBAAzC;AACA,WAAKlB,KAAL,CAAWmB,SAAX,CAAqBC,gBAAgB,CAACC,WAAW,CAAC,KAAKrB,KAAL,CAAWkB,mBAAZ,CAAZ,CAArC;AACA,WAAKP,aAAL;AACH;AAEJ;;AAEDA,EAAAA,aAAa,GAAE,CAEd;;AACDW,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,MAAM,EAAE,KAAKC,WAA1B;AAAuC,MAAA,UAAU,EAAE,KAAKC,eAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADF;AAOH;;AAjD+B;;AAoDlC,eAAe1B,SAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Cytoscape extends Component {\n  constructor(props){\n        super(props);\n        //create Refs\n        this.newAtomRef = React.createRef()\n        this.newSchemeRef = React.createRef();\n        this.editContentRef = React.createRef();\n\n        this.state={\n         modalValue: ' ',\n         dropDownValue: ' ',\n         cy: null,\n        };\n\n        this.initialise_monkeypuzzle = this.initialise_monkeypuzzle.bind(this);\n        this.initCytoscape = this.initCytoscape.bind(this);\n\n\n\n    }\n\n    initialise_monkeypuzzle(){\n      //load diagram if there is one in localStorage\n        if (localStorage.getItem(\"state\"))\n        {\n            this.props.loadJSON(localStorage.getItem(\"state\"));\n            this.initCytoscape();\n        //else use default\n        } else\n        {\n            this.props.setCurrentSadFaceDoc(default_sadface_doc);\n            localStorage.setItem(\"state\", this.props.current_sadface_doc);\n            this.props.setCyData(export_cytoscape(import_json(this.props.current_sadface_doc)));\n            this.initCytoscape();\n        }\n\n    }\n\n    initCytoscape(){\n\n    }\n    render(){\n      return(\n        <div>\n         <div id=\"cy\" onDrop={this.dropHandler} onDragOver={this.dragoverHandler}>\n\n      </div>\n        </div>);\n\n  }\n}\n\nexport default Cytoscape;"]},"metadata":{},"sourceType":"module"}