{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js\";\nimport React, { Component } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport cola from 'cytoscape-cola';\nimport Tooltip from 'react-qtip';\n\nclass CytoContainer extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const elements = this.props.cy_data;\n    return React.createElement(CytoscapeComponent, {\n      elements: CytoscapeComponent.normalizeElements({\n        nodes: [{\n          data: {\n            id: 'one',\n            label: 'Node 1'\n          },\n          position: {\n            x: 0,\n            y: 0\n          }\n        }, {\n          data: {\n            id: 'two',\n            label: 'Node 2'\n          },\n          position: {\n            x: 100,\n            y: 0\n          }\n        }],\n        edges: [{\n          data: {\n            source: 'one',\n            target: 'two',\n            label: 'Edge from Node1 to Node2'\n          }\n        }]\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default CytoContainer;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/CytoContainer.js"],"names":["React","Component","CytoscapeComponent","cola","Tooltip","CytoContainer","constructor","props","render","elements","cy_data","normalizeElements","nodes","data","id","label","position","x","y","edges","source","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAMA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAqC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEC;;AAKPC,EAAAA,MAAM,GAAE;AACN,UAAMC,QAAQ,GAAG,KAAKF,KAAL,CAAWG,OAA5B;AAEA,WACI,oBAAC,kBAAD;AACN,MAAA,QAAQ,EAAER,kBAAkB,CAACS,iBAAnB,CAAqC;AAC7CC,QAAAA,KAAK,EAAE,CACL;AAAEC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE,KAAN;AAAaC,YAAAA,KAAK,EAAE;AAApB,WAAR;AAAwCC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,CAAC,EAAE,CAAL;AAAQC,YAAAA,CAAC,EAAE;AAAX;AAAlD,SADK,EAEL;AAAEL,UAAAA,IAAI,EAAE;AAAEC,YAAAA,EAAE,EAAE,KAAN;AAAaC,YAAAA,KAAK,EAAE;AAApB,WAAR;AAAwCC,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,CAAC,EAAE,GAAL;AAAUC,YAAAA,CAAC,EAAE;AAAb;AAAlD,SAFK,CADsC;AAK7CC,QAAAA,KAAK,EAAE,CACL;AACEN,UAAAA,IAAI,EAAE;AAAEO,YAAAA,MAAM,EAAE,KAAV;AAAiBC,YAAAA,MAAM,EAAE,KAAzB;AAAgCN,YAAAA,KAAK,EAAE;AAAvC;AADR,SADK;AALsC,OAArC,CADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAgBH;;AA5BoC;;AAgCrC,eAAeV,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport cola from 'cytoscape-cola';\nimport Tooltip from 'react-qtip';\n\n\n\n\n\nclass CytoContainer extends Component{\n    constructor(props){\n        super(props);\n        \n        }\n        \n\n  \n\n  render(){\n    const elements = this.props.cy_data\n\n    return (\n        <CytoscapeComponent\n  elements={CytoscapeComponent.normalizeElements({\n    nodes: [\n      { data: { id: 'one', label: 'Node 1' }, position: { x: 0, y: 0 } },\n      { data: { id: 'two', label: 'Node 2' }, position: { x: 100, y: 0 } }\n    ],\n    edges: [\n      {\n        data: { source: 'one', target: 'two', label: 'Edge from Node1 to Node2' }\n      }\n    ]\n  })}\n/>\n  \n  );\n}\n}\n\n\nexport default CytoContainer;"]},"metadata":{},"sourceType":"module"}