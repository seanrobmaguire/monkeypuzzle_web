{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Modal from './Modal';\nimport Button from './MyButton';\nimport ResourcePaneTabContent from './resourcePaneTabContent';\nconst tabs = [{\n  tab_id: 1\n}, {\n  tab_id: 2\n}, {\n  tab_id: 3\n}, {\n  tab_id: 4\n}];\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }),\n        className: 'add_tab_button'\n      },\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add',\n        action: this.add_tab()\n      }\n    };\n    this.state = {\n      current_tab: 0,\n      last_number: 1,\n      // tabs: [],\n      tab_id: ''\n    };\n    this.add_tab = this.add_tab.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_resource_header = this.add_resource_header.bind(this);\n    this.next_number = this.next_number.bind(this);\n    this.onClickMe = this.onClickMe.bind(this);\n  }\n\n  onClickMe() {\n    console.log('<div>hello</div>');\n    document.getElementById(\"resource_pane_tab_head\").append('<button id=\"`+ tab_id + `_btn\" className=\"tablinks\"</button>');\n  }\n\n  next_number() {\n    var last_number = this.last_number;\n    return last_number++;\n  }\n\n  add_tab(load_id = null) {\n    var tab_id = ''; //is this right? where does tab_id come from?\n\n    if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      tab_id = new_resource.id; //  add_resource_metadata(tab_id, 'title', '');\n      //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    } else {\n      tab_id = load_id;\n    }\n\n    this.add_resource_header();\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n\n    if (resource_type_txt.toLowerCase() === \"text\") {\n      this.add_text_resource_body(tab_id);\n    }\n\n    this.set_active_tab(tab_id + \"_body\"); // return tab_id\n\n    this.state.tab_id = tab_id;\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = ''; //this.new_resource(content);\n      //sd.resources.push(res); where does sd come from?\n\n      return res;\n    }\n  }\n\n  add_resource_header() {\n    var tab_number = this.next_number(); // this.tabs.push(this.tab_id);\n\n    var resource_pane_tab_head = \"\\n        <button id=\\\"\" + this.state.tab_id + \"_btn\\\" class=\\\"tablinks\\\" \\n            onclick=\\\"set_active_tab('\" + this.state.tab_id + \"_body')\\\">\" + tab_number + \"</button>\\n    \";\n    document.getElementByClass('resource_pane_tab_head').append(resource_pane_tab_head); //$(\".resource_pane_tab_head\").append(resource_pane_tab_head);\n  }\n  /* New Resource Pane Type Selection Modal */\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, tabs.map(function (item) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, item.tab_id);\n    }), React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.onClickMe,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Click me\"), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/ResourcePane.js"],"names":["React","Component","FontAwesomeIcon","faPlusSquare","Modal","Button","ResourcePaneTabContent","tabs","tab_id","ResourcePane","constructor","props","newResourceModal","trigger","triggerText","className","title","content","footer","value","action","add_tab","state","current_tab","last_number","bind","add_resource","add_resource_header","next_number","onClickMe","console","log","document","getElementById","append","load_id","new_resource","id","resource_type_idx","options","selectedIndex","resource_type_txt","text","toLowerCase","add_text_resource_body","set_active_tab","res","tab_number","resource_pane_tab_head","getElementByClass","render","map","item"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\nimport Modal from './Modal';\nimport Button from './MyButton';\nimport ResourcePaneTabContent from './resourcePaneTabContent'\n const tabs = [{tab_id:1},\n                {tab_id:2},\n                {tab_id:3},\n                {tab_id:4}\n                ];\n\n\nclass ResourcePane extends Component {\n  constructor(props){\n    super(props);\n\n    this.state ={\n      current_tab: 0,\n      last_number: 1,\n     // tabs: [],\n      tab_id:''\n    };\n    this.add_tab = this.add_tab.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_resource_header = this.add_resource_header.bind(this);\n    this.next_number = this.next_number.bind(this);\n\n\n    this.onClickMe = this.onClickMe.bind(this);\n \n\n  }\n  \n\n\n  onClickMe() {\n    console.log('<div>hello</div>');\n    document.getElementById(\"resource_pane_tab_head\").append('<button id=\"`+ tab_id + `_btn\" className=\"tablinks\"</button>')\n  }\n\n   next_number(){ \n    var last_number = this.last_number;\n    return last_number++; \n  }\n  \n\n   add_tab(load_id=null) {\n    var tab_id = ''; //is this right? where does tab_id come from?\n  if (load_id == null) {\n        var new_resource = this.add_resource(' ');\n        tab_id = new_resource.id; \n    //  add_resource_metadata(tab_id, 'title', '');\n      //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n  } \n    else { tab_id = load_id; }\n\n    this.add_resource_header();\n\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    if (resource_type_txt.toLowerCase() === \"text\") { this.add_text_resource_body(tab_id); }\n\n    this.set_active_tab(tab_id+\"_body\");\n   // return tab_id\n   this.state.tab_id = tab_id;\n}\n\nadd_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = ''\n        //this.new_resource(content);\n        //sd.resources.push(res); where does sd come from?\n        return res;\n    }\n}\n\n add_resource_header() {\n    var tab_number = this.next_number();\n   // this.tabs.push(this.tab_id);\n    var resource_pane_tab_head = `\n        <button id=\"`+ this.state.tab_id + `_btn\" class=\"tablinks\" \n            onclick=\"set_active_tab('` + this.state.tab_id + `_body')\">` + \n            tab_number + `</button>\n    `;\n    document.getElementByClass('resource_pane_tab_head').append(resource_pane_tab_head);\n    //$(\".resource_pane_tab_head\").append(resource_pane_tab_head);\n}\n\n\n      /* New Resource Pane Type Selection Modal */\n\n  newResourceModal = {\n    trigger: {\n      triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n      className: 'add_tab_button',\n    },\n    \n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n      action: this.add_tab() \n    }\n\n  };\n\n  \n\n  render(){\n    \n\n    return (\n      <div className=\"resource-pane\" id=\"resource-pane\">\n                <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                 {tabs.map(function(item) {\n                  return <div>{item.tab_id}</div>\n                 })}\n                  <Modal\n                    modalProps={this.newResourceModal}\n                 /> \n                </div>\n                <button\n          onClick={this.onClickMe}\n          type = \"button\"\n        >\n        Click me \n        </button>\n                <div className=\"tab_body\" id=\"tab_body\"></div>   \n                  \n\n     \n            </div>\n      \n      );\n  }\n}\n\nexport default ResourcePane;"]},"metadata":{},"sourceType":"module"}