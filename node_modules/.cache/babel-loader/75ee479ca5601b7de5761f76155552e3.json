{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape'; //import Components\n\nimport ResourcePane from './Components/ResourcePane';\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\nimport Modal from './Components/Modal'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { loadJSON, loadSADFace, saveSADFace, delete_source, delete_resource, get_sd, import_json, add_resource, export_cytoscape, new_uuid, add_resource_metadata } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: [],\n      last_number: 0,\n      tab_id: \"\",\n      sd: get_sd(),\n      showResourcePane: true,\n      test: {},\n      current_tab: 0,\n      cy_data: null,\n      selected: '',\n      jpg: '',\n      png: '',\n      fileName: '',\n      json: '',\n      current_sadface_doc: '',\n      cy: null,\n      remove_all_tabs: false\n    };\n    this.test = this.test.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.download = this.download.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.download = this.download.bind(this);\n    this.fileManager = this.fileManager.bind(this);\n    this.loadJSON = this.loadJSON.bind(this); //ResourcePane Functions\n\n    this.add_tab = this.add_tab.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.change_title = this.change_title.bind(this);\n    this.set_text_resource_content = this.set_text_resource_content.bind(this);\n    this.add_resource_header = this.add_resource_header.bind(this); //Menu\n\n    this.handleSetPng = this.handleSetPng.bind(this);\n    this.handleSetJpg = this.handleSetJpg.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.setFileName = this.setFileName.bind(this);\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  openAddBoardModal() {\n    this.setState({\n      boardAddModalShow: true\n    }, function () {\n      console.log(this.state.boardAddModalShow);\n    });\n  }\n\n  createNewTab() {}\n\n  add_tab(load_id = null) {\n    let newTab = {};\n\n    if (load_id == null) {\n      var new_resource = add_resource(' ');\n      newTab.tab_id = new_resource.id;\n      add_resource_metadata(newTab.tab_id, 'title', '');\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    } else {\n      newTab.tab_id = load_id;\n    }\n\n    this.add_resource_header(newTab);\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    newTab.media = resource_type_txt;\n  }\n\n  add_resource_header(newTab) {\n    let tab_number = 33333;\n    this.setState({\n      last_number: this.state.last_number + 1\n    }, function () {\n      console.log(this.state.last_number, 'try');\n      tab_number = this.state.last_number;\n      console.log(tab_number, 'tab head');\n      newTab.tab_number = tab_number;\n      this.setState(state => {\n        const tabs = this.state.tabs.concat(newTab);\n        return {\n          tabs\n        };\n      }, function () {\n        console.log(this.state.tabs, 'header');\n        this.setActiveTab(tab_number);\n      });\n    });\n  }\n\n  test(index) {\n    this.setState({\n      current_tab: index\n    });\n    console.log(this.current_tab);\n  }\n\n  setActiveTab(value) {\n    this.setState({\n      current_tab: value\n    }, function () {\n      console.log(this.state.current_tab, 'active');\n    });\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.sate.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  } //Menu function\n\n\n  handleSetPng(png) {\n    this.setState({\n      png: png\n    }, () => console.log(this.state.png, 'png'));\n  }\n\n  handleSetJpg(jpg) {\n    this.setState({\n      jpg: jpg\n    }, () => console.log(this.state.jpg));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    console.log(\"remove\");\n    this.setState(state => {\n      const tabs = state.tabs.filter((item, j) => i !== j);\n      var idx = tabs.indexOf(this.state.current_tab);\n      delete_resource(this.state.current_tab);\n      /*  this.state.sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (this.state.current_tab in node.sources) {\n                    delete_source(node.id, this.state.current_tab);\n                }\n            }\n        });*/\n\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n      if (tabs.length >= 1 && idx != -1) {\n        tabs.splice(idx, 1);\n        this.state.current_tab = tabs[tabs.length - 1];\n        this.set_active_tab(this.current_tab);\n        console.log(this.state.tabs.length, 'length');\n      }\n\n      return {\n        tabs\n      };\n    });\n    /*\n        delete_resource(current_tab);\n        sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (current_tab in node.sources) {\n                    delete_source(node.id, current_tab);\n                }\n            }\n        });\n        \n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        if (tabs.length >= 1 && idx != -1)\n        {\n            tabs.splice(idx, 1);\n            current_tab = tabs[tabs.length-1];\n            set_active_tab(current_tab+\"_body\");\n        }\n        */\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        if (document.getElementById(\"title_\" + tab_id).value !== '') {\n          var filename = document.getElementById(\"title_\" + tab_id).value + \".txt\";\n        } else {\n          var filename = \"tab\" + tab_id + \"_text.txt\";\n        }\n\n        var text = document.getElementById(tab_id).value;\n        this.download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = this.state.fileName;\n        console.log(filename, 'filename');\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + tab_id).files;\n        var file = files[0];\n        var filename = file.name;\n        document.getElementById(\"title_\" + tab_id).innerText = filename;\n        console.log(file.name);\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          document.getElementById(tab_id).innerText = content;\n          this.update_resource(tab_id, content, filename);\n        };\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = loadSADFace(file);\n        console.log(reader);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          this.setState({\n            remove_all_tabs: !this.state.remove_all_tabs\n          }, () => console.log(this.state.remove_all_tabs));\n          this.loadTabs(json.resources);\n        }.bind(this);\n      }\n    }\n  }\n\n  loadJSON(json_value) {\n    this.setState({\n      json: import_json(json_value)\n    }, () => console.log(this.state.json, 'json'));\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setState({\n      current_sadface_doc: JSON.stringify(get_sd())\n    }, () => console.log(this.state.current_sadface_doc, 'current_sadface_doc')); //load any sources in the stored diagram state\n\n    window.onload = function () {\n      this.loadTabs(this.state.json.resources);\n    };\n\n    this.state.cy_data = export_cytoscape(this.state.json);\n\n    if (this.state.cy !== null) {\n      this.state.cy.elements().remove();\n      this.state.cy.json({\n        elements: JSON.parse(this.state.cy_data)\n      }); //redraw_visualisation();\n    }\n  }\n\n  download(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \" + filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n    outfile.click();\n    document.body.removeChild(outfile);\n  }\n\n  get_resource(resource_id) {\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n     Returns: An resource dict\n    */\n    if (resource_id) {\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n      return resource;\n    }\n  }\n\n  isTab_id(tab) {\n    return tab.tab_id;\n  }\n\n  loadJSON() {}\n\n  loadTabs(tabs) {\n    console.log(tabs); // this.state.tabs.forEach(function(tab) {\n    // this.load_tab(tab);\n    // });\n  }\n\n  load_tab(resource) {\n    if (resource != null) {\n      var tab_id = resource.id;\n      this.add_tab(tab_id);\n      this.set_text_resource_title(tab_id, resource.metadata.title);\n      this.set_text_resource_content(tab_id, resource.content);\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      console.log(\"update resource\");\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.title = title;\n        }\n        /*  this.state.sd.resources.forEach((res) => {\n              if(res.id === resource_id) {\n                  res = resource;\n              }\n          });*/\n\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n\n      this.setState({\n        tabs\n      }, () => {\n        console.log(\"update tabs\");\n      });\n    }\n  } //Resource Pane Functions\n\n\n  change_title(tab_id, val) {\n    console.log(\"change title\" + tab_id + val);\n    this.set_text_resource_title(tab_id, val);\n  }\n\n  set_text_resource_title(tab_id, title) {\n    console.log(\"set text resource title\" + tab_id + title);\n    this.update_resource(tab_id, null, title); //    this.update_local_storage();\n  }\n\n  change_content(tab_id, val) {\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n  }\n\n  set_text_resource_content(tab_id, text) {\n    this.update_resource(tab_id, text, null); //update_local_storage();\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  setFileName(file_name) {\n    console.log('filename APP');\n    this.setState({\n      fileName: file_name\n    }, () => console.log(this.state.fileName, 'filename app'));\n  }\n\n  download_sadface() {\n    console.log(\"download_sadface\");\n  }\n\n  load_demo_argument() {\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    this.setState({\n      cy_data: export_cytoscape(import_json(demo_sadface_doc))\n    }, () => console.log(this.state.cy_data, 'cy_data'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      toggleResourcePane: this.toggleResourcePane,\n      mp_reset: this.mp_reset,\n      load_demo_argument: this.load_demo_argument,\n      set_analyst_name: this.set_analyst_name,\n      set_analyst_email: this.set_analyst_email,\n      download_sadface: this.download_sadface,\n      download_png: this.download_png,\n      download_jpg: this.download_jpg,\n      setFileName: this.setFileName,\n      fileManager: this.fileManager,\n      png: this.state.png,\n      jpg: this.state.jpg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      current_tab: this.state.current_tab,\n      setActiveTab: this.setActiveTab,\n      fileManager: this.fileManager,\n      change_title: this.change_title,\n      change_content: this.change_content,\n      new_uuid: this.new_uuid,\n      loadTabs: this.loadTabs,\n      cy_data: this.state.cy_data,\n      handleSetPng: this.handleSetPng,\n      handleSetJpg: this.handleSetJpg,\n      remove_all_tabs: this.state.remove_all_tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","ReactCytoscape","ResourcePane","MainUI","Menu","Modal","loadJSON","loadSADFace","saveSADFace","delete_source","delete_resource","get_sd","import_json","add_resource","export_cytoscape","new_uuid","add_resource_metadata","App","constructor","props","state","tabs","last_number","tab_id","sd","showResourcePane","test","current_tab","cy_data","selected","jpg","png","fileName","json","current_sadface_doc","cy","remove_all_tabs","bind","toggleButton","add_to_tabs_arr","download","update_resource","loadTabs","get_resource","toggleResourcePane","download_sadface","setActiveTab","fileManager","add_tab","remove_tab","change_title","set_text_resource_content","add_resource_header","handleSetPng","handleSetJpg","load_demo_argument","setFileName","setState","concat","console","log","openAddBoardModal","boardAddModalShow","createNewTab","load_id","newTab","new_resource","id","localStorage","setItem","JSON","stringify","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","media","tab_number","index","value","resource_id","key","sate","resources","forEach","res","metadata","content","componentDidMount","slideout","i","filter","item","j","idx","indexOf","length","splice","set_active_tab","toggle","operation","filetype","filename","files","file","name","innerText","reader","FileReader","onload","e","result","readAsText","parse","json_value","window","elements","remove","outfile","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","resource","findIndex","tab","isTab_id","load_tab","set_text_resource_title","title","undefined","val","change_content","clear_local_storage","clear","location","reload","file_name","demo_sadface_doc","render","mp_reset","set_analyst_name","set_analyst_email","download_png","download_jpg"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape';\n\n//import Components\nimport ResourcePane from './Components/ResourcePane';\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\n\nimport Modal from './Components/Modal';\n\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {loadJSON,loadSADFace,saveSADFace, delete_source,delete_resource, get_sd,import_json, add_resource, export_cytoscape, new_uuid,add_resource_metadata} from './lib/Sadface'; \n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 0,\n\t\t\ttab_id:\"\",\n            sd: get_sd(),\n            showResourcePane: true,\n            test:{},\n            current_tab: 0,\n            cy_data: null,\n            selected: '',\n            jpg:'',\n            png: '',\n            fileName:'',\n            json: '',\n            current_sadface_doc:'',\n            cy:null,\n            remove_all_tabs: false,\n        };\n\n\n        this.test = this.test.bind(this);\n        this.toggleButton = this.toggleButton.bind(this);\n        this.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.download = this.download.bind(this);\n        this.update_resource =this.update_resource.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.download_sadface =this.download_sadface.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.download = this.download.bind(this);\n        this.fileManager = this.fileManager.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n\n        //ResourcePane Functions\n        this.add_tab = this.add_tab.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.change_title = this.change_title.bind(this);\n        this.set_text_resource_content = this.set_text_resource_content.bind(this);\n        this.add_resource_header = this.add_resource_header.bind(this);\n\n        //Menu\n        this.handleSetPng = this.handleSetPng.bind(this);\n        this.handleSetJpg = this.handleSetJpg.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n\n\n\n\n\n\n\n\n\n    add_to_tabs_arr(tab_id){\n       this.setState(state => {\n          const tabs = state.tabs.concat(tab_id);\n          return {\n             tabs,\n         }}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n\n   }\n   openAddBoardModal(){\n    this.setState({ boardAddModalShow: true }, function () {\n       console.log(this.state.boardAddModalShow);\n   });\n\n}\n\ncreateNewTab(){\n}\n\n\n\n\n\n\n\nadd_tab(load_id=null){\n    let newTab = {};\n    if (load_id == null) {\n        var new_resource = add_resource(' ');\n        newTab.tab_id = new_resource.id;\n        add_resource_metadata(newTab.tab_id, 'title', '');\n        localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    }else{ newTab.tab_id = load_id; }\n\n    this.add_resource_header(newTab);\n    \n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    newTab.media = resource_type_txt;\n\n    \n        \n    }\n    \n    add_resource_header(newTab){\n\n        let tab_number = 33333;\n        this.setState({ last_number: this.state.last_number + 1}, function(){\n            console.log(this.state.last_number, 'try');\n            tab_number = this.state.last_number;\n            console.log(tab_number, 'tab head');\n            newTab.tab_number = tab_number;\n\n            this.setState(state => {\n                const tabs = this.state.tabs.concat(newTab);\n                return {\n                    tabs,\n                }}, function (){\n                    console.log(this.state.tabs, 'header');\n                    this.setActiveTab(tab_number);\n                }\n                )\n        });\n    }\n\n\n\n\n\n    test(index) {\n        this.setState({\n            current_tab: index\n        });\n        console.log(this.current_tab);\n    }\n\n    setActiveTab(value){\n        this.setState({\n            current_tab: value\n        }, function (){\n            console.log(this.state.current_tab, 'active');\n        });\n\n\n\n    }\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.sate.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\nnew_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n//Menu function\nhandleSetPng(png){\n    this.setState({png: png}, () =>\n        console.log(this.state.png, 'png'));\n}\n\nhandleSetJpg(jpg){\n    this.setState({jpg: jpg}, () =>\n        console.log(this.state.jpg));\n}\n\n\n\n\n\ncomponentDidMount() {\n this.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n});\n}\n\nremove_tab(i){\n    console.log(\"remove\");\n    this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        var idx = tabs.indexOf(this.state.current_tab);\n        delete_resource(this.state.current_tab);\n\n  /*  this.state.sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (this.state.current_tab in node.sources) {\n                delete_source(node.id, this.state.current_tab);\n            }\n        }\n    });*/\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        this.state.current_tab = tabs[tabs.length-1];\n        this.set_active_tab(this.current_tab);\n        console.log(this.state.tabs.length, 'length');\n    }\n        return {\n            tabs,\n        };\n    });\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n    */\n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n    this.slideout.toggle();\n}\n\n\n\n\n\nfileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n    if (\"save\" == operation)    {\n        // if it's a txt file\n        if (\"txt\" == filetype) {    \n            if (document.getElementById(\"title_\"+tab_id).value !== '') {\n                var filename = document.getElementById(\"title_\"+tab_id).value+\".txt\";\n            } else {\n                var filename = \"tab\"+tab_id+\"_text.txt\";\n            }\n            var text = document.getElementById(tab_id).value;\n            this.download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n           var filename = this.state.fileName;\n           console.log(filename, 'filename');\n            if(filename.length == 0){ filename = \"default\"}\n               saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            var files = document.getElementById(\"load\"+tab_id).files;\n            var file = files[0];\n            var filename = file.name;\n            document.getElementById(\"title_\"+tab_id).innerText = filename;\n            console.log(file.name);\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                document.getElementById(tab_id).innerText = content;\n                this.update_resource(tab_id, content, filename);\n            }\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = loadSADFace(file);\n            console.log(reader);\n            reader.onload = function(e) {\n                var result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                this.setState({remove_all_tabs: !this.state.remove_all_tabs}, () =>\n                    console.log(this.state.remove_all_tabs));\n                this.loadTabs(json.resources);\n            }.bind(this);\n        }\n    }\n}\n\n loadJSON(json_value) {\n    this.setState({json: import_json(json_value)}, () => \n        console.log(this.state.json, 'json'));\n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    this.setState({current_sadface_doc: JSON.stringify(get_sd())}, () =>\n        console.log(this.state.current_sadface_doc, 'current_sadface_doc'));\n    //load any sources in the stored diagram state\n    window.onload = function () {\n        this.loadTabs(this.state.json.resources);\n    };\n    this.state.cy_data = export_cytoscape(this.state.json);\n    if(this.state.cy !== null)\n    {\n        this.state.cy.elements().remove();\n        this.state.cy.json({elements: JSON.parse(this.state.cy_data)});\n        //redraw_visualisation();\n    }\n}\n\n\n\ndownload(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \"+filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n\n    outfile.click();\n\n    document.body.removeChild(outfile);\n}\n\n\nget_resource(resource_id){\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n\n    Returns: An resource dict\n    */\n    if(resource_id){\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n        return resource;\n    }\n}\n\nisTab_id(tab){\n    return tab.tab_id\n}\n\n\n\n\n\n\nloadJSON(){\n\n}\n\nloadTabs(tabs) {\n    console.log(tabs);\n   // this.state.tabs.forEach(function(tab) {\n    // this.load_tab(tab);\n// });\n}\n\nload_tab(resource) {\n    if (resource != null) {\n        var tab_id = resource.id;\n        this.add_tab(tab_id);\n        this.set_text_resource_title(tab_id, resource.metadata.title);\n        this.set_text_resource_content(tab_id, resource.content);\n    }\n}\n\nupdate_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    \n\n    if (resource_id && (content || title)) {\n        console.log(\"update resource\");\n\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.title = title;\n            }\n          /*  this.state.sd.resources.forEach((res) => {\n                if(res.id === resource_id) {\n                    res = resource;\n                }\n            });*/\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n        this.setState({tabs}, () =>{\n            console.log(\"update tabs\");\n        });\n    }\n}\n\n//Resource Pane Functions\nchange_title(tab_id, val) {\n    console.log(\"change title\" +tab_id+val);\n    this.set_text_resource_title(tab_id, val)\n}\n\nset_text_resource_title(tab_id, title){\n    console.log(\"set text resource title\" +tab_id + title)\n    this.update_resource(tab_id, null, title);\n//    this.update_local_storage();\n}\n\nchange_content(tab_id, val){\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n}\n\nset_text_resource_content(tab_id, text){\n    this.update_resource(tab_id, text, null);\n    //update_local_storage();\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\n\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\n setFileName(file_name){\n    console.log('filename APP');\n    this.setState({fileName: file_name}, () => \n      console.log(this.state.fileName, 'filename app'));\n  }\n\n\n\n\ndownload_sadface(){\n    console.log(\"download_sadface\")\n}\n\n\n\nload_demo_argument(){\n   var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n\n    this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n        console.log(this.state.cy_data, 'cy_data'));\n}\n\n\nrender(){\n\n    return (\n    \t<div>\n\n\n\n    \t<Menu \n        toggleResourcePane={this.toggleResourcePane}\n        mp_reset={this.mp_reset}\n        load_demo_argument={this.load_demo_argument}\n        set_analyst_name={this.set_analyst_name}\n        set_analyst_email={this.set_analyst_email}\n        download_sadface={this.download_sadface}\n        download_png={this.download_png}\n        download_jpg={this.download_jpg}\n        setFileName={this.setFileName}\n        fileManager={this.fileManager}\n\n        png={this.state.png}\n        jpg={this.state.jpg}\n\n        />\n\n        <MainUI\n        toggleSlideIn={() => this.toggleButton()}\n        addTab = {() => this.add_tab()}\n        tabs = {this.state.tabs}\n        remove_tab={this.remove_tab}\n        fileManager={this.fileManager}\n        showResourcePane={this.state.showResourcePane}\n        current_tab={this.state.current_tab}\n        setActiveTab={this.setActiveTab}\n        fileManager={this.fileManager}\n        change_title={this.change_title}\n        change_content={this.change_content}\n        new_uuid = {this.new_uuid}\n        loadTabs= {this.loadTabs}\n        cy_data= {this.state.cy_data}\n\n        handleSetPng={this.handleSetPng}\n        handleSetJpg={this.handleSetJpg}\n\n        remove_all_tabs={this.state.remove_all_tabs}\n\n\n\n        />\n\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}