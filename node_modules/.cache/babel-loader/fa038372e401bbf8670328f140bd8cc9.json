{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport MainUI from './Components/MainUI';\nimport SlideIn from './Components/SlideIn'; //import Modal from './Components/Modal';\n//import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.add_to_tabs_arr = (tab_id, tab_number) => {\n      this.setState(state => {\n        const tabs = state.tabs.concat({\n          tab_id: tab_id,\n          tab_number: tab_number\n        });\n        console.log(\"add to tabs arr \" + tabs);\n        return {\n          tabs\n        };\n      });\n    };\n\n    this.remove_tab = i => {\n      this.setState(state => {\n        const tabs = state.tabs.filter((item, j) => i !== j);\n        return {\n          tabs\n        };\n      });\n      /*\n          delete_resource(current_tab);\n          sd.nodes.forEach((node) => {\n              if (node.type == 'atom') {\n                  if (current_tab in node.sources) {\n                      delete_source(node.id, current_tab);\n                  }\n              }\n          });\n          \n          localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n          if (tabs.length >= 1 && idx != -1)\n          {\n              tabs.splice(idx, 1);\n              current_tab = tabs[tabs.length-1];\n              set_active_tab(current_tab+\"_body\");\n          }\n      */\n    };\n\n    this.state = {\n      tabs: [],\n      last_number: 1,\n      tab_id: \"\"\n    };\n    this.add_tab = this.add_tab.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_resource_header = this.add_resource_header.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n  }\n\n  set_State(value) {\n    this.setState({\n      tab_id: value\n    });\n    console.log(\"set state \" + this.state.tab_id);\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = this.new_resource(content); // sd.resources.push(res);\n\n      return res;\n    }\n  }\n\n  createNewTab() {}\n\n  next_number() {\n    var current_number = this.state.last_number;\n    this.setState({\n      last_number: this.state.last_number + 1\n    });\n    return current_number;\n  }\n\n  add_tab(load_id = null) {\n    if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      this.setState({\n        tab_id: new_resource.id\n      }, () => {\n        console.log(\"add tab tab_id \" + this.state.tab_id); //  add_resource_metadata(tab_id, 'title', '');\n        //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\n        this.add_resource_header();\n      });\n    } else {\n      this.setState({\n        tab_id: load_id\n      }, () => {\n        console.log(\"tab_id=load id: \" + this.state.tab_id);\n        this.add_resource_header();\n      });\n    } // \n    //  var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    //  var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    //  if (resource_type_txt.toLowerCase() === \"text\") { add_text_resource_body(tab_id); }\n    //  set_active_tab(tab_id+\"_body\");\n    // return this.state.tab_id\n\n  }\n\n  add_resource_header() {\n    console.log(\"add Resource header \" + this.state.tab_id);\n    var tab_number = this.next_number();\n    this.add_to_tabs_arr(this.state.tab_id, tab_number);\n    console.log(\"Show tabs\" + tab_number);\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  } //uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n  new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n     Returns: A string\n    */\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(SlideIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      remove_tab: () => this.remove_tab(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","MainUI","SlideIn","App","constructor","props","add_to_tabs_arr","tab_id","tab_number","setState","state","tabs","concat","console","log","remove_tab","i","filter","item","j","last_number","add_tab","bind","toggleButton","add_resource","add_resource_header","set_State","value","content","res","new_resource","createNewTab","next_number","current_number","load_id","id","new_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","componentDidMount","slideout","document","getElementById","toggle","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n\nimport MainUI from './Components/MainUI';\nimport SlideIn from './Components/SlideIn';\n\n//import Modal from './Components/Modal';\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 1,\n\t\t\ttab_id:\"\",\n\n\n\t\t};\n\n\t\tthis.add_tab = this.add_tab.bind(this);\n\t\tthis.toggleButton = this.toggleButton.bind(this);\n\t\tthis.add_resource =this.add_resource.bind(this);\n\t\tthis.add_resource_header = this.add_resource_header.bind(this);\n\t\tthis.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n\t}\n\n\tset_State(value) {\n\t    \tthis.setState({tab_id: value});\n\t    \tconsole.log(\"set state \"+ this.state.tab_id);\n\n}\n\n\tadd_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = this.new_resource(content);\n       // sd.resources.push(res);\n        return res;\n    }\n}\n\n\n\nadd_to_tabs_arr = (tab_id, tab_number) => {\n\tthis.setState(state => {\n\t\tconst tabs = state.tabs.concat({tab_id:tab_id, tab_number: tab_number});\n\t\tconsole.log(\"add to tabs arr \" + tabs);\n\t\treturn {\n\t\t\ttabs,\n\t\t};\n\t});\n};\n\ncreateNewTab(){\n\n}\n\n next_number(){\n \t var current_number = this.state.last_number\n \t this.setState({ last_number: this.state.last_number + 1})\n \t return current_number;\n }\n \t\n\n\t\n\n\tadd_tab(load_id=null){\n\t\tif (load_id == null) {\n        var new_resource = this.add_resource(' ');\n    \tthis.setState({\n    \t\ttab_id: new_resource.id\n    \t}, () => {\n    \t\tconsole.log(\"add tab tab_id \" +this.state.tab_id);\n    \t//  add_resource_metadata(tab_id, 'title', '');\n\t\t//localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\n    \t\tthis.add_resource_header();\n    \t});\n    \t    \t\t    \n\n\t\t} \n    \telse { \n    \t\tthis.setState({\n    \t\ttab_id: load_id \n    \t\t}, () => {\n    \t\t\tconsole.log(\"tab_id=load id: \"+this.state.tab_id);\n    \t\t\tthis.add_resource_header();\n    \t\t});\n    \t}\n\n    \t// \n\n  //  var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n  //  var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n  //  if (resource_type_txt.toLowerCase() === \"text\") { add_text_resource_body(tab_id); }\n\n  //  set_active_tab(tab_id+\"_body\");\n   // return this.state.tab_id\n    }\n\n   \n\n\t\n\n\tadd_resource_header() {\n \tconsole.log(\"add Resource header \"+ this.state.tab_id);\n  \tvar tab_number = this.next_number();\n  \tthis.add_to_tabs_arr(this.state.tab_id, tab_number);\n    console.log(\"Show tabs\"+ tab_number);\n}\n\n\t new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n\n\n//uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n\n    Returns: A string\n    */\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\n \tcomponentDidMount() {\n  \tthis.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70\n\n  });\n}\n\nremove_tab = i => {\n    this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        return {\n            tabs,\n        };\n    });\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n*/\n};\n\n\n\n\n\ntoggleButton(){\n        this.slideout.toggle();\n\t}\n\n\n\n \n  render(){\n\n    return (\n    \t<div>\n\t    \t \n      \n    \t<SlideIn />\n{/*}\n    \t<MainUI\n    \t\taddTab = {() => this.add_tab()}\n    \t\ttabs = {this.state.tabs}\n    \t\t/>\n\n    \n\n*/}\n\t\t\t<MainUI\n\t\t\t   toggleSlideIn={() => this.toggleButton()}\n\t\t\t   addTab = {() => this.add_tab()}\n\t\t\t   tabs = {this.state.tabs}\n               remove_tab={() => this.remove_tab()}\n\n\n\t\t\t/>\n \n   </div>\n\n      );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}