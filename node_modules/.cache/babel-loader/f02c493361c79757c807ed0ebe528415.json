{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }),\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      //tabs: this.props.tabs,\n      activeTab: this.props.activeTab,\n      last_number: 1\n    };\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.handlefileManager = this.handlefileManager.bind(this);\n    this.add_tab = this.add_tab.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.new_resource = this.new_resource.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n    this.test = this.test.bind(this);\n  }\n\n  setActiveTab(index) {\n    this.setState({\n      activeTab: index\n    });\n    console.log(this.activeTab);\n  }\n\n  searchTabs(tab) {}\n\n  add_tab(load_id = null) {\n    var newTab = {};\n    var length;\n\n    if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n      var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n\n      if (resource_type_txt.toLowerCase() === \"text\") {\n        newTab.type = \"text\";\n      }\n\n      newTab.tab_id = new_resource.id;\n      newTab.content = new_resource.content;\n      newTab.metadata = new_resource.metadata;\n      this.add_resource_metadata(this.state.tab_id, 'title', ''); //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    } else {\n      newTab.tab_id = load_id;\n    } //  set_active_tab(tab_id+\"_body\");\n    // return this.state.tab_id\n    //SetState with callback ensures updated value is used\n\n\n    const tabs = this.props.tabs.concat(newTab);\n    console.log(this.state.tabs.length);\n    length = this.state.tabs.length;\n    length = length - 1;\n    console.log(\"llength\" + length);\n    this.test(length);\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = this.new_resource(content); // sd.resources.push(res);\n\n      return res;\n    }\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  }\n\n  new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n     Returns: A string\n    */\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.state.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  }\n\n  test(value) {\n    this.setState({\n      activeTab: value\n    }, function () {\n      console.log(this.state.activeTab);\n    });\n  }\n\n  handlefileManager() {\n    this.props.fileManager();\n  }\n\n  render() {\n    const activeTab = this.props.activeTab;\n    var tabNumber = 1;\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      style: {\n        display: this.props.showResourcePane ? \"block\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      onClick: this.add_tab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.props.tabs.map((item, i) => {\n      const onSetActiveTab = () => this.setActiveTab(i);\n\n      return React.createElement(\"button\", {\n        onClick: onSetActiveTab //className = {(item.active) ? \"tablinks active\" : \"tablinks\"}\n        ,\n        className: this.state.activeTab === i ? \"tablinks active\" : \"tablinks\",\n        key: item.tab_id,\n        id: item.tab_id + \"_btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, tabNumber++);\n    })), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, this.props.tabs.map((item, i) => {\n      const handleRemove = () => this.props.remove_tab(i);\n\n      const handlefileManager = () => this.props.fileManager('save', 'txt', item.tab_id);\n\n      return React.createElement(TabBody, {\n        id: item.tab_id,\n        key: item.tab_id,\n        i: i,\n        activeTab: this.state.activeTab,\n        handleremove: handleRemove,\n        fileManager: handlefileManager,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nclass TabBody extends React.Component {\n  render() {\n    const _this$props = this.props,\n          tabs = _this$props.tabs,\n          id = _this$props.id,\n          i = _this$props.i,\n          activeTab = _this$props.activeTab,\n          handleremove = _this$props.handleremove,\n          fileManager = _this$props.fileManager;\n    return React.createElement(\"div\", {\n      id: id + \"_body\",\n      className: \"resource_pane_tab_content\",\n      style: {\n        display: activeTab === i ? 'block' : 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Remove this tab from the resource pane\",\n      onClick: handleremove,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-trash fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"file\",\n      id: \"load\" + id,\n      style: {\n        display: \"block\"\n      },\n      accept: \".txt\"\n      /*onchange=\"filemanager('load','txt','` + tab_id + `')\"*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"button\",\n      id: \"load\" + id + \"_btn\",\n      className: \"btn btn-default\"\n      /*onclick=\"$('#load` + tab_id + `').trigger('click');\" */\n      ,\n      title: \"Load a text file into this resource tab\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-upload fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      onClick: fileManager\n      /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/\n      ,\n      title: \"Save this resource tab to a text file\",\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-download fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(Button, {\n      id: \"toggle_edit_lock_button\",\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Toggle editability of the content area\"\n      /*onclick=\"toggle_edit_lock();\"*/\n      ,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      id: \"toggle_edit_lock_icon_\" + id,\n      className: \"fa fa-lock fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"button\",\n      className: \"btn btn-default\",\n      title: \"Add node from text selection\"\n      /* onclick=\"new_atom_txt_resource_button();\"*/\n      ,\n      variant: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-puzzle-piece fa-fw fa-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"textarea\", {\n      id: \"title_\" + id,\n      type: \"text\",\n      rows: \"1\",\n      style: {\n        resize: \"none\"\n      },\n      className: \"form-control\",\n      placeholder: \"The name of this resource...\"\n      /*onchange=\"change_title('` + tab_id + `')\"*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      id: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      id: id,\n      className: \"form-control\",\n      placeholder: \"Enter your source text here...\",\n      rows: \"20\"\n      /*onchange=\"change_textarea('` + tab_id + `')\" onfocus=\"set_focus(this)\"*/\n      ,\n      style: {\n        resize: \"vertical\",\n        minHeight: \"35px\"\n      },\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/ResourcePane.js"],"names":["React","Component","Modal","FontAwesomeIcon","faPlusSquare","Button","ResourcePane","constructor","props","newResourceModal","trigger","triggerText","className","triggerId","id","title","content","footer","value","state","activeTab","last_number","setActiveTab","bind","handlefileManager","add_tab","add_resource","new_resource","add_resource_metadata","test","index","setState","console","log","searchTabs","tab","load_id","newTab","length","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","toLowerCase","type","tab_id","metadata","tabs","concat","res","add_to_tabs_arr","new_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","resource_id","key","sd","resources","forEach","fileManager","render","tabNumber","display","showResourcePane","map","item","i","onSetActiveTab","handleRemove","remove_tab","TabBody","handleremove","resize","minHeight"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Button from 'react-bootstrap/Button';\n\n\n\nclass ResourcePane extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            //tabs: this.props.tabs,\n            activeTab: this.props.activeTab,\n            last_number: 1,\n        }\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.handlefileManager =this.handlefileManager.bind(this);\n      this.add_tab = this.add_tab.bind(this);\n      this.add_resource =this.add_resource.bind(this);\n      this.new_resource = this.new_resource.bind(this);\n              this.add_resource_metadata =this.add_resource_metadata.bind(this);\n              this.test= this.test.bind(this);\n\n\n    };\n\tnewResourceModal = {\n    trigger: {\n      triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n      className: 'add_tab_button',\n      triggerId: \"add_tab_button\",\n    },\n    id:\"resource_pane_selection_modal\",\n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n     // action: this.add_tab() \n    }\n};\n\nsetActiveTab(index) {\n        this.setState({\n            activeTab: index\n        });\n        console.log(this.activeTab);\n    }\n\nsearchTabs(tab){\n\n}\n\n    add_tab(load_id=null){\n        var newTab = {};\n        var length;\n        if (load_id == null) {\n            var new_resource = this.add_resource(' ');\n\n            var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n            var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n            if (resource_type_txt.toLowerCase() === \"text\") { \n                newTab.type = \"text\"\n            }\n\n            newTab.tab_id = new_resource.id;\n            newTab.content = new_resource.content;\n            newTab.metadata = new_resource.metadata;\n\n            this.add_resource_metadata(this.state.tab_id, 'title', '');\n          //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        } else { newTab.tab_id= load_id }\n  //  set_active_tab(tab_id+\"_body\");\n   // return this.state.tab_id\n\n//SetState with callback ensures updated value is used\n\n\n        const tabs = this.props.tabs.concat(newTab);\n        \n            console.log(this.state.tabs.length);\n            length = this.state.tabs.length;\n            length = length -1;\n            console.log(\"llength\" +length);\n            this.test(length);\n\n                \n\n             \n        \n    }\n\n\n    add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = this.new_resource(content);\n       // sd.resources.push(res);\n        return res;\n    }\n}\n\nadd_to_tabs_arr(tab_id){\n    this.setState(state => {\n        const tabs = state.tabs.concat(tab_id);\n        return {\n            tabs,\n        }}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n    \n}\n\n\n     new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n\n    Returns: A string\n    */\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.state.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\ntest(value){\n    this.setState({\n        activeTab: value\n    }, function (){\n        console.log(this.state.activeTab);\n    });\n   \n\n\n}\n\n\nhandlefileManager(){\n    this.props.fileManager()\n}\n\n \trender() {\n        const{\n            activeTab\n\n\n        } =this.props;\n            var tabNumber = 1;\n\n\n        return ( \n \t\t\t<div className=\"resource-pane\" id=\"resource-pane\" style={{display: this.props.showResourcePane ? \"block\" : \"none\"}}> \n\n                    <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                        <Modal\n                            modalProps = {this.newResourceModal}  \n                            onClick = {this.add_tab}               \n                        />\n                        {\n                            this.props.tabs.map((item, i)=> {\n                            const onSetActiveTab = () =>\n                                this.setActiveTab(i);\n                            return(\n                                <button  \n                                    onClick={onSetActiveTab} \n                                    //className = {(item.active) ? \"tablinks active\" : \"tablinks\"}\n                                    className={this.state.activeTab === i ? \"tablinks active\" : \"tablinks\"}\n                                    key={item.tab_id}\n                                    id={item.tab_id+\"_btn\"}\n                                >\n                                    {tabNumber++}\n                                </button>\n                                \n                                )})}\n                    </div>\n\n\n                        \n                    <div className=\"tab_body\" id=\"tab_body\">\n                        {this.props.tabs.map((item,i) => {\n                            const handleRemove = () =>\n                                this.props.remove_tab(i);\n\n                            const handlefileManager = () =>\n                                this.props.fileManager('save', 'txt', item.tab_id); \n                            return(\n                                <TabBody\n                                    id={item.tab_id}\n                                    key={item.tab_id}\n                                    i={i}\n                                    activeTab={this.state.activeTab}\n                                    handleremove={handleRemove}\n                                    fileManager={handlefileManager}\n                                />\n\n                                )\n                        })}\n                    </div>\n                </div>\n        );\n\n    }\n}\n\n\n\n            \nclass TabBody extends React.Component {\n    render() { \n        const {\n    \t\ttabs,\n            id,\n            i,\n            activeTab,\n            handleremove,\n            fileManager\n            \n\n\n    \t   }=this.props\n\n            return (\n\t\t\t\t<div id={id+\"_body\"} className=\"resource_pane_tab_content\" style={{display: activeTab === i ? 'block' : 'none'}}>\n                <form>\n                    <div className=\"form-group\">\n\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Remove this tab from the resource pane\"\n                                onClick={handleremove}\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-trash fa-fw fa-lg\"></i>\n                            </Button>\n                            <input type=\"file\" id={\"load\" + id} style={{display: \"block\"}} accept=\".txt\" /*onchange=\"filemanager('load','txt','` + tab_id + `')\"*//>\n                            <Button \n                                type=\"button\" \n                                id={\"load\" + id + \"_btn\"} \n                                className=\"btn btn-default\" \n                                /*onclick=\"$('#load` + tab_id + `').trigger('click');\" */\n                                title=\"Load a text file into this resource tab\"\n                                variant=\"light\"\n                            >\n                                <i className=\"fa fa-upload fa-fw fa-lg\"></i>\n\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                onClick={fileManager}\n                                /*onclick=\"filemanager('save','txt','` + tab_id + `')\"*/ \n                                title=\"Save this resource tab to a text file\"\n                                variant=\"light\"\n                                >\n                                <i className=\"fa fa-download fa-fw fa-lg\"></i>\n                            </Button>\n                            <Button id=\"toggle_edit_lock_button\" \n                                    type=\"button\" \n                                    className=\"btn btn-default\" \n                                    title=\"Toggle editability of the content area\" \n                                    /*onclick=\"toggle_edit_lock();\"*/\n                                    variant=\"light\"\n                                    >\n                                <i id={\"toggle_edit_lock_icon_\" + id} className=\"fa fa-lock fa-fw fa-lg\"></i>\n                            </Button>\n                            <Button \n                                type=\"button\" \n                                className=\"btn btn-default\" \n                                title=\"Add node from text selection\"\n                                /* onclick=\"new_atom_txt_resource_button();\"*/\n                                variant=\"light\"\n                                >\n                                <i className=\"fa fa-puzzle-piece fa-fw fa-lg\"></i>\n                            </Button>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Title</label>\n                        <textarea id={\"title_\"+id} type=\"text\" rows=\"1\" style={{resize: \"none\"}} className=\"form-control\" placeholder=\"The name of this resource...\" /*onchange=\"change_title('` + tab_id + `')\"*/></textarea> \n                        <label>Content</label>\n                        <div id=\"textarea\">\n                            <textarea id={id} className=\"form-control\" placeholder=\"Enter your source text here...\" rows=\"20\" /*onchange=\"change_textarea('` + tab_id + `')\" onfocus=\"set_focus(this)\"*/ style={{resize: \"vertical\", minHeight: \"35px\"}} readOnly></textarea>\n                        </div>  \n                    </div> \n                </form>\n              </div>\n            );\n    }\n            \n        \n}   \n\n\n\n\n\n\nexport default ResourcePane;\n"]},"metadata":{},"sourceType":"module"}