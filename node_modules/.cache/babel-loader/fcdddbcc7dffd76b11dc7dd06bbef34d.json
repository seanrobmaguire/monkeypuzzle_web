{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport MainUI from './Components/MainUI';\nimport SlideIn from './Components/SlideIn';\nimport Modal from './Components/Modal'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\nimport modalData from './Components/ModalData.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.add_to_tabs_arr = tab_id => {\n      this.setState(state => {\n        const tabs = state.tabs.concat(tab_id);\n        console.log(\"add to tabs arr \" + tabs);\n        return {\n          tabs\n        };\n      });\n    };\n\n    this.newResourceModal = {\n      trigger: {\n        triggerText: \"Test\",\n        className: 'add_tab_button',\n        triggerId: \"add_tab_button\"\n      },\n      id: \"resource_pane_selection_modal\",\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add' // action: this.add_tab() \n\n      }\n    };\n    this.state = {\n      tabs: [],\n      last_number: 1,\n      tab_id: \"\",\n      sd: {},\n      showResourcePane: true,\n      test: {},\n      activeTab: 0\n    };\n    this.confirm = this.test.binf(this);\n    this.test = this.test.bind(this);\n    this.add_tab = this.add_tab.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.download = this.download.bind(this);\n    this.saveSADFace = this.saveSADFace.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.loadSADFace = this.loadSADFace.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.remove_all_tabs = this.remove_all_tabs.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.mp_reset = this.mp_reset.bind(this);\n    this.clear_local_storage = this.clear_local_storage.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.set_analyst_name = this.set_analyst_name.bind(this);\n    this.set_analyst_email = this.set_analyst_email.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.download_png = this.download_png.bind(this);\n    this.download_jpg = this.download_jpg.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n  }\n\n  set_State(value) {\n    this.setState({\n      tab_id: value\n    });\n    console.log(\"set state \" + this.state.tab_id);\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = this.new_resource(content); // sd.resources.push(res);\n\n      return res;\n    }\n  }\n\n  createNewTab() {}\n\n  next_number() {\n    var current_number = this.state.last_number;\n    this.setState({\n      last_number: this.state.last_number + 1\n    });\n    return current_number;\n  }\n\n  test() {\n    var newTab = {};\n    var new_resource = this.add_resource(' ');\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n\n    if (resource_type_txt.toLowerCase() === \"text\") {\n      newTab.type = \"text\";\n    }\n\n    newTab.tab_id = new_resource.id;\n    newTab.content = new_resource.content;\n    newTab.metadata = new_resource.metadate;\n    this.setState({\n      test: newTab\n    });\n    this.add_to_tabs_arr(newTab);\n  }\n\n  add_tab(load_id = null) {\n    var newTab = {};\n\n    if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n      var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n\n      if (resource_type_txt.toLowerCase() === \"text\") {\n        newTab.type = \"text\";\n      }\n\n      newTab.tab_id = new_resource.id;\n      newTab.content = new_resource.content;\n      newTab.metadata = new_resource.metadata;\n      newTab.active = true;\n      this.add_resource_metadata(this.state.tab_id, 'title', ''); //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    } else {\n      newTab.tab_id = load_id;\n    } //  set_active_tab(tab_id+\"_body\");\n    // return this.state.tab_id\n\n\n    this.setState(prevState => ({\n      tabs: [...prevState.tabs, newTab]\n    }));\n    console.log(this.state.tabs);\n  }\n\n  confirm() {\n    console.log(this.state.tabs);\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.state.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  } //uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n  new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n     Returns: A string\n    */\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    this.setState(state => {\n      const tabs = state.tabs.filter((item, j) => i !== j);\n      return {\n        tabs\n      };\n    });\n    /*\n        delete_resource(current_tab);\n        sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (current_tab in node.sources) {\n                    delete_source(node.id, current_tab);\n                }\n            }\n        });\n        \n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        if (tabs.length >= 1 && idx != -1)\n        {\n            tabs.splice(idx, 1);\n            current_tab = tabs[tabs.length-1];\n            set_active_tab(current_tab+\"_body\");\n        }\n    */\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  download(filename, text) {}\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        if (document.getElementById(\"title_\" + tab_id).value !== '') {\n          var filename = document.getElementById(\"title_\" + tab_id).value + \".txt\";\n        } else {\n          var filename = \"tab\" + tab_id + \"_text.txt\";\n        }\n\n        var text = document.getElementById(tab_id).value; //download(filename,text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = document.getElementById(\"export_filename\").value;\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        this.saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + tab_id).files;\n        var file = files[0];\n        var filename = file.name;\n        document.getElementById(\"title_\" + tab_id).innerText = filename;\n        console.log(file.name);\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          document.getElementById(tab_id).innerText = content;\n          this.update_resource(tab_id, content, filename);\n        };\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = this.loadSADFace(file);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          this.remove_all_tabs();\n          this.loadTabs(json.resources);\n        };\n      }\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      var resource = this.get_resource(resource_id);\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.metadata.title = title;\n        }\n\n        this.setState.sd.resources.forEach(res => {\n          if (res.id === resource_id) {\n            res = resource;\n          }\n        });\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n    }\n  }\n\n  get_resource() {}\n\n  loadTabs() {}\n\n  saveSADFace() {}\n\n  loadSADFace() {}\n\n  loadJSON() {}\n\n  update_resource() {} // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n    console.log(this.state.showResourcePane);\n  }\n\n  mp_reset() {\n    this.clear_local_storage();\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  load_demo_argument() {\n    console.log(\"load_demo_argument\");\n  }\n\n  set_analyst_name() {\n    console.log(\"set_analyst_name\");\n  }\n\n  set_analyst_email() {\n    console.log(\"set_analyst_email\");\n  }\n\n  download_sadface() {\n    console.log(\"download_sadface\");\n  }\n\n  download_png() {\n    console.log(\"download_png\");\n  }\n\n  download_jpg() {\n    console.log(\"download_jpg\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      onClick: this.test,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472\n      },\n      __self: this\n    }), React.createElement(SlideIn, {\n      toggleResourcePane: this.toggleResourcePane,\n      mp_reset: this.mp_reset,\n      load_demo_argument: this.load_demo_argument,\n      set_analyst_name: this.set_analyst_name,\n      set_analyst_email: this.set_analyst_email,\n      download_sadface: this.download_sadface,\n      download_png: this.download_png,\n      download_jpg: this.download_jpg,\n      fileManager: this.fileManager,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      activeTab: this.state.activeTab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","MainUI","SlideIn","Modal","modalData","App","constructor","props","add_to_tabs_arr","tab_id","setState","state","tabs","concat","console","log","newResourceModal","trigger","triggerText","className","triggerId","id","title","content","footer","value","last_number","sd","showResourcePane","test","activeTab","confirm","binf","bind","add_tab","toggleButton","add_resource","remove_tab","download","saveSADFace","update_resource","loadSADFace","loadJSON","remove_all_tabs","loadTabs","get_resource","toggleResourcePane","mp_reset","clear_local_storage","load_demo_argument","set_analyst_name","set_analyst_email","download_sadface","download_png","download_jpg","add_resource_metadata","set_State","res","new_resource","createNewTab","next_number","current_number","newTab","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","toLowerCase","type","metadata","metadate","load_id","active","prevState","resource_id","key","resources","forEach","new_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","componentDidMount","slideout","i","filter","item","j","toggle","filename","fileManager","operation","filetype","length","files","file","name","innerText","reader","FileReader","onload","e","result","readAsText","localStorage","setItem","json","JSON","parse","resource","undefined","clear","window","location","reload","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n\nimport MainUI from './Components/MainUI';\nimport SlideIn from './Components/SlideIn';\n\nimport Modal from './Components/Modal';\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\nimport modalData from './Components/ModalData.js'\n\n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 1,\n\t\t\ttab_id:\"\",\n            sd: {},\n            showResourcePane: true,\n            test:{},\n            activeTab: 0,\n\n\n\n\n\t\t};\n        this.confirm =this.test.binf(this);\n        this.test = this.test.bind(this);\n\t\tthis.add_tab = this.add_tab.bind(this);\n\t\tthis.toggleButton = this.toggleButton.bind(this);\n\t\tthis.add_resource =this.add_resource.bind(this);\n\t\tthis.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.download = this.download.bind(this);\n        this.saveSADFace = this.saveSADFace.bind(this);\n        this.update_resource =this.update_resource.bind(this);\n        this.loadSADFace =this.loadSADFace.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.remove_all_tabs = this.remove_all_tabs.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.update_resource = this.update_resource.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.mp_reset =this.mp_reset.bind(this);\n        this.clear_local_storage = this.clear_local_storage.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.set_analyst_name = this.set_analyst_name.bind(this);\n        this.set_analyst_email =this.set_analyst_email.bind(this);\n        this.download_sadface =this.download_sadface.bind(this);\n        this.download_png =this.download_png.bind(this);\n        this.download_jpg = this.download_jpg.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n\t}\n\n\tset_State(value) {\n\t    \tthis.setState({tab_id: value});\n\t    \tconsole.log(\"set state \"+ this.state.tab_id);\n\n}\n\n\tadd_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = this.new_resource(content);\n       // sd.resources.push(res);\n        return res;\n    }\n}\n\n\n\nadd_to_tabs_arr = (tab_id) => {\n\tthis.setState(state => {\n\t\tconst tabs = state.tabs.concat(tab_id);\n\t\tconsole.log(\"add to tabs arr \" + tabs);\n\t\treturn {\n\t\t\ttabs,\n\t\t};\n\t});\n};\n\ncreateNewTab(){\n\n}\n\n next_number(){\n \t var current_number = this.state.last_number\n \t this.setState({ last_number: this.state.last_number + 1})\n \t return current_number;\n }\n    newResourceModal = {\n    trigger: {\n      triggerText: \"Test\",\n      className: 'add_tab_button',\n      triggerId: \"add_tab_button\",\n    },\n    id:\"resource_pane_selection_modal\",\n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n     // action: this.add_tab() \n    }\n};\n \t\ntest(){\n    var newTab = {};\n    var new_resource = this.add_resource(' ');\n\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    if (resource_type_txt.toLowerCase() === \"text\") { \n        newTab.type = \"text\"}\n\n\n    newTab.tab_id = new_resource.id;\n    newTab.content = new_resource.content;\n    newTab.metadata = new_resource.metadate;\n\n    this.setState({\n        test: newTab\n    });\n\n    this.add_to_tabs_arr(newTab);\n\n\n}\n\t\n\n\tadd_tab(load_id=null){\n        var newTab = {};\n\t\tif (load_id == null) {\n            var new_resource = this.add_resource(' ');\n\n            var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n            var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n            if (resource_type_txt.toLowerCase() === \"text\") { \n                newTab.type = \"text\"\n            }\n\n            newTab.tab_id = new_resource.id;\n            newTab.content = new_resource.content;\n            newTab.metadata = new_resource.metadata;\n            newTab.active = true;\n\n        \tthis.add_resource_metadata(this.state.tab_id, 'title', '');\n\t\t  //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\t\t} else { newTab.tab_id= load_id }\n  //  set_active_tab(tab_id+\"_body\");\n   // return this.state.tab_id\n        this.setState(prevState => ({\n            tabs:[...prevState.tabs, newTab]\n        }));\n\n        console.log(this.state.tabs);\n\n            \n\n\n\n        \n    }\n\n    confirm(){\n        console.log(this.state.tabs);\n    }\n\n\n\n\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.state.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\n\t new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n\n\n//uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n\n    Returns: A string\n    */\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\n \tcomponentDidMount() {\n  \tthis.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n  });\n}\n\nremove_tab(i){\n    this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        return {\n            tabs,\n        };\n    });\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n*/\n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n        this.slideout.toggle();\n\t}\n\n\n\ndownload(filename,text){\n\n}\n\n    fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n   if (\"save\" == operation)    {\n        // if it's a txt file\n        if (\"txt\" == filetype) {    \n            if (document.getElementById(\"title_\"+tab_id).value !== '') {\n                var filename = document.getElementById(\"title_\"+tab_id).value+\".txt\";\n            } else {\n                var filename = \"tab\"+tab_id+\"_text.txt\";\n            }\n            var text = document.getElementById(tab_id).value;\n            //download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var filename = document.getElementById(\"export_filename\").value;\n            if(filename.length == 0){ filename = \"default\"}\n            this.saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            var files = document.getElementById(\"load\"+tab_id).files;\n            var file = files[0];\n            var filename = file.name;\n            document.getElementById(\"title_\"+tab_id).innerText = filename;\n            console.log(file.name);\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                document.getElementById(tab_id).innerText = content;\n                this.update_resource(tab_id, content, filename);\n            }\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = this.loadSADFace(file);\n            reader.onload = function(e) {\n                var result = reader.result;\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                this.remove_all_tabs();\n                this.loadTabs(json.resources);\n            }\n        }\n    }\n}\n update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n\n    if (resource_id && (content || title)) {\n        var resource = this.get_resource(resource_id);\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.metadata.title = title;\n            }\n            this.setState.sd.resources.forEach((res) => {\n               if(res.id === resource_id) {\n                   res = resource;\n                }\n            }\n            );\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n    }\n}\n\n\nget_resource(){\n\n}\nloadTabs(){\n\n}\n\nsaveSADFace(){\n\n}\n\nloadSADFace(){\n\n}\n\nloadJSON(){\n\n}\n\nupdate_resource(){\n\n}\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n    console.log(this.state.showResourcePane);\n}\nmp_reset()\n{\n    this.clear_local_storage();\n}\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\nload_demo_argument(){\n    console.log(\"load_demo_argument\");\n}\n\nset_analyst_name(){\n    console.log(\"set_analyst_name\");\n}\n\nset_analyst_email(){\n    console.log(\"set_analyst_email\");\n}\n\ndownload_sadface(){\n    console.log(\"download_sadface\")\n}\n\ndownload_png(){\n    console.log(\"download_png\");\n}\n\ndownload_jpg(){\n    console.log(\"download_jpg\");\n}\n\n\n \n  render(){\n\n    return (\n    \t<div>\n        \n\n        <Modal\n            modalProps = {this.newResourceModal}  \n            onClick = {this.test}               \n         />\n      \n\t    \t \n      \n    \t<SlideIn \n            toggleResourcePane={this.toggleResourcePane}\n            mp_reset={this.mp_reset}\n            load_demo_argument={this.load_demo_argument}\n            set_analyst_name={this.set_analyst_name}\n            set_analyst_email={this.set_analyst_email}\n            download_sadface={this.download_sadface}\n            download_png={this.download_png}\n            download_jpg={this.download_jpg}\n            fileManager={this.fileManager}\n\n        />\n\n\t\t\t<MainUI\n\t\t\t   toggleSlideIn={() => this.toggleButton()}\n\t\t\t   addTab = {() => this.add_tab()}\n\t\t\t   tabs = {this.state.tabs}\n               remove_tab={this.remove_tab}\n               fileManager={this.fileManager}\n               showResourcePane={this.state.showResourcePane}\n               activeTab={this.state.activeTab}\n               \n\n\n\t\t\t/>\n \n   </div>\n\n      );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}