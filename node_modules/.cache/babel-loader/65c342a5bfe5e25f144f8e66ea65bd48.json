{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/ResourcePane.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons';\nimport Modal from './Modal';\nimport Button from './MyButton';\n\nclass ResourcePane extends Component {\n  constructor(props) {\n    super(props);\n    this.newResourceModal = {\n      trigger: {\n        triggerText: React.createElement(FontAwesomeIcon, {\n          icon: faPlusSquare,\n          size: \"lg\",\n          color: \"#cbc5c1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }),\n        className: 'add_tab_button'\n      },\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add',\n        action: 'add_tab()'\n      }\n    };\n    this.state = {\n      current_tab: 0,\n      last_number: 1,\n      tabs: []\n    };\n    this.add_tab = this.add_tab.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n  }\n  /* New Resource Pane Type Selection Modal */\n\n\n  add_tab(load_id = null) {\n    if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      tab_id = new_resource.id;\n      add_resource_metadata(tab_id, 'title', '');\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    } else {\n      var tab_id = load_id;\n    }\n\n    add_resource_header();\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n\n    if (resource_type_txt.toLowerCase() === \"text\") {\n      add_text_resource_body(tab_id);\n    }\n\n    set_active_tab(tab_id + \"_body\");\n    return tab_id;\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = new_resource(content);\n      sd.resources.push(res);\n      return res;\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"resource-pane\",\n      id: \"resource-pane\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"resource_pane_tab_head\",\n      id: \"resource_pane_tab_head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tab_body\",\n      id: \"tab_body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ResourcePane;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/ResourcePane.js"],"names":["React","Component","FontAwesomeIcon","faPlusSquare","Modal","Button","ResourcePane","constructor","props","newResourceModal","trigger","triggerText","className","title","content","footer","value","action","state","current_tab","last_number","tabs","add_tab","bind","add_resource","load_id","new_resource","tab_id","id","add_resource_metadata","localStorage","setItem","JSON","stringify","get_sd","add_resource_header","resource_type_idx","document","getElementById","options","selectedIndex","resource_type_txt","text","toLowerCase","add_text_resource_body","set_active_tab","res","sd","resources","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,YAAT,QAA6B,mCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,YAAnB;;AAIA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AACnCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAiBlBC,gBAjBkB,GAiBC;AACjBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,oBAAC,eAAD;AAAiB,UAAA,IAAI,EAAER,YAAvB;AAAqC,UAAA,IAAI,EAAC,IAA1C;AAA+C,UAAA,KAAK,EAAC,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAEPS,QAAAA,SAAS,EAAE;AAFJ,OADQ;AAMjBC,MAAAA,KAAK,EAAE,mBANU;AAOjBC,MAAAA,OAAO,EAAG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADF,EAEE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,EAAE,EAAC,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CAFF,CAPO;AAajBC,MAAAA,MAAM,EAAE;AACNH,QAAAA,SAAS,EAAE,iBADL;AAENI,QAAAA,KAAK,EAAE,KAFD;AAGNC,QAAAA,MAAM,EAAE;AAHF;AAbS,KAjBD;AAGhB,SAAKC,KAAL,GAAY;AACVC,MAAAA,WAAW,EAAE,CADH;AAEVC,MAAAA,WAAW,EAAE,CAFH;AAGVC,MAAAA,IAAI,EAAE;AAHI,KAAZ;AAKC,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACD,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AAED;AAIG;;;AAuBHD,EAAAA,OAAO,CAACG,OAAO,GAAC,IAAT,EAAe;AACvB,QAAIA,OAAO,IAAI,IAAf,EAAqB;AACjB,UAAIC,YAAY,GAAG,KAAKF,YAAL,CAAkB,GAAlB,CAAnB;AACAG,MAAAA,MAAM,GAAGD,YAAY,CAACE,EAAtB;AACAC,MAAAA,qBAAqB,CAACF,MAAD,EAAS,OAAT,EAAkB,EAAlB,CAArB;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeC,MAAM,EAArB,CAA7B;AACH,KALD,MAMO;AAAE,UAAIP,MAAM,GAAGF,OAAb;AAAuB;;AAE9BU,IAAAA,mBAAmB;AAEnB,QAAIC,iBAAiB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,OAAzC,CAAiDC,aAAzE;AACA,QAAIC,iBAAiB,GAAGJ,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAAyCC,OAAzC,CAAiDH,iBAAjD,EAAoEM,IAA5F;;AACA,QAAID,iBAAiB,CAACE,WAAlB,OAAoC,MAAxC,EAAgD;AAAEC,MAAAA,sBAAsB,CAACjB,MAAD,CAAtB;AAAiC;;AAEnFkB,IAAAA,cAAc,CAAClB,MAAM,GAAC,OAAR,CAAd;AACA,WAAOA,MAAP;AACH;;AAEAH,EAAAA,YAAY,CAACV,OAAD,EAAU;AACnB;;;;;AAMA,QAAIA,OAAJ,EAAa;AACT,UAAIgC,GAAG,GAAGpB,YAAY,CAACZ,OAAD,CAAtB;AACAiC,MAAAA,EAAE,CAACC,SAAH,CAAaC,IAAb,CAAkBH,GAAlB;AACA,aAAOA,GAAP;AACH;AACJ;;AAECI,EAAAA,MAAM,GAAE;AAGN,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,EAAE,EAAC,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACU;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAwC,MAAA,EAAE,EAAC,wBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,UAAU,EAAE,KAAKzC,gBADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADV,EAMU;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,EAAE,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANV,CADF;AAWD;;AAtFkC;;AAyFrC,eAAeH,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusSquare } from '@fortawesome/free-solid-svg-icons'\nimport Modal from './Modal';\nimport Button from './MyButton';\n\n\n\nclass ResourcePane extends Component {\n  constructor(props){\n    super(props);\n\n    this.state ={\n      current_tab: 0,\n      last_number: 1,\n      tabs: []\n    }\n     this.add_tab = this.add_tab.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n\n  }\n\n\n\n      /* New Resource Pane Type Selection Modal */\n\n  newResourceModal = {\n    trigger: {\n      triggerText: <FontAwesomeIcon icon={faPlusSquare} size=\"lg\" color=\"#cbc5c1\"/>,\n      className: 'add_tab_button',\n    },\n    \n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n      action: 'add_tab()' \n    }\n\n  };\n\n   add_tab(load_id=null) {\n  if (load_id == null) {\n      var new_resource = this.add_resource(' ');\n      tab_id = new_resource.id;\n      add_resource_metadata(tab_id, 'title', '');\n      localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n  } \n    else { var tab_id = load_id; }\n\n    add_resource_header();\n\n    var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    if (resource_type_txt.toLowerCase() === \"text\") { add_text_resource_body(tab_id); }\n\n    set_active_tab(tab_id+\"_body\");\n    return tab_id\n}\n\n add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = new_resource(content);\n        sd.resources.push(res);\n        return res;\n    }\n}\n\n  render(){\n    \n\n    return (\n      <div className=\"resource-pane\" id=\"resource-pane\">\n                <div className=\"resource_pane_tab_head\" id=\"resource_pane_tab_head\">\n                  <Modal\n                    modalProps={this.newResourceModal}\n                 /> \n                </div>\n                <div className=\"tab_body\" id=\"tab_body\"></div>        \n            </div>\n      \n      );\n  }\n}\n\nexport default ResourcePane;"]},"metadata":{},"sourceType":"module"}