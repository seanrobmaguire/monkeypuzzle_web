{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/Modal.js\";\nimport React, { Component } from 'react';\nimport ModalContent from './ModalContent';\nimport ModalTrigger from './ModalTrigger';\nexport class Modal extends Component {\n  constructor() {\n    super();\n\n    this.showModal = () => {\n      this.setState({\n        isShown: true\n      }, () => {\n        this.closeButton.focus();\n      });\n      this.toggleScrollLock();\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        isShown: false\n      });\n      this.TriggerButton.focus();\n      this.toggleScrollLock();\n    };\n\n    this.onKeyDown = event => {\n      if (event.keyCode === 27) {\n        this.closeModal();\n      }\n    };\n\n    this.onClickOutside = event => {\n      if (this.modal && this.modal.contains(event.target)) return;\n      this.closeModal();\n    };\n\n    this.toggleScrollLock = () => {\n      document.querySelector('html').classList.toggle('scroll-lock');\n    };\n\n    this.actionAndClose = () => {\n      {\n        this.closeModal();\n      }\n      ;\n      this.props.onClick();\n    };\n\n    this.state = {\n      isShown: false\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(ModalTrigger, {\n      showModal: this.showModal,\n      buttonRef: n => this.TriggerButton = n,\n      triggerText: this.props.modalProps.trigger.triggerText,\n      className: this.props.modalProps.trigger.className,\n      id: this.props.modalProps.trigger.triggerId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), this.state.isShown ? React.createElement(ModalContent, {\n      modalRef: n => this.modal = n,\n      buttonRef: n => this.closeButton = n,\n      closeModal: this.closeModal,\n      modalTitle: this.props.modalProps.modalTitle,\n      content: this.props.modalProps,\n      onKeyDown: this.onKeyDown,\n      onClickOutside: this.onClickOutside,\n      onClick: this.actionAndClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }));\n  }\n\n}\nexport default Modal;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/Components/Modal.js"],"names":["React","Component","ModalContent","ModalTrigger","Modal","constructor","showModal","setState","isShown","closeButton","focus","toggleScrollLock","closeModal","TriggerButton","onKeyDown","event","keyCode","onClickOutside","modal","contains","target","document","querySelector","classList","toggle","actionAndClose","props","onClick","state","render","n","modalProps","trigger","triggerText","className","triggerId","modalTitle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACnCI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAMdC,SANc,GAMF,MAAM;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd,EAAiC,MAAM;AACrC,aAAKC,WAAL,CAAiBC,KAAjB;AACD,OAFD;AAGA,WAAKC,gBAAL;AACD,KAXa;;AAAA,SAYdC,UAZc,GAYD,MAAM;AACjB,WAAKL,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,WAAKK,aAAL,CAAmBH,KAAnB;AACA,WAAKC,gBAAL;AACD,KAhBa;;AAAA,SAiBdG,SAjBc,GAiBFC,KAAK,IAAI;AACnB,UAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AACxB,aAAKJ,UAAL;AACD;AACF,KArBa;;AAAA,SAsBdK,cAtBc,GAsBGF,KAAK,IAAI;AACxB,UAAI,KAAKG,KAAL,IAAc,KAAKA,KAAL,CAAWC,QAAX,CAAoBJ,KAAK,CAACK,MAA1B,CAAlB,EAAqD;AACrD,WAAKR,UAAL;AACD,KAzBa;;AAAA,SA2BdD,gBA3Bc,GA2BK,MAAM;AACvBU,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,SAA/B,CAAyCC,MAAzC,CAAgD,aAAhD;AACD,KA7Ba;;AAAA,SA+BdC,cA/Bc,GA+BG,MAAM;AACrB;AAAC,aAAKb,UAAL;AAAkB;AAAA;AACnB,WAAKc,KAAL,CAAWC,OAAX;AACD,KAlCa;;AAEZ,SAAKC,KAAL,GAAa;AACXpB,MAAAA,OAAO,EAAE;AADE,KAAb;AAGD;;AA8BDqB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAE,KAAKvB,SADlB;AAEE,MAAA,SAAS,EAAEwB,CAAC,IAAK,KAAKjB,aAAL,GAAqBiB,CAFxC;AAGE,MAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWK,UAAX,CAAsBC,OAAtB,CAA8BC,WAH7C;AAIE,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWK,UAAX,CAAsBC,OAAtB,CAA8BE,SAJ3C;AAKE,MAAA,EAAE,EAAE,KAAKR,KAAL,CAAWK,UAAX,CAAsBC,OAAtB,CAA8BG,SALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQG,KAAKP,KAAL,CAAWpB,OAAX,GACC,oBAAC,YAAD;AACE,MAAA,QAAQ,EAAEsB,CAAC,IAAK,KAAKZ,KAAL,GAAaY,CAD/B;AAEE,MAAA,SAAS,EAAEA,CAAC,IAAK,KAAKrB,WAAL,GAAmBqB,CAFtC;AAGE,MAAA,UAAU,EAAE,KAAKlB,UAHnB;AAIE,MAAA,UAAU,EAAE,KAAKc,KAAL,CAAWK,UAAX,CAAsBK,UAJpC;AAKE,MAAA,OAAO,EAAE,KAAKV,KAAL,CAAWK,UALtB;AAME,MAAA,SAAS,EAAE,KAAKjB,SANlB;AAOE,MAAA,cAAc,EAAE,KAAKG,cAPvB;AAQE,MAAA,OAAO,EAAE,KAAKQ,cARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAYC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CADF;AAyBD;;AA9DkC;AAiErC,eAAerB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport ModalContent from './ModalContent';\nimport ModalTrigger from './ModalTrigger';\nexport class Modal extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isShown: false\n    };\n  }\n  showModal = () => {\n    this.setState({ isShown: true }, () => {\n      this.closeButton.focus();\n    });\n    this.toggleScrollLock();\n  };\n  closeModal = () => {\n    this.setState({ isShown: false });\n    this.TriggerButton.focus();\n    this.toggleScrollLock();\n  };\n  onKeyDown = event => {\n    if (event.keyCode === 27) {\n      this.closeModal();\n    }\n  };\n  onClickOutside = event => {\n    if (this.modal && this.modal.contains(event.target)) return;\n    this.closeModal();\n  };\n\n  toggleScrollLock = () => {\n    document.querySelector('html').classList.toggle('scroll-lock');\n  };\n\n  actionAndClose = () => {\n    {this.closeModal()};\n    this.props.onClick()\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <ModalTrigger\n          showModal={this.showModal}\n          buttonRef={n => (this.TriggerButton = n)}\n          triggerText={this.props.modalProps.trigger.triggerText}\n          className={this.props.modalProps.trigger.className}\n          id={this.props.modalProps.trigger.triggerId}\n        />\n        {this.state.isShown ? (\n          <ModalContent\n            modalRef={n => (this.modal = n)}\n            buttonRef={n => (this.closeButton = n)}\n            closeModal={this.closeModal}\n            modalTitle={this.props.modalProps.modalTitle}\n            content={this.props.modalProps}\n            onKeyDown={this.onKeyDown}\n            onClickOutside={this.onClickOutside}\n            onClick={this.actionAndClose}\n          />\n        ) : (\n          <React.Fragment />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}