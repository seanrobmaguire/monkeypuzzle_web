{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/Components/Cytoscape.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport contextMenus from 'cytoscape-context-menus';\nimport $ from 'jquery';\nimport { sd, add_scheme, add_edge, get_atom, now, new_uuid, update_atom_text, get_sd, delete_edge, update, add_source } from '../lib/Sadface';\nimport Modal from './Modal';\ncytoscape.use(edgehandles);\ncytoscape.use(contextMenus, $);\nvar cy = null;\nvar cm = null;\nvar selected = [];\nvar position = null;\nvar layout = null;\nvar running = false;\nvar cy_data = {};\nvar json;\nvar created_date = now();\nvar edited_date = now();\nvar analyst_email = \"Default Analyst Email\";\nvar analyst_name = \"Default Analsyst Name\";\nvar document_id = new_uuid();\nvar default_sadface_doc = \"{\\\"analyst_email\\\":\\\"\" + analyst_email + \"\\\",\\\"analyst_name\\\":\\\"\" + analyst_email + \"\\\",\\\"created\\\":\\\"\" + created_date + \"\\\",\\\"edges\\\":[],\\\"edited\\\":\\\"\" + edited_date + \"\\\",\\\"id\\\":\\\"\" + document_id + \"\\\",\\\"metadata\\\":{},\\\"nodes\\\":[],\\\"resources\\\": []}\";\nvar current_sadface_doc = null;\nvar focused = null;\nvar undo_stack = [];\nvar redo_stack = [];\nvar edit_atom = null;\nvar resource_pane_viewable_state = true;\n\nclass Cytoscape extends Component {\n  constructor(props) {\n    super(props);\n    this.initCytoscape = this.initCytoscape.bind(this);\n    this.build_cola_layout = this.build_cola_layout.bind(this);\n    this.edit_atom_content = this.edit_atom_content.bind(this);\n    this.delete_nodes = this.delete_nodes.bind(this);\n    this.update_local_storage = this.update_local_storage.bind(this);\n    this.redraw_visualisation = this.redraw_visualisation.bind(this);\n    this.undo = this.undo.bind(this);\n    this.redo = this.redo.bind(this);\n    this.merge_nodes = this.merge_nodes.bind(this);\n    this.delete_atom = this.delete_atom.bind(this); //    this.dragover_handler = this.dragover_handler.bind(this);\n  }\n\n  initCytoscape() {\n    console.log(\"test\");\n    cy = cytoscape({\n      container: document.getElementById('cy'),\n      elements: {\n        //   edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"\n        //  nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n        nodes: [{\n          data: {\n            id: 'a1',\n            metatdata: {},\n            sources: [],\n            text: 'Every person is going to die',\n            type: \"atom\"\n          }\n        }, {\n          data: {\n            id: 'bird'\n          }\n        }, {\n          data: {\n            id: 'ladybug'\n          }\n        }, {\n          data: {\n            id: 'aphid'\n          }\n        }, {\n          data: {\n            id: 'rose'\n          }\n        }, {\n          data: {\n            id: 'grasshopper'\n          }\n        }, {\n          data: {\n            id: 'plant'\n          }\n        }, {\n          data: {\n            id: 'wheat'\n          }\n        }],\n        edges: [{\n          data: {\n            source: 'a1',\n            target: 'bird'\n          }\n        }, {\n          data: {\n            source: 'bird',\n            target: 'ladybug'\n          }\n        }, {\n          data: {\n            source: 'bird',\n            target: 'grasshopper'\n          }\n        }, {\n          data: {\n            source: 'grasshopper',\n            target: 'plant'\n          }\n        }, {\n          data: {\n            source: 'grasshopper',\n            target: 'wheat'\n          }\n        }, {\n          data: {\n            source: 'ladybug',\n            target: 'aphid'\n          }\n        }, {\n          data: {\n            source: 'aphid',\n            target: 'rose'\n          }\n        }]\n      },\n      style: [{\n        selector: \"node\",\n        style: {\n          \"label\": \"data(id)\",\n          \"text-opacity\": 0.7,\n          \"width\": \"auto\",\n          \"height\": \"auto\",\n          \"text-valign\": \"bottom\",\n          \"text-halign\": \"right\",\n          \"text-outline-color\": \"#eee\",\n          \"text-outline-width\": 1\n        }\n      }, {\n        selector: \"[typeshape]\",\n        style: {\n          \"shape\": \"data(typeshape)\"\n        }\n      }, {\n        selector: \"node[typeshape='diamond']\",\n        style: {\n          'background-color': '#CC9900'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Conflict']\",\n        style: {\n          'background-color': 'red'\n        }\n      }, {\n        selector: \"node[typeshape='diamond'][content='Support']\",\n        style: {\n          'background-color': 'green'\n        }\n      }, {\n        selector: \"edge\",\n        style: {\n          \"line-color\": \"#9dbaea\",\n          \"target-arrow-shape\": \"triangle\",\n          \"target-arrow-color\": \"#9dbaea\",\n          \"curve-style\": \"bezier\"\n        }\n      }, {\n        selector: \":selected\",\n        style: {\n          \"border-width\": \"1\",\n          \"border-color\": \"black\",\n          \"background-color\": \"#3399CC\"\n        }\n      }, {\n        selector: \".atom-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }, {\n        selector: \".scheme-label\",\n        style: {\n          \"text-wrap\": \"wrap\",\n          \"text-max-width\": 160\n        }\n      }],\n      boxSelectionEnabled: false,\n      autounselectify: false,\n      selectionType: \"single\",\n      minZoom: 0.1,\n      maxZoom: 1.5\n    });\n    layout = this.build_cola_layout();\n    layout.run();\n    cy.edgehandles({\n      toggleOffOnLeave: true,\n      handleNodes: \"node\",\n      handleSize: 10,\n      handleColor: \"orange\",\n      handleHitThreshold: 8,\n      handleLineWidth: 5,\n      //handleLineType: \"flat\",\n      handleOutlineColor: \"pink\",\n      edgeType: function () {\n        return \"flat\";\n      },\n      complete: function (event, sourceNode, targetNode, addedEles) {\n        if (targetNode.length !== 0) {\n          var source_id = targetNode[0].source().id();\n          var target_id = targetNode[0].target().id(); //get the mid point between source node and target node\n\n          var source_position = targetNode[0].source().position();\n          var target_position = targetNode[0].target().position();\n          position = {};\n          position.x = (source_position.x + target_position.x) / 2;\n          position.y = (source_position.y + target_position.y) / 2;\n\n          if (targetNode[0].source().data().type == \"atom\" && targetNode[0].target().data().type == \"atom\") {\n            var scheme = add_scheme(\"Support\");\n            var scheme_id = scheme.id;\n            var scheme_content = scheme.name; //remove the automatically generated edge\n\n            targetNode.remove();\n            cy.add([{\n              group: \"nodes\",\n              data: {\n                id: scheme_id.toString(),\n                content: scheme_content,\n                typeshape: \"diamond\"\n              },\n              classes: \"scheme-label\",\n              locked: false,\n              position: position\n            }]);\n            var edge1 = add_edge(source_id, scheme_id);\n            var edge2 = add_edge(scheme_id, target_id);\n            cy.add([{\n              group: \"edges\",\n              data: {\n                id: edge1.id.toString(),\n                source: source_id,\n                target: scheme_id\n              }\n            }, {\n              group: \"edges\",\n              data: {\n                id: edge2.id.toString(),\n                source: scheme_id,\n                target: target_id\n              }\n            }]);\n          } else {\n            targetNode.remove();\n            var edge = add_edge(source_id, target_id);\n            cy.add([{\n              group: \"edges\",\n              data: {\n                id: edge.id.toString(),\n                source: source_id,\n                target: target_id\n              }\n            }]);\n          }\n\n          this.update_local_storage();\n        } else {\n          targetNode.remove();\n        }\n      }\n    });\n    /*\n     *\n     * Set up context menus\n     *\n     * */\n\n    cm = cy.contextMenus({\n      menuItems: [{\n        id: \"edit-content\",\n        title: \"edit content\",\n        selector: \"node[type = \\\"atom\\\"]\",\n        onClickFunction: function (event) {\n          var target = event.target || event.cyTarget; //    $(\"#editContentModal\").modal(\"show\");\n          //  $(\"#edit_atom_content\").val(target.data().content);\n\n          this.edit_atom = target;\n        },\n        hasTrailingDivider: false\n      }, {\n        id: \"edit-metadata\",\n        title: \"edit metadata\",\n        selector: \"node[type = \\\"atom\\\"]\",\n        onClickFunction: function (event) {\n          //  $(\"#edit_metadata\").empty();\n          var target = event.target || event.cyTarget;\n          var atom = get_atom(target.id()); //  var textArea = $(\"<textarea id=\\\"\"+target.id()+\"_metadata\\\" class=\\\"form-control\\\" rows=\\\"2\\\" >\"+JSON.stringify(atom.metadata)+\"</textarea>\");\n          //   $(\"#edit_metadata\").append(textArea);\n          //   $(\"#editMetadataModal\").modal(\"show\");\n\n          edit_atom = target;\n        },\n        hasTrailingDivider: true\n      }, {\n        id: \"change-scheme\",\n        title: \"change scheme\",\n        selector: \"node[typeshape = \\\"diamond\\\"]\",\n        onClickFunction: function (event) {\n          var target = event.target || event.cyTarget; //                $(\"#editSchemeModal\").modal(\"show\");\n\n          edit_atom = target;\n        },\n        hasTrailingDivider: true\n      }, {\n        id: \"remove\",\n        title: \"remove\",\n        selector: \"node, edge\",\n        onClickFunction: function (event) {\n          var target = event.target || event.cyTarget;\n\n          if (selected.length !== 0) {\n            selected.forEach(function (node) {\n              this.delete_nodes(node);\n            });\n            selected = [];\n          } else {\n            if (target.data().type == \"atom\") {\n              this.delete_nodes(event);\n              target.remove();\n            } else if (target.data().typeshape == \"diamond\") {\n              this.delete_nodes(event);\n              target.remove();\n            } else {\n              this.delete_edge(target.id());\n              this.update_local_storage();\n              target.remove();\n            }\n          }\n        },\n        hasTrailingDivider: true\n      }, {\n        id: \"add-atom\",\n        title: \"add atom\",\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          position = event.renderedPosition; //                $(\"#newAtomModal\").modal(\"show\");\n        }\n      }, {\n        id: \"add-scheme\",\n        title: \"add scheme\",\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          position = event.position || event.cyPosition;\n          document.getElementById(\"sel1\").options.selectedIndex = 0; //                $(\"#newSchemeModal\").modal(\"show\");\n        },\n        hasTrailingDivider: true\n      }, {\n        id: \"redraw\",\n        title: \"redraw\",\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.redraw_visualisation();\n        },\n        hasTrailingDivider: true\n      }, {\n        id: \"undo\",\n        title: \"undo\",\n        selector: \"node, edge\",\n        show: false,\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.undo();\n        },\n        hasTrailingDivider: false\n      }, {\n        id: \"redo\",\n        title: \"redo\",\n        selector: \"node, edge\",\n        show: false,\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.redo();\n\n          if (redo_stack == []) {\n            cm.hideMenuItem(\"redo\");\n          }\n        },\n        hasTrailingDivider: true\n      }, {\n        id: \"merge_nodes\",\n        title: \"merge nodes\",\n        selector: \"node\",\n        show: false,\n        coreAsWell: true,\n        onClickFunction: function (event) {\n          this.merge_nodes();\n        }\n      }]\n    });\n  }\n\n  build_cola_layout(opts) {\n    var cola_params = {\n      name: \"cola\",\n      animate: true,\n      randomize: true,\n      padding: 100,\n      fit: false,\n      maxSimulationTime: 1500\n    };\n    var i = 0;\n\n    if (opts !== undefined) {\n      opts.forEach(function (opt) {\n        cola_params[i] = opts[i];\n        ++i;\n      });\n    }\n\n    return cy.makeLayout(cola_params);\n  }\n\n  edit_atom_content() {\n    var content = document.getElementById(\"edit_atom_content\").value;\n    var atom = cy.$(\"#\" + edit_atom.id());\n    update_atom_text(edit_atom.id(), content);\n    this.update_local_storage();\n    atom.data(\"content\", content);\n    edit_atom = null;\n  }\n\n  delete_nodes(event) {\n    var target = event.target || event.cyTarget;\n    var id = target.id(); //removed = target.remove();\n\n    this.delete_atom(id);\n    var i = 0;\n    var sds = get_sd();\n    var edges = sds.edges;\n    edges.forEach(function (edge) {\n      if (edges[i] !== undefined) {\n        if (edges[i].source_id === id || edges[i].target_id === id) {\n          delete_edge(edges[i].id);\n        }\n\n        ++i;\n      }\n    });\n    this.update_local_storage();\n  }\n\n  update_local_storage() {\n    var undo_item = JSON.parse(current_sadface_doc);\n    undo_stack.push(undo_item);\n    redo_stack = [];\n    cm.showMenuItem(\"undo\");\n    cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    current_sadface_doc = JSON.stringify(get_sd());\n    update();\n  }\n\n  redraw_visualisation() {\n    layout.stop();\n    layout.options.eles = cy.elements();\n    layout.run();\n    cy.center();\n    cy.resize();\n  }\n\n  undo() {\n    if (undo_stack.length != 0) {\n      var redo_item = get_sd();\n      redo_stack.push(redo_item);\n      var state = undo_stack.pop();\n      this.loadJSON(JSON.stringify(state));\n\n      if (undo_stack.length == 0) {\n        cm.hideMenuItem(\"undo\");\n      }\n\n      cm.showMenuItem(\"redo\");\n    }\n  }\n\n  redo() {\n    if (redo_stack.length != 0) {\n      var undo_item = get_sd();\n      undo_stack.push(undo_item);\n      var state = redo_stack.pop();\n      this.loadJSON(JSON.stringify(state));\n\n      if (redo_stack.length == 0) {\n        cm.hideMenuItem(\"redo\");\n      }\n\n      cm.showMenuItem(\"undo\");\n    }\n  }\n\n  merge_nodes() {\n    //From all currently selected nodes, set first in selected to the base node, move all sources and edges related to each other node in selected to base node\n    var target;\n    var id;\n    var atom;\n    var baseNode = selected[0].target || selected[0].cyTarget;\n    var baseId = baseNode.id();\n    var baseAtom = get_atom(baseId);\n    var edge;\n\n    if (baseAtom.type == \"atom\") {\n      var sds = get_sd();\n      var i = 0;\n      selected.forEach(function (node) {\n        var j = 0;\n\n        if (i > 0) {\n          target = selected[i].target || selected[i].cyTarget;\n          id = target.id();\n          atom = get_atom(id);\n\n          if (atom.type == \"atom\") {\n            atom.sources.forEach(function (source) {\n              add_source(baseId, atom.sources[j].resource_id, atom.sources[j].text, atom.sources[j].offset, atom.sources[j].length);\n              ++j;\n            });\n            j = 0;\n            sds.edges.forEach(function (edge) {\n              if (sds.edges[j].source_id == id) {\n                edge = add_edge(baseId, sds.edges[j].target_id);\n                cy.add([{\n                  group: \"edges\",\n                  data: {\n                    id: edge.id.toString(),\n                    source: baseId,\n                    target: sds.edges[j].target_id\n                  }\n                }]);\n              }\n\n              if (sds.edges[j].target_id == id) {\n                edge = add_edge(sds.edges[j].source_id, baseId);\n                cy.add([{\n                  group: \"edges\",\n                  data: {\n                    id: edge.id.toString(),\n                    source: sds.edges[j].source_id,\n                    target: baseId\n                  }\n                }]);\n              }\n\n              ++j;\n            });\n            this.delete_nodes(selected[i]);\n          } else {\n            alert(\"cannot merge scheme nodes\");\n          }\n        }\n\n        ++i;\n      });\n      selected = [];\n      cm.hideMenuItem(\"merge_nodes\");\n    } else {\n      alert(\"cannot merge scheme nodes\");\n    }\n  }\n\n  delete_atom(atom_id) {\n    /*\n    Remove the atom from the sadface document identified by the\n    supplied atom ID\n    */\n    if (atom_id) {\n      var atom = get_atom(atom_id);\n\n      if (atom !== null && atom !== undefined) {\n        var size = Object.keys(sd.nodes).length;\n\n        for (var i = 0; i < size; ++i) {\n          if (sd.nodes[i].id === atom.id) {\n            delete sd.nodes[i]; //                    sd.nodes = remove_falsy(sd.nodes);\n\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.initCytoscape();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"cy\",\n      style: {\n        height: '600px',\n        width: '600px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Cytoscape;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/Components/Cytoscape.js"],"names":["React","Component","ReactDOM","cytoscape","edgehandles","contextMenus","$","sd","add_scheme","add_edge","get_atom","now","new_uuid","update_atom_text","get_sd","delete_edge","update","add_source","Modal","use","cy","cm","selected","position","layout","running","cy_data","json","created_date","edited_date","analyst_email","analyst_name","document_id","default_sadface_doc","current_sadface_doc","focused","undo_stack","redo_stack","edit_atom","resource_pane_viewable_state","Cytoscape","constructor","props","initCytoscape","bind","build_cola_layout","edit_atom_content","delete_nodes","update_local_storage","redraw_visualisation","undo","redo","merge_nodes","delete_atom","console","log","container","document","getElementById","elements","nodes","data","id","metatdata","sources","text","type","edges","source","target","style","selector","boxSelectionEnabled","autounselectify","selectionType","minZoom","maxZoom","run","toggleOffOnLeave","handleNodes","handleSize","handleColor","handleHitThreshold","handleLineWidth","handleOutlineColor","edgeType","complete","event","sourceNode","targetNode","addedEles","length","source_id","target_id","source_position","target_position","x","y","scheme","scheme_id","scheme_content","name","remove","add","group","toString","content","typeshape","classes","locked","edge1","edge2","edge","menuItems","title","onClickFunction","cyTarget","hasTrailingDivider","atom","forEach","node","coreAsWell","renderedPosition","cyPosition","options","selectedIndex","show","hideMenuItem","opts","cola_params","animate","randomize","padding","fit","maxSimulationTime","i","undefined","opt","makeLayout","value","sds","undo_item","JSON","parse","push","showMenuItem","localStorage","setItem","stringify","stop","eles","center","resize","redo_item","state","pop","loadJSON","baseNode","baseId","baseAtom","j","resource_id","offset","alert","atom_id","size","Object","keys","componentDidMount","render","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport cytoscape from 'cytoscape';\nimport edgehandles from 'cytoscape-edgehandles';\nimport contextMenus from 'cytoscape-context-menus';\nimport $ from 'jquery';\n\n\nimport {sd,add_scheme, add_edge, get_atom, now, new_uuid, update_atom_text, get_sd, delete_edge, update, add_source} from '../lib/Sadface'; \n\nimport Modal from  './Modal';\n\ncytoscape.use( edgehandles );\ncytoscape.use(contextMenus, $);\n\n\n\n\nvar cy = null;\nvar cm = null;\nvar selected = [];\nvar position = null;\nvar layout = null;\nvar running = false;\nvar cy_data  = {};\nvar json;\nvar created_date = now();\nvar edited_date = now();\nvar analyst_email = \"Default Analyst Email\";\nvar analyst_name = \"Default Analsyst Name\";\nvar document_id = new_uuid();\nvar default_sadface_doc = \"{\\\"analyst_email\\\":\\\"\"+analyst_email+\"\\\",\\\"analyst_name\\\":\\\"\"+analyst_email+\"\\\",\\\"created\\\":\\\"\"+created_date+\"\\\",\\\"edges\\\":[],\\\"edited\\\":\\\"\"+edited_date+\"\\\",\\\"id\\\":\\\"\"+document_id+\"\\\",\\\"metadata\\\":{},\\\"nodes\\\":[],\\\"resources\\\": []}\";\nvar current_sadface_doc = null;\nvar focused = null;\nvar undo_stack = [];\nvar redo_stack = [];\nvar edit_atom = null;\nvar resource_pane_viewable_state = true;\n\n\nclass Cytoscape extends Component {\n  constructor(props){\n    super(props);\n    this.initCytoscape = this.initCytoscape.bind(this);\n    this.build_cola_layout = this.build_cola_layout.bind(this);\n    this.edit_atom_content = this.edit_atom_content.bind(this);\n    this. delete_nodes =this.delete_nodes.bind(this);\n    this.update_local_storage = this.update_local_storage.bind(this);\n    this.redraw_visualisation = this.redraw_visualisation.bind(this);\n    this.undo = this.undo.bind(this);\n    this.redo = this.redo.bind(this);\n    this.merge_nodes = this.merge_nodes.bind(this);\n    this.delete_atom =this.delete_atom.bind(this);\n//    this.dragover_handler = this.dragover_handler.bind(this);\n  }\n\n  initCytoscape(){\n\t\tconsole.log(\"test\");\n  \t\tcy = cytoscape({\n  \t\tcontainer: document.getElementById('cy'),\n  \t\t elements: {\n\n\n  \t\t \t//   edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"\n  \t\t \t //  nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n                nodes: [\n                    { data: { id: 'a1', metatdata:{}, sources:[], text:'Every person is going to die', type:\"atom\"} },\n                    { data: { id: 'bird' } },\n                    { data: { id: 'ladybug' } },\n                    { data: { id: 'aphid' } },\n                    { data: { id: 'rose' } },\n                    { data: { id: 'grasshopper' } },\n                    { data: { id: 'plant' } },\n                    { data: { id: 'wheat' } }\n                ],\n                edges: [\n                    { data: { source: 'a1', target: 'bird' } },\n                    { data: { source: 'bird', target: 'ladybug' } },\n                    { data: { source: 'bird', target: 'grasshopper' } },\n                    { data: { source: 'grasshopper', target: 'plant' } },\n                    { data: { source: 'grasshopper', target: 'wheat' } },\n                    { data: { source: 'ladybug', target: 'aphid' } },\n                    { data: { source: 'aphid', target: 'rose' } }\n                ]\n            },\n\n        style:[\n            {   selector: \"node\", \n                style: {\n                    \"label\": \"data(id)\",\n                    \"text-opacity\": 0.7,\n                    \"width\" : \"auto\",\n                    \"height\" : \"auto\",\n                    \"text-valign\": \"bottom\",\n                    \"text-halign\": \"right\",\n                    \"text-outline-color\": \"#eee\",\n                    \"text-outline-width\": 1\n              }\n            },\n            {   selector: \"[typeshape]\", \n                style: {\n                    \"shape\":\"data(typeshape)\"\n                }\n            },\n            {   selector: \"node[typeshape='diamond']\", \n                style: {\n                    'background-color': '#CC9900'\n                }\n            },\n            {\n                selector: \"node[typeshape='diamond'][content='Conflict']\",\n                style: {\n                    'background-color': 'red'\n                }\n            },\n            {\n                selector: \"node[typeshape='diamond'][content='Support']\",\n                style: {\n                    'background-color': 'green'\n                }\n            },\n            {   selector: \"edge\", \n                style: {\n                    \"line-color\": \"#9dbaea\",\n                    \"target-arrow-shape\": \"triangle\",\n                    \"target-arrow-color\": \"#9dbaea\",\n                    \"curve-style\": \"bezier\"\n                }\n            },\n            {   selector: \":selected\", \n                style: {\n                    \"border-width\":\"1\",\n                    \"border-color\":\"black\",\n                    \"background-color\": \"#3399CC\"\n                }\n            },\n            {   selector: \".atom-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            },\n            {   selector: \".scheme-label\", \n                style:{\n                    \"text-wrap\": \"wrap\",\n                    \"text-max-width\": 160\n                }\n            }\n            ],\n            boxSelectionEnabled: false,\n            autounselectify: false,\n            selectionType: \"single\",\n            minZoom: 0.1,\n            maxZoom: 1.5\n                \n    });\n\n  \tlayout = this.build_cola_layout();\n    layout.run();\n\n    cy.edgehandles({\n        toggleOffOnLeave: true,\n        handleNodes: \"node\",\n        handleSize: 10,\n        handleColor: \"orange\",\n        handleHitThreshold: 8,\n        handleLineWidth: 5,\n        //handleLineType: \"flat\",\n        handleOutlineColor: \"pink\",\n        edgeType: function(){ return \"flat\"; },\n        complete: function(event, sourceNode, targetNode, addedEles){\n            if (targetNode.length !== 0) {\n                var source_id = targetNode[0].source().id();\n                var target_id = targetNode[0].target().id();\n\n                //get the mid point between source node and target node\n                var source_position = targetNode[0].source().position();\n                var target_position = targetNode[0].target().position();\n\n                position = {};\n                position.x = ((source_position.x + target_position.x)/2);\n                position.y = ((source_position.y + target_position.y)/2);\n\n                if (targetNode[0].source().data().type == \"atom\" && targetNode[0].target().data().type == \"atom\")\n                {\n                    var scheme = add_scheme(\"Support\");\n                    var scheme_id = scheme.id;\n                    var scheme_content = scheme.name;\n                    //remove the automatically generated edge\n                    targetNode.remove();\n                    cy.add([\n                        {group: \"nodes\", data: {id: scheme_id.toString(),\n                            content: scheme_content, typeshape: \"diamond\" }, classes: \"scheme-label\", locked: false, position: position}\n                    ]);\n                    var edge1 = add_edge(source_id, scheme_id);\n                    var edge2 = add_edge(scheme_id, target_id);\n                    cy.add([\n                      { group: \"edges\", data: { id: edge1.id.toString(), source: source_id, target: scheme_id } },\n                      { group: \"edges\", data: { id: edge2.id.toString(), source: scheme_id, target: target_id } }\n                    ]);\n                } else {\n                    targetNode.remove();\n                    var edge = add_edge(source_id, target_id);\n                    cy.add([\n                      { group: \"edges\", data: { id: edge.id.toString(), source: source_id, target: target_id } }\n                    ]);\n                }\n             this.update_local_storage();\n            } else {\n                targetNode.remove();\n            }\n        }\n    });\n    /*\n     *\n     * Set up context menus\n     *\n     * */\n     cm = cy.contextMenus({\n        menuItems: [\n          {\n            id: \"edit-content\",\n            title: \"edit content\",\n            selector: \"node[type = \\\"atom\\\"]\",\n            onClickFunction: function (event) {\n              var target = event.target || event.cyTarget;\n          //    $(\"#editContentModal\").modal(\"show\");\n            //  $(\"#edit_atom_content\").val(target.data().content);\n              this.edit_atom = target;\n            },\n            hasTrailingDivider: false\n          },\n          {\n            id: \"edit-metadata\",\n            title: \"edit metadata\",\n            selector: \"node[type = \\\"atom\\\"]\",\n            onClickFunction: function (event) {\n              //  $(\"#edit_metadata\").empty();\n                var target = event.target || event.cyTarget;\n                var atom = get_atom(target.id());\n              //  var textArea = $(\"<textarea id=\\\"\"+target.id()+\"_metadata\\\" class=\\\"form-control\\\" rows=\\\"2\\\" >\"+JSON.stringify(atom.metadata)+\"</textarea>\");\n             //   $(\"#edit_metadata\").append(textArea);\n             //   $(\"#editMetadataModal\").modal(\"show\");\n                edit_atom = target;\n            },\n            hasTrailingDivider: true\n          },\n          {\n            id: \"change-scheme\",\n            title: \"change scheme\",\n            selector: \"node[typeshape = \\\"diamond\\\"]\",\n            onClickFunction: function (event) {\n                var target = event.target || event.cyTarget;\n//                $(\"#editSchemeModal\").modal(\"show\");\n                edit_atom = target;\n            },\n            hasTrailingDivider: true\n          },\n          {\n            id: \"remove\",\n            title: \"remove\",\n            selector: \"node, edge\",\n            onClickFunction: function (event) {\n                var target = event.target || event.cyTarget;\n                if (selected.length !== 0) {\n                    selected.forEach(function(node) {\n                        this.delete_nodes(node);\n                    });\n                    selected = [];\n                } else {\n                    if (target.data().type==\"atom\") {\n                        this.delete_nodes(event);\n                        target.remove();\n                    } else if (target.data().typeshape==\"diamond\"){\n                        this.delete_nodes(event);\n                        target.remove();\n                    } else {\n                        this.delete_edge(target.id());\n                        this.update_local_storage();\n                        target.remove();\n                    }\n                }\n            },\n            hasTrailingDivider: true\n          },\n          {\n            id: \"add-atom\",\n            title: \"add atom\",\n            coreAsWell: true,\n            onClickFunction: function (event) {\n                position = event.renderedPosition;\n//                $(\"#newAtomModal\").modal(\"show\");\n            }\n          },\n          {\n            id: \"add-scheme\",\n            title: \"add scheme\",\n            coreAsWell: true,\n            onClickFunction: function (event) {\n\n                position = event.position || event.cyPosition;\n\n                document.getElementById(\"sel1\").options.selectedIndex=0;\n//                $(\"#newSchemeModal\").modal(\"show\");\n            },\n            hasTrailingDivider: true\n          },\n          {\n            id: \"redraw\",\n            title: \"redraw\",\n            coreAsWell: true,\n            onClickFunction: function (event) { this.redraw_visualisation(); },\n            hasTrailingDivider: true\n          },\n          {\n            id: \"undo\",\n            title: \"undo\",\n            selector: \"node, edge\",\n            show: false,\n            coreAsWell: true,\n            onClickFunction: function (event) {\n              this.undo();\n            },\n            hasTrailingDivider: false\n          },\n          {\n            id: \"redo\",\n            title: \"redo\",\n            selector: \"node, edge\",\n            show: false,\n            coreAsWell: true,\n            onClickFunction: function (event) {\n              this.redo();\n              if (redo_stack == []) {\n                cm.hideMenuItem(\"redo\");\n              }\n            },\n            hasTrailingDivider: true\n          },\n          {\n              id: \"merge_nodes\",\n              title: \"merge nodes\",\n              selector: \"node\",\n              show: false,\n              coreAsWell: true,\n              onClickFunction: function (event) {\n                  this.merge_nodes();\n              }\n          }\n        ]\n    });\n}\n\n  build_cola_layout( opts ) {\n    var cola_params = {\n        name: \"cola\",\n        animate: true,\n        randomize: true,\n        padding: 100,\n        fit: false,\n        maxSimulationTime: 1500\n    };\n    var i = 0;\n    if (opts !== undefined) {\n        opts.forEach(function(opt) {\n           cola_params[i] = opts[i];\n           ++i;\n        });\n    }\n    return cy.makeLayout( cola_params );\n}\n\nedit_atom_content() {\n    var content = document.getElementById(\"edit_atom_content\").value;\n    var atom = cy.$(\"#\"+edit_atom.id());\n    update_atom_text(edit_atom.id(), content);\n    this.update_local_storage();\n    atom.data(\"content\", content);\n    edit_atom = null;\n}\n\n delete_nodes(event) {\n    var target = event.target || event.cyTarget;\n    var id = target.id();\n    //removed = target.remove();\n    this.delete_atom(id);\n    var i = 0;\n    var sds = get_sd();\n    var edges = sds.edges;\n    edges.forEach(function(edge) {\n        if (edges[i] !== undefined) {\n            if (edges[i].source_id === id || edges[i].target_id === id) {\n                delete_edge(edges[i].id);\n            }\n            ++i;\n        }\n    });\n    this.update_local_storage();\n}\n\nupdate_local_storage() {\n    var undo_item = JSON.parse(current_sadface_doc);\n    undo_stack.push(undo_item);\n    redo_stack = [];\n    cm.showMenuItem(\"undo\");\n    cm.hideMenuItem(\"redo\");\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    current_sadface_doc = JSON.stringify(get_sd());\n    update();\n}\n\nredraw_visualisation() {\n    layout.stop();\n    layout.options.eles = cy.elements();\n    layout.run();\n    cy.center();\n    cy.resize();\n}\n\n undo() {\n    if (undo_stack.length != 0) {\n        var redo_item = get_sd();\n        redo_stack.push(redo_item);\n        var state = undo_stack.pop();\n        this.loadJSON(JSON.stringify(state));\n        if (undo_stack.length == 0) {\n            cm.hideMenuItem(\"undo\");\n        }\n        cm.showMenuItem(\"redo\");\n    }\n}\n\n redo() {\n    if (redo_stack.length != 0) {\n        var undo_item = get_sd();\n        undo_stack.push(undo_item);\n        var state = redo_stack.pop();\n        this.loadJSON(JSON.stringify(state));\n        if (redo_stack.length == 0) {\n            cm.hideMenuItem(\"redo\");\n        }\n        cm.showMenuItem(\"undo\");\n    }\n}\n\nmerge_nodes() {\n    //From all currently selected nodes, set first in selected to the base node, move all sources and edges related to each other node in selected to base node\n    var target;\n    var id;\n    var atom;\n    var baseNode = selected[0].target || selected[0].cyTarget;\n    var baseId = baseNode.id();\n    var baseAtom = get_atom(baseId);\n    var edge;\n    if (baseAtom.type == \"atom\") {\n        var sds = get_sd();\n        var i = 0;\n        selected.forEach(function(node){\n            var j = 0;\n            if (i > 0) {\n                target = selected[i].target || selected[i].cyTarget;\n                id = target.id();\n                atom = get_atom(id);\n                if (atom.type == \"atom\") {\n                    atom.sources.forEach(function(source) {\n                        add_source(baseId, atom.sources[j].resource_id, atom.sources[j].text, atom.sources[j].offset, atom.sources[j].length);\n                        ++j;\n                    });\n                    j = 0;\n                    sds.edges.forEach(function(edge) {\n                        if (sds.edges[j].source_id == id) {\n                            edge = add_edge(baseId,sds.edges[j].target_id);\n                            cy.add([\n                              { group: \"edges\", data: { id: edge.id.toString(), source: baseId, target: sds.edges[j].target_id } }\n                            ]);\n                        }\n                        if (sds.edges[j].target_id == id) {\n                            edge = add_edge(sds.edges[j].source_id, baseId);\n                            cy.add([\n                              { group: \"edges\", data: { id: edge.id.toString(), source: sds.edges[j].source_id, target: baseId } }\n                            ]);\n                        }\n                        ++j;\n                    });\n                this.delete_nodes(selected[i]);\n                } else {\n                    alert(\"cannot merge scheme nodes\");\n                }\n            }\n            ++i;\n        });\n        selected = [];\n        cm.hideMenuItem(\"merge_nodes\");\n    } else {\n        alert(\"cannot merge scheme nodes\");\n    }\n}\n\ndelete_atom(atom_id) {\n    /*\n    Remove the atom from the sadface document identified by the\n    supplied atom ID\n    */\n    if (atom_id) {\n        var atom = get_atom(atom_id);\n        if (atom !== null && atom !== undefined) {\n            var size = Object.keys(sd.nodes).length;\n            for (var i = 0; i < size; ++i) {\n                if (sd.nodes[i].id === atom.id) {\n                    delete sd.nodes[i];\n//                    sd.nodes = remove_falsy(sd.nodes);\n                    return;\n                }\n            }\n        }\n    }\n}\n\n\n  componentDidMount(){\n  \tthis.initCytoscape();\n  }\n\n   render(){\n\n  \n\n    return (\n    \t<div id=\"cy\"  style={{height:'600px', width:'600px'}}>\n    \t</div>\n    );\n    }\n    }\n\n    export default Cytoscape;"]},"metadata":{},"sourceType":"module"}