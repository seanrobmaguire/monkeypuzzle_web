{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape'; //import Components\n\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu'; //import Test from './Test';\n\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css'; //import fuctions from SADFACE\n\nimport { remove_resources_from_nodes, loadSADFace, saveSADFace, delete_resource, get_sd, import_json, add_resource, export_cytoscape, add_resource_metadata } from './lib/Sadface';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabs: [],\n      last_number: 0,\n      tab_id: \"\",\n      sd: get_sd(),\n      showResourcePane: true,\n      test: {},\n      current_tab: 0,\n      cy_data: null,\n      selected: '',\n      jpg: '',\n      png: '',\n      fileName: '',\n      json: '',\n      current_sadface_doc: '',\n      cy: null,\n      remove_all_tabs: false,\n      resourceType: 'text'\n    };\n    this.test = this.test.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_to_tabs_arr = this.add_to_tabs_arr.bind(this);\n    this.download = this.download.bind(this);\n    this.update_resource = this.update_resource.bind(this);\n    this.loadJSON = this.loadJSON.bind(this);\n    this.loadTabs = this.loadTabs.bind(this);\n    this.get_resource = this.get_resource.bind(this);\n    this.download = this.download.bind(this);\n    this.toggleResourcePane = this.toggleResourcePane.bind(this);\n    this.download_sadface = this.download_sadface.bind(this);\n    this.add_resource_metadata = this.add_resource_metadata.bind(this);\n    this.setActiveTab = this.setActiveTab.bind(this);\n    this.download = this.download.bind(this);\n    this.fileManager = this.fileManager.bind(this);\n    this.loadJSON = this.loadJSON.bind(this); //ResourcePane Functions\n\n    this.add_tab = this.add_tab.bind(this);\n    this.remove_tab = this.remove_tab.bind(this);\n    this.change_title = this.change_title.bind(this);\n    this.change_content = this.change_content.bind(this);\n    this.set_text_resource_content = this.set_text_resource_content.bind(this);\n    this.add_tab_to_tab_array = this.add_tab_to_tab_array.bind(this);\n    this.getType = this.getType.bind(this);\n    this.load_tab = this.load_tab.bind(this); //Menu\n\n    this.handleSetPng = this.handleSetPng.bind(this);\n    this.handleSetJpg = this.handleSetJpg.bind(this);\n    this.load_demo_argument = this.load_demo_argument.bind(this);\n    this.setFileName = this.setFileName.bind(this);\n  }\n\n  add_to_tabs_arr(tab_id) {\n    this.setState(state => {\n      const tabs = state.tabs.concat(tab_id);\n      return {\n        tabs\n      };\n    }, function () {\n      console.log(\"tabs\");\n    }.bind(this));\n  }\n\n  openAddBoardModal() {\n    this.setState({\n      boardAddModalShow: true\n    }, function () {\n      console.log(this.state.boardAddModalShow);\n    });\n  }\n\n  createNewTab() {}\n\n  add_tab(load_id = null) {\n    let newTab = {};\n\n    if (load_id == null) {\n      console.log('load tab null');\n      newTab = add_resource(' ');\n      console.log(newTab, 'newTab');\n      add_resource_metadata(newTab.id, 'title', '');\n      newTab.metadata = {\n        title: ''\n      };\n      console.log(newTab, 'newTab with metadata');\n      localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n      newTab.type = this.state.resourceType;\n      console.log(newTab, 'newtab');\n    } else {\n      newTab = load_id;\n    }\n\n    console.log(newTab, 'load tab not null');\n    this.add_tab_to_tab_array(newTab); // var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n    //  console.log(resource_type_idx,'resource_type_idx');\n    //var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    //newTab.type = resource_type_txt.toLowerCase();\n  }\n\n  add_tab_to_tab_array(newTab) {\n    let tab_number = '';\n    this.setState({\n      last_number: this.state.last_number + 1\n    }, function () {\n      tab_number = this.state.last_number;\n      newTab.tab_number = tab_number;\n      this.setState(state => {\n        const tabs = this.state.tabs.concat(newTab);\n        return {\n          tabs\n        };\n      }, function () {\n        console.log(this.state.tabs, 'header');\n        this.setActiveTab(newTab.id);\n      });\n    });\n  }\n\n  getType(type) {\n    this.setState({\n      resourceType: type\n    }, () => this.add_tab());\n  }\n\n  test(index) {\n    this.setState({\n      current_tab: index\n    });\n    console.log(this.current_tab);\n  }\n\n  setActiveTab(value) {\n    this.setState({\n      current_tab: value\n    }, function () {\n      console.log(this.state.current_tab, 'active');\n    });\n  }\n\n  add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n      this.sate.sd.resources.forEach(function (res) {\n        if (res.id === resource_id) {\n          res.metadata[key] = value;\n        }\n      });\n    }\n  } //Menu function\n\n\n  handleSetPng(png) {\n    this.setState({\n      png: png\n    }, () => console.log(this.state.png, 'png'));\n  }\n\n  handleSetJpg(jpg) {\n    this.setState({\n      jpg: jpg\n    }, () => console.log(this.state.jpg));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  remove_tab(i) {\n    delete_resource(this.state.current_tab);\n    remove_resources_from_nodes(this.state.current_tab);\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n\n    if (this.state.tabs.length >= 1 && i != -1) {\n      this.setState(state => {\n        const tabs = state.tabs.filter((item, j) => i !== j);\n        return {\n          tabs\n        };\n      }, () => {\n        console.log(this.state.tabs.length - 1, 'current tabs');\n      });\n      let newCurrent = this.state.tabs[this.state.tabs.length - 1].id;\n      this.setState({\n        current_tab: this.state.tabs.length - 1\n      }, () => console.log(this.state.tabs.length - 1, 'current tabs'));\n      console.log(this.state.tabs.length, 'length');\n    }\n\n    remove_resources_from_nodes(this.state.current_tab);\n    /*\n        delete_resource(current_tab);\n        sd.nodes.forEach((node) => {\n            if (node.type == 'atom') {\n                if (current_tab in node.sources) {\n                    delete_source(node.id, current_tab);\n                }\n            }\n        });\n        \n        localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n        if (tabs.length >= 1 && idx != -1)\n        {\n            tabs.splice(idx, 1);\n            current_tab = tabs[tabs.length-1];\n            set_active_tab(current_tab+\"_body\");\n        }\n        */\n  }\n\n  remove_all_tabs() {\n    this.setState({\n      tabs: []\n    });\n    this.setState({\n      last_number: 1\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  fileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n    console.log(operation, filetype, tab_id);\n\n    if (\"save\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        if (document.getElementById(\"title_\" + tab_id).value !== '') {\n          var filename = document.getElementById(\"title_\" + tab_id).value + \".txt\";\n        } else {\n          var filename = \"tab\" + tab_id + \"_text.txt\";\n        }\n\n        var text = document.getElementById(tab_id).value;\n        this.download(filename, text);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var filename = this.state.fileName;\n        console.log(filename, 'filename');\n\n        if (filename.length == 0) {\n          filename = \"default\";\n        }\n\n        saveSADFace(filename, filetype);\n      }\n    } //if it's a load operation\n\n\n    if (\"load\" == operation) {\n      // if it's a txt file\n      if (\"txt\" == filetype) {\n        var files = document.getElementById(\"load\" + tab_id).files;\n        var file = files[0];\n        var filename = file.name;\n        document.getElementById(\"title_\" + tab_id).innerText = filename;\n        console.log(file.name);\n        var reader = new FileReader();\n\n        reader.onload = function (e) {\n          var content = reader.result;\n          document.getElementById(tab_id).innerText = content;\n          this.update_resource(tab_id, content, filename);\n        };\n\n        reader.readAsText(file);\n      } // if it's a JSON file\n\n\n      if (\"json\" == filetype) {\n        var files = document.getElementById(\"loadJSON\").files;\n        var file = files[0];\n        var reader = loadSADFace(file);\n\n        reader.onload = function (e) {\n          var result = reader.result;\n          console.log(result, 'result');\n          localStorage.setItem(\"state\", result);\n          this.loadJSON(result);\n          var json = JSON.parse(result);\n          console.log(json, 'json');\n          console.log(json.resources, 'json resource');\n          this.setState({\n            remove_all_tabs: !this.state.remove_all_tabs\n          }, () => console.log(this.state.remove_all_tabs));\n          this.loadTabs(json.resources);\n        }.bind(this);\n      }\n    }\n  }\n\n  loadJSON(json_value) {\n    this.setState({\n      json: import_json(json_value)\n    }, () => console.log(this.state.json, 'json'));\n    localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n    this.setState({\n      current_sadface_doc: JSON.stringify(get_sd())\n    }, () => console.log(this.state.current_sadface_doc, 'current_sadface_doc')); //load any sources in the stored diagram state\n\n    window.onload = function () {\n      this.loadTabs(this.state.json.resources);\n    };\n\n    this.setState({\n      cy_data: export_cytoscape(this.state.json)\n    }, () => console.log(this.state.cy_data, 'cy_data updated'));\n\n    if (this.state.cy !== null) {\n      this.state.cy.elements().remove();\n      this.state.cy.json({\n        elements: JSON.parse(this.state.cy_data)\n      }); //redraw_visualisation();\n    }\n  }\n\n  download(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \" + filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n    outfile.click();\n    document.body.removeChild(outfile);\n  }\n\n  get_resource(resource_id) {\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n     Returns: An resource dict\n    */\n    if (resource_id) {\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n      return resource;\n    }\n  }\n\n  isTab_id(tab) {\n    return tab.tab_id;\n  }\n\n  loadJSON() {}\n\n  loadTabs(tabs) {\n    console.log(tabs, 'tabs');\n    tabs.map(tab => this.load_tab(tab));\n  }\n\n  load_tab(resource) {\n    if (resource != null) {\n      var tab_id = resource.id;\n      this.add_tab(resource); //  this.set_text_resource_title(tab_id, resource.metadata.title);\n      //  this.set_text_resource_content(tab_id, resource.content);\n    }\n  }\n\n  update_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    if (resource_id && (content || title)) {\n      console.log(\"update resource\");\n      var resource;\n      const index = this.state.tabs.findIndex(tab => tab.tab_id === resource_id);\n      const tabs = [...this.state.tabs];\n      resource = tabs[index];\n\n      if (resource !== null && resource !== undefined) {\n        if (content !== null && content !== undefined) {\n          resource.content = content;\n        }\n\n        if (title !== null && title !== undefined) {\n          resource.title = title;\n        }\n        /*  this.state.sd.resources.forEach((res) => {\n              if(res.id === resource_id) {\n                  res = resource;\n              }\n          });*/\n\n      } else {\n        throw \"Could not update the resource: \" + resource_id;\n      }\n\n      this.setState({\n        tabs\n      }, () => {\n        console.log(\"update tabs\");\n      });\n    }\n  } //Resource Pane Functions\n\n\n  change_title(tab_id, val) {\n    console.log(\"change title\" + tab_id + val);\n    this.set_text_resource_title(tab_id, val);\n  }\n\n  set_text_resource_title(tab_id, title) {\n    console.log(\"set text resource title\" + tab_id + title);\n    this.update_resource(tab_id, null, title); //    this.update_local_storage();\n  }\n\n  change_content(tab_id, val) {\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n  }\n\n  set_text_resource_content(tab_id, text) {\n    this.update_resource(tab_id, text, null); //update_local_storage();\n  } // Slide In Functions\n\n\n  toggleResourcePane() {\n    this.setState({\n      showResourcePane: !this.state.showResourcePane\n    });\n  }\n\n  clear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n  }\n\n  setFileName(file_name) {\n    console.log('filename APP');\n    this.setState({\n      fileName: file_name\n    }, () => console.log(this.state.fileName, 'filename app'));\n  }\n\n  download_sadface() {\n    console.log(\"download_sadface\");\n  }\n\n  load_demo_argument() {\n    var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n    localStorage.setItem(\"state\", demo_sadface_doc);\n    this.setState({\n      cy_data: export_cytoscape(import_json(demo_sadface_doc))\n    }, () => console.log(this.state.cy_data, 'cy_data'));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      toggleResourcePane: this.toggleResourcePane,\n      mp_reset: this.mp_reset,\n      load_demo_argument: this.load_demo_argument,\n      set_analyst_name: this.set_analyst_name,\n      set_analyst_email: this.set_analyst_email,\n      download_sadface: this.download_sadface,\n      download_png: this.download_png,\n      download_jpg: this.download_jpg,\n      setFileName: this.setFileName,\n      fileManager: this.fileManager,\n      png: this.state.png,\n      jpg: this.state.jpg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      getType: this.getType,\n      remove_tab: this.remove_tab,\n      fileManager: this.fileManager,\n      showResourcePane: this.state.showResourcePane,\n      current_tab: this.state.current_tab,\n      setActiveTab: this.setActiveTab,\n      fileManager: this.fileManager,\n      change_title: this.change_title,\n      change_content: this.change_content,\n      loadTabs: this.loadTabs,\n      cy_data: this.state.cy_data,\n      handleSetPng: this.handleSetPng,\n      handleSetJpg: this.handleSetJpg,\n      remove_all_tabs: this.state.remove_all_tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","ReactCytoscape","MainUI","Menu","remove_resources_from_nodes","loadSADFace","saveSADFace","delete_resource","get_sd","import_json","add_resource","export_cytoscape","add_resource_metadata","App","constructor","props","state","tabs","last_number","tab_id","sd","showResourcePane","test","current_tab","cy_data","selected","jpg","png","fileName","json","current_sadface_doc","cy","remove_all_tabs","resourceType","bind","toggleButton","add_to_tabs_arr","download","update_resource","loadJSON","loadTabs","get_resource","toggleResourcePane","download_sadface","setActiveTab","fileManager","add_tab","remove_tab","change_title","change_content","set_text_resource_content","add_tab_to_tab_array","getType","load_tab","handleSetPng","handleSetJpg","load_demo_argument","setFileName","setState","concat","console","log","openAddBoardModal","boardAddModalShow","createNewTab","load_id","newTab","id","metadata","title","localStorage","setItem","JSON","stringify","type","tab_number","index","value","resource_id","key","sate","resources","forEach","res","componentDidMount","slideout","document","getElementById","i","length","filter","item","j","newCurrent","toggle","operation","filetype","filename","text","files","file","name","innerText","reader","FileReader","onload","e","content","result","readAsText","parse","json_value","window","elements","remove","outfile","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","resource","findIndex","tab","isTab_id","map","undefined","val","set_text_resource_title","clear_local_storage","clear","location","reload","file_name","demo_sadface_doc","render","mp_reset","set_analyst_name","set_analyst_email","download_png","download_jpg"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,cAAP,MAA2B,iBAA3B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB,C,CAIA;;AAGA,OAAO,wBAAP,C,CACA;;AACA,OAAO,mCAAP,C,CACA;AACA;;AACA,OAAO,sCAAP;AACA,OAAO,eAAP,C,CAGA;;AAEA,SAAQC,2BAAR,EAAqCC,WAArC,EAAiDC,WAAjD,EAA8DC,eAA9D,EAA+EC,MAA/E,EAAsFC,WAAtF,EAAmGC,YAAnG,EAAiHC,gBAAjH,EAAkIC,qBAAlI,QAA8J,eAA9J;;AAMA,MAAMC,GAAN,SAAkBd,SAAlB,CAA2B;AAC1Be,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAE,EADM;AAEZC,MAAAA,WAAW,EAAE,CAFD;AAGZC,MAAAA,MAAM,EAAC,EAHK;AAIHC,MAAAA,EAAE,EAAEZ,MAAM,EAJP;AAKHa,MAAAA,gBAAgB,EAAE,IALf;AAMHC,MAAAA,IAAI,EAAC,EANF;AAOHC,MAAAA,WAAW,EAAE,CAPV;AAQHC,MAAAA,OAAO,EAAE,IARN;AASHC,MAAAA,QAAQ,EAAE,EATP;AAUHC,MAAAA,GAAG,EAAC,EAVD;AAWHC,MAAAA,GAAG,EAAE,EAXF;AAYHC,MAAAA,QAAQ,EAAC,EAZN;AAaHC,MAAAA,IAAI,EAAE,EAbH;AAcHC,MAAAA,mBAAmB,EAAC,EAdjB;AAeHC,MAAAA,EAAE,EAAC,IAfA;AAgBHC,MAAAA,eAAe,EAAE,KAhBd;AAiBHC,MAAAA,YAAY,EAAE;AAjBX,KAAb;AAqBM,SAAKX,IAAL,GAAY,KAAKA,IAAL,CAAUY,IAAV,CAAe,IAAf,CAAZ;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKE,eAAL,GAAsB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAtB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKI,eAAL,GAAsB,KAAKA,eAAL,CAAqBJ,IAArB,CAA0B,IAA1B,CAAtB;AACA,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKM,QAAL,GAAe,KAAKA,QAAL,CAAcN,IAAd,CAAmB,IAAnB,CAAf;AACA,SAAKO,YAAL,GAAmB,KAAKA,YAAL,CAAkBP,IAAlB,CAAuB,IAAvB,CAAnB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKQ,kBAAL,GAAyB,KAAKA,kBAAL,CAAwBR,IAAxB,CAA6B,IAA7B,CAAzB;AACA,SAAKS,gBAAL,GAAuB,KAAKA,gBAAL,CAAsBT,IAAtB,CAA2B,IAA3B,CAAvB;AACA,SAAKtB,qBAAL,GAA4B,KAAKA,qBAAL,CAA2BsB,IAA3B,CAAgC,IAAhC,CAA5B;AACA,SAAKU,YAAL,GAAoB,KAAKA,YAAL,CAAkBV,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKW,WAAL,GAAmB,KAAKA,WAAL,CAAiBX,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAhB,CAtCW,CAwCX;;AACA,SAAKY,OAAL,GAAe,KAAKA,OAAL,CAAaZ,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKa,UAAL,GAAiB,KAAKA,UAAL,CAAgBb,IAAhB,CAAqB,IAArB,CAAjB;AACA,SAAKc,YAAL,GAAoB,KAAKA,YAAL,CAAkBd,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKe,cAAL,GAAqB,KAAKA,cAAL,CAAoBf,IAApB,CAAyB,IAAzB,CAArB;AACA,SAAKgB,yBAAL,GAAiC,KAAKA,yBAAL,CAA+BhB,IAA/B,CAAoC,IAApC,CAAjC;AACA,SAAKiB,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BjB,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKkB,OAAL,GAAe,KAAKA,OAAL,CAAalB,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKmB,QAAL,GAAgB,KAAKA,QAAL,CAAcnB,IAAd,CAAmB,IAAnB,CAAhB,CAhDW,CAiDX;;AACA,SAAKoB,YAAL,GAAoB,KAAKA,YAAL,CAAkBpB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKqB,YAAL,GAAoB,KAAKA,YAAL,CAAkBrB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKsB,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBtB,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKuB,WAAL,GAAmB,KAAKA,WAAL,CAAiBvB,IAAjB,CAAsB,IAAtB,CAAnB;AAEH;;AAUDE,EAAAA,eAAe,CAACjB,MAAD,EAAQ;AACpB,SAAKuC,QAAL,CAAc1C,KAAK,IAAI;AACpB,YAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAW0C,MAAX,CAAkBxC,MAAlB,CAAb;AACA,aAAO;AACJF,QAAAA;AADI,OAAP;AAEC,KAJJ,EAIM,YAAY;AACb2C,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAFI,CAEH3B,IAFG,CAEE,IAFF,CAJN;AAQH;;AACD4B,EAAAA,iBAAiB,GAAE;AAClB,SAAKJ,QAAL,CAAc;AAAEK,MAAAA,iBAAiB,EAAE;AAArB,KAAd,EAA2C,YAAY;AACpDH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAW+C,iBAAvB;AACH,KAFA;AAIH;;AAEDC,EAAAA,YAAY,GAAE,CACb;;AAQDlB,EAAAA,OAAO,CAACmB,OAAO,GAAC,IAAT,EAAc;AACjB,QAAIC,MAAM,GAAG,EAAb;;AACA,QAAID,OAAO,IAAI,IAAf,EAAqB;AACjBL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAK,MAAAA,MAAM,GAAGxD,YAAY,CAAC,GAAD,CAArB;AACAkD,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAoB,QAApB;AACAtD,MAAAA,qBAAqB,CAACsD,MAAM,CAACC,EAAR,EAAY,OAAZ,EAAqB,EAArB,CAArB;AAEAD,MAAAA,MAAM,CAACE,QAAP,GAAkB;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAlB;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAoB,sBAApB;AAGAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAejE,MAAM,EAArB,CAA9B;AACA0D,MAAAA,MAAM,CAACQ,IAAP,GAAc,KAAK1D,KAAL,CAAWiB,YAAzB;AACA2B,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAoB,QAApB;AACH,KAbD,MAaK;AAAEA,MAAAA,MAAM,GAAGD,OAAT;AAAmB;;AAC1BL,IAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ,EAAoB,mBAApB;AACD,SAAKf,oBAAL,CAA0Be,MAA1B,EAjBkB,CAmBlB;AACD;AACE;AACA;AAIC;;AAEDf,EAAAA,oBAAoB,CAACe,MAAD,EAAQ;AAExB,QAAIS,UAAU,GAAG,EAAjB;AACA,SAAKjB,QAAL,CAAc;AAAExC,MAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAAX,GAAyB;AAAxC,KAAd,EAA0D,YAAU;AAChEyD,MAAAA,UAAU,GAAG,KAAK3D,KAAL,CAAWE,WAAxB;AACAgD,MAAAA,MAAM,CAACS,UAAP,GAAoBA,UAApB;AAEA,WAAKjB,QAAL,CAAc1C,KAAK,IAAI;AACnB,cAAMC,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgB0C,MAAhB,CAAuBO,MAAvB,CAAb;AACA,eAAO;AACHjD,UAAAA;AADG,SAAP;AAEE,OAJN,EAIQ,YAAW;AACX2C,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWC,IAAvB,EAA6B,QAA7B;AACA,aAAK2B,YAAL,CAAkBsB,MAAM,CAACC,EAAzB;AACH,OAPL;AASH,KAbD;AAcH;;AACLf,EAAAA,OAAO,CAACsB,IAAD,EAAM;AACT,SAAKhB,QAAL,CAAc;AAACzB,MAAAA,YAAY,EAAEyC;AAAf,KAAd,EAAoC,MAChC,KAAK5B,OAAL,EADJ;AAEH;;AAKGxB,EAAAA,IAAI,CAACsD,KAAD,EAAQ;AACR,SAAKlB,QAAL,CAAc;AACVnC,MAAAA,WAAW,EAAEqD;AADH,KAAd;AAGAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKtC,WAAjB;AACH;;AAEDqB,EAAAA,YAAY,CAACiC,KAAD,EAAO;AACf,SAAKnB,QAAL,CAAc;AACVnC,MAAAA,WAAW,EAAEsD;AADH,KAAd,EAEG,YAAW;AACVjB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWO,WAAvB,EAAoC,QAApC;AACH,KAJD;AAQH;;AAEDX,EAAAA,qBAAqB,CAACkE,WAAD,EAAcC,GAAd,EAAmBF,KAAnB,EAA0B;AAC/C;;;;AAIA,QAAIC,WAAW,IAAIC,GAAf,IAAsBF,KAA1B,EAAiC;AAC7B,WAAKG,IAAL,CAAU5D,EAAV,CAAa6D,SAAb,CAAuBC,OAAvB,CAA+B,UAASC,GAAT,EAAc;AACzC,YAAGA,GAAG,CAAChB,EAAJ,KAAWW,WAAd,EAA2B;AACvBK,UAAAA,GAAG,CAACf,QAAJ,CAAaW,GAAb,IAAoBF,KAApB;AACH;AACJ,OAJD;AAKH;AACJ,GAhL0B,CAsL3B;;;AACAvB,EAAAA,YAAY,CAAC3B,GAAD,EAAK;AACb,SAAK+B,QAAL,CAAc;AAAC/B,MAAAA,GAAG,EAAEA;AAAN,KAAd,EAA0B,MACtBiC,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWW,GAAvB,EAA4B,KAA5B,CADJ;AAEH;;AAED4B,EAAAA,YAAY,CAAC7B,GAAD,EAAK;AACb,SAAKgC,QAAL,CAAc;AAAChC,MAAAA,GAAG,EAAEA;AAAN,KAAd,EAA0B,MACtBkC,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWU,GAAvB,CADJ;AAEH;;AAMD0D,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,QAAL,GAAgB,IAAIrF,QAAJ,CAAa;AAC1B,eAASsF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CADiB;AAE1B,cAAQD,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFkB;AAG1B,YAAM,MAHoB;AAI1B,cAAQ,OAJkB;AAK1B,kBAAY,GALc;AAM1B,iBAAW,GANe;AAO1B,mBAAa;AAPa,KAAb,CAAhB;AAUA;;AAEDxC,EAAAA,UAAU,CAACyC,CAAD,EAAG;AACTjF,IAAAA,eAAe,CAAC,KAAKS,KAAL,CAAWO,WAAZ,CAAf;AACAnB,IAAAA,2BAA2B,CAAC,KAAKY,KAAL,CAAWO,WAAZ,CAA3B;AAEA+C,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAejE,MAAM,EAArB,CAA7B;;AAEA,QAAI,KAAKQ,KAAL,CAAWC,IAAX,CAAgBwE,MAAhB,IAA0B,CAA1B,IAA+BD,CAAC,IAAI,CAAC,CAAzC,EAA2C;AAEvC,WAAK9B,QAAL,CAAc1C,KAAK,IAAG;AACtB,cAAMC,IAAI,GAAGD,KAAK,CAACC,IAAN,CAAWyE,MAAX,CAAkB,CAACC,IAAD,EAAOC,CAAP,KAAaJ,CAAC,KAAII,CAApC,CAAb;AACA,eAAO;AACH3E,UAAAA;AADG,SAAP;AAGH,OALG,EAKD,MAAM;AACL2C,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWC,IAAX,CAAgBwE,MAAhB,GAAuB,CAAnC,EAAsC,cAAtC;AACH,OAPG;AASA,UAAII,UAAU,GAAG,KAAK7E,KAAL,CAAWC,IAAX,CAAgB,KAAKD,KAAL,CAAWC,IAAX,CAAgBwE,MAAhB,GAAuB,CAAvC,EAA0CtB,EAA3D;AACA,WAAKT,QAAL,CAAc;AAACnC,QAAAA,WAAW,EAAE,KAAKP,KAAL,CAAWC,IAAX,CAAgBwE,MAAhB,GAAuB;AAArC,OAAd,EAAuD,MACnD7B,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWC,IAAX,CAAgBwE,MAAhB,GAAuB,CAAnC,EAAsC,cAAtC,CADJ;AAIA7B,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWC,IAAX,CAAgBwE,MAA5B,EAAoC,QAApC;AACH;;AAKDrF,IAAAA,2BAA2B,CAAC,KAAKY,KAAL,CAAWO,WAAZ,CAA3B;AACJ;;;;;;;;;;;;;;;;;;AAkBC;;AAEDS,EAAAA,eAAe,GAAE;AACb,SAAK0B,QAAL,CAAc;AAACzC,MAAAA,IAAI,EAAE;AAAP,KAAd;AACA,SAAKyC,QAAL,CAAc;AAACxC,MAAAA,WAAW,EAAC;AAAb,KAAd;AAGH;;AAKDiB,EAAAA,YAAY,GAAE;AACV,SAAKkD,QAAL,CAAcS,MAAd;AACH;;AAMDjD,EAAAA,WAAW,CAACkD,SAAD,EAAYC,QAAZ,EAAsB7E,MAAtB,EAA8B;AACrC;;;AAIAyC,IAAAA,OAAO,CAACC,GAAR,CAAYkC,SAAZ,EAAuBC,QAAvB,EAAiC7E,MAAjC;;AACA,QAAI,UAAU4E,SAAd,EAA4B;AACxB;AACA,UAAI,SAASC,QAAb,EAAuB;AACnB,YAAIV,QAAQ,CAACC,cAAT,CAAwB,WAASpE,MAAjC,EAAyC0D,KAAzC,KAAmD,EAAvD,EAA2D;AACvD,cAAIoB,QAAQ,GAAGX,QAAQ,CAACC,cAAT,CAAwB,WAASpE,MAAjC,EAAyC0D,KAAzC,GAA+C,MAA9D;AACH,SAFD,MAEO;AACH,cAAIoB,QAAQ,GAAG,QAAM9E,MAAN,GAAa,WAA5B;AACH;;AACD,YAAI+E,IAAI,GAAGZ,QAAQ,CAACC,cAAT,CAAwBpE,MAAxB,EAAgC0D,KAA3C;AACA,aAAKxC,QAAL,CAAc4D,QAAd,EAAuBC,IAAvB;AACH,OAVuB,CAYxB;;;AACA,UAAI,UAAUF,QAAd,EAAwB;AACrB,YAAIC,QAAQ,GAAG,KAAKjF,KAAL,CAAWY,QAA1B;AACAgC,QAAAA,OAAO,CAACC,GAAR,CAAYoC,QAAZ,EAAsB,UAAtB;;AACC,YAAGA,QAAQ,CAACR,MAAT,IAAmB,CAAtB,EAAwB;AAAEQ,UAAAA,QAAQ,GAAG,SAAX;AAAqB;;AAC5C3F,QAAAA,WAAW,CAAC2F,QAAD,EAAWD,QAAX,CAAX;AACN;AACJ,KAzBoC,CA2BrC;;;AACA,QAAI,UAAUD,SAAd,EAAyB;AACrB;AACA,UAAI,SAASC,QAAb,EAAuB;AACnB,YAAIG,KAAK,GAAGb,QAAQ,CAACC,cAAT,CAAwB,SAAOpE,MAA/B,EAAuCgF,KAAnD;AACA,YAAIC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAhB;AACA,YAAIF,QAAQ,GAAGG,IAAI,CAACC,IAApB;AACAf,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAASpE,MAAjC,EAAyCmF,SAAzC,GAAqDL,QAArD;AACArC,QAAAA,OAAO,CAACC,GAAR,CAAYuC,IAAI,CAACC,IAAjB;AACA,YAAIE,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AACxB,cAAIC,OAAO,GAAGJ,MAAM,CAACK,MAArB;AACAtB,UAAAA,QAAQ,CAACC,cAAT,CAAwBpE,MAAxB,EAAgCmF,SAAhC,GAA4CK,OAA5C;AACA,eAAKrE,eAAL,CAAqBnB,MAArB,EAA6BwF,OAA7B,EAAsCV,QAAtC;AACH,SAJD;;AAKAM,QAAAA,MAAM,CAACM,UAAP,CAAkBT,IAAlB;AACH,OAfoB,CAgBrB;;;AACA,UAAI,UAAUJ,QAAd,EAAwB;AACpB,YAAIG,KAAK,GAAGb,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCY,KAAhD;AACA,YAAIC,IAAI,GAAGD,KAAK,CAAC,CAAD,CAAhB;AACA,YAAII,MAAM,GAAGlG,WAAW,CAAC+F,IAAD,CAAxB;;AACAG,QAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AACxB,cAAIE,MAAM,GAAGL,MAAM,CAACK,MAApB;AACJhD,UAAAA,OAAO,CAACC,GAAR,CAAY+C,MAAZ,EAAoB,QAApB;AACItC,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BqC,MAA7B;AACA,eAAKrE,QAAL,CAAcqE,MAAd;AACA,cAAI/E,IAAI,GAAG2C,IAAI,CAACsC,KAAL,CAAWF,MAAX,CAAX;AACAhD,UAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAZ,EAAkB,MAAlB;AACA+B,UAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAI,CAACoD,SAAjB,EAA4B,eAA5B;AAEA,eAAKvB,QAAL,CAAc;AAAC1B,YAAAA,eAAe,EAAE,CAAC,KAAKhB,KAAL,CAAWgB;AAA9B,WAAd,EAA8D,MAC1D4B,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWgB,eAAvB,CADJ;AAEA,eAAKQ,QAAL,CAAcX,IAAI,CAACoD,SAAnB;AACH,SAZe,CAYd/C,IAZc,CAYT,IAZS,CAAhB;AAaH;AACJ;AACJ;;AAEAK,EAAAA,QAAQ,CAACwE,UAAD,EAAa;AAClB,SAAKrD,QAAL,CAAc;AAAC7B,MAAAA,IAAI,EAAEpB,WAAW,CAACsG,UAAD;AAAlB,KAAd,EAA+C,MAC3CnD,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWa,IAAvB,EAA6B,MAA7B,CADJ;AAEAyC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BC,IAAI,CAACC,SAAL,CAAejE,MAAM,EAArB,CAA7B;AACA,SAAKkD,QAAL,CAAc;AAAC5B,MAAAA,mBAAmB,EAAE0C,IAAI,CAACC,SAAL,CAAejE,MAAM,EAArB;AAAtB,KAAd,EAA+D,MAC3DoD,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWc,mBAAvB,EAA4C,qBAA5C,CADJ,EAJkB,CAMlB;;AACAkF,IAAAA,MAAM,CAACP,MAAP,GAAgB,YAAY;AACxB,WAAKjE,QAAL,CAAc,KAAKxB,KAAL,CAAWa,IAAX,CAAgBoD,SAA9B;AACH,KAFD;;AAGA,SAAKvB,QAAL,CAAc;AAAClC,MAAAA,OAAO,EAAEb,gBAAgB,CAAC,KAAKK,KAAL,CAAWa,IAAZ;AAA1B,KAAd,EAA4D,MACxD+B,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWQ,OAAvB,EAAgC,iBAAhC,CADJ;;AAEA,QAAG,KAAKR,KAAL,CAAWe,EAAX,KAAkB,IAArB,EACA;AACI,WAAKf,KAAL,CAAWe,EAAX,CAAckF,QAAd,GAAyBC,MAAzB;AACA,WAAKlG,KAAL,CAAWe,EAAX,CAAcF,IAAd,CAAmB;AAACoF,QAAAA,QAAQ,EAAEzC,IAAI,CAACsC,KAAL,CAAW,KAAK9F,KAAL,CAAWQ,OAAtB;AAAX,OAAnB,EAFJ,CAGI;AACH;AACJ;;AAIDa,EAAAA,QAAQ,CAAC4D,QAAD,EAAWC,IAAX,EAAiB;AACrB;;;AAGAtC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAeoC,QAA3B;AACA,QAAIkB,OAAO,GAAG7B,QAAQ,CAAC8B,aAAT,CAAuB,GAAvB,CAAd;AACAD,IAAAA,OAAO,CAACE,YAAR,CAAqB,MAArB,EAA6B,mCAAmCC,kBAAkB,CAACpB,IAAD,CAAlF;AACAiB,IAAAA,OAAO,CAACE,YAAR,CAAqB,UAArB,EAAiCpB,QAAjC;AAEAkB,IAAAA,OAAO,CAACI,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACAlC,IAAAA,QAAQ,CAACmC,IAAT,CAAcC,WAAd,CAA0BP,OAA1B;AAEAA,IAAAA,OAAO,CAACQ,KAAR;AAEArC,IAAAA,QAAQ,CAACmC,IAAT,CAAcG,WAAd,CAA0BT,OAA1B;AACH;;AAGD1E,EAAAA,YAAY,CAACqC,WAAD,EAAa;AACrB;;;;AAKA,QAAGA,WAAH,EAAe;AACX,UAAI+C,QAAJ;AACA,YAAMjD,KAAK,GAAG,KAAK5D,KAAL,CAAWC,IAAX,CAAgB6G,SAAhB,CAA2BC,GAAD,IAASA,GAAG,CAAC5G,MAAJ,KAAe2D,WAAlD,CAAd;AACA,YAAM7D,IAAI,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,CAAb;AACA4G,MAAAA,QAAQ,GAAG5G,IAAI,CAAC2D,KAAD,CAAf;AACA,aAAOiD,QAAP;AACH;AACJ;;AAEDG,EAAAA,QAAQ,CAACD,GAAD,EAAK;AACT,WAAOA,GAAG,CAAC5G,MAAX;AACH;;AAODoB,EAAAA,QAAQ,GAAE,CAET;;AAEDC,EAAAA,QAAQ,CAACvB,IAAD,EAAO;AACX2C,IAAAA,OAAO,CAACC,GAAR,CAAY5C,IAAZ,EAAkB,MAAlB;AACDA,IAAAA,IAAI,CAACgH,GAAL,CAAUF,GAAD,IACP,KAAK1E,QAAL,CAAc0E,GAAd,CADF;AAGD;;AAGF1E,EAAAA,QAAQ,CAACwE,QAAD,EAAW;AACf,QAAIA,QAAQ,IAAI,IAAhB,EAAsB;AAClB,UAAI1G,MAAM,GAAG0G,QAAQ,CAAC1D,EAAtB;AACA,WAAKrB,OAAL,CAAa+E,QAAb,EAFkB,CAGpB;AACA;AACD;AACJ;;AAEDvF,EAAAA,eAAe,CAACwC,WAAD,EAAc6B,OAAd,EAAuBtC,KAAvB,EAA8B;AACzC;;;;AAMA,QAAIS,WAAW,KAAK6B,OAAO,IAAItC,KAAhB,CAAf,EAAuC;AACnCT,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA,UAAIgE,QAAJ;AACA,YAAMjD,KAAK,GAAG,KAAK5D,KAAL,CAAWC,IAAX,CAAgB6G,SAAhB,CAA2BC,GAAD,IAASA,GAAG,CAAC5G,MAAJ,KAAe2D,WAAlD,CAAd;AACA,YAAM7D,IAAI,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,IAAf,CAAb;AACA4G,MAAAA,QAAQ,GAAG5G,IAAI,CAAC2D,KAAD,CAAf;;AAEA,UAAIiD,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKK,SAAtC,EAAiD;AAC7C,YAAIvB,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAKuB,SAApC,EAA+C;AAC3CL,UAAAA,QAAQ,CAAClB,OAAT,GAAmBA,OAAnB;AACH;;AACD,YAAItC,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK6D,SAAhC,EAA2C;AACvCL,UAAAA,QAAQ,CAACxD,KAAT,GAAiBA,KAAjB;AACH;AACH;;;;;;AAKD,OAZD,MAYO;AACH,cAAO,oCAAkCS,WAAzC;AACH;;AACD,WAAKpB,QAAL,CAAc;AAACzC,QAAAA;AAAD,OAAd,EAAsB,MAAK;AACvB2C,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,OAFD;AAGH;AACJ,GA9c0B,CAgd3B;;;AACAb,EAAAA,YAAY,CAAC7B,MAAD,EAASgH,GAAT,EAAc;AACtBvE,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAgB1C,MAAhB,GAAuBgH,GAAnC;AACA,SAAKC,uBAAL,CAA6BjH,MAA7B,EAAqCgH,GAArC;AACH;;AAEDC,EAAAA,uBAAuB,CAACjH,MAAD,EAASkD,KAAT,EAAe;AAClCT,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA2B1C,MAA3B,GAAoCkD,KAAhD;AACA,SAAK/B,eAAL,CAAqBnB,MAArB,EAA6B,IAA7B,EAAmCkD,KAAnC,EAFkC,CAGtC;AACC;;AAEDpB,EAAAA,cAAc,CAAC9B,MAAD,EAASgH,GAAT,EAAa;AACvBvE,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB1C,MAAnB,GAA4BgH,GAAxC;AACA,SAAKjF,yBAAL,CAA+B/B,MAA/B,EAAuCgH,GAAvC;AACH;;AAEDjF,EAAAA,yBAAyB,CAAC/B,MAAD,EAAS+E,IAAT,EAAc;AACnC,SAAK5D,eAAL,CAAqBnB,MAArB,EAA6B+E,IAA7B,EAAmC,IAAnC,EADmC,CAEnC;AACH,GApe0B,CAse3B;;;AACAxD,EAAAA,kBAAkB,GAAE;AAChB,SAAKgB,QAAL,CAAc;AAACrC,MAAAA,gBAAgB,EAAE,CAAC,KAAKL,KAAL,CAAWK;AAA/B,KAAd;AACH;;AAGDgH,EAAAA,mBAAmB,GAAG;AAClB/D,IAAAA,YAAY,CAACgE,KAAb;AACAtB,IAAAA,MAAM,CAACuB,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH;;AAEA/E,EAAAA,WAAW,CAACgF,SAAD,EAAW;AACnB7E,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAKH,QAAL,CAAc;AAAC9B,MAAAA,QAAQ,EAAE6G;AAAX,KAAd,EAAqC,MACnC7E,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWY,QAAvB,EAAiC,cAAjC,CADF;AAED;;AAKHe,EAAAA,gBAAgB,GAAE;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAIDL,EAAAA,kBAAkB,GAAE;AACjB,QAAIkF,gBAAgB,GAAG,yxCAAvB;AAECpE,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BmE,gBAA7B;AAEA,SAAKhF,QAAL,CAAc;AAAClC,MAAAA,OAAO,EAAEb,gBAAgB,CAACF,WAAW,CAACiI,gBAAD,CAAZ;AAA1B,KAAd,EAA0E,MACtE9E,OAAO,CAACC,GAAR,CAAY,KAAK7C,KAAL,CAAWQ,OAAvB,EAAgC,SAAhC,CADJ;AAEH;;AAGDmH,EAAAA,MAAM,GAAE;AAEJ,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIA,oBAAC,IAAD;AACG,MAAA,kBAAkB,EAAE,KAAKjG,kBAD5B;AAEG,MAAA,QAAQ,EAAE,KAAKkG,QAFlB;AAGG,MAAA,kBAAkB,EAAE,KAAKpF,kBAH5B;AAIG,MAAA,gBAAgB,EAAE,KAAKqF,gBAJ1B;AAKG,MAAA,iBAAiB,EAAE,KAAKC,iBAL3B;AAMG,MAAA,gBAAgB,EAAE,KAAKnG,gBAN1B;AAOG,MAAA,YAAY,EAAE,KAAKoG,YAPtB;AAQG,MAAA,YAAY,EAAE,KAAKC,YARtB;AASG,MAAA,WAAW,EAAE,KAAKvF,WATrB;AAUG,MAAA,WAAW,EAAE,KAAKZ,WAVrB;AAYG,MAAA,GAAG,EAAE,KAAK7B,KAAL,CAAWW,GAZnB;AAaG,MAAA,GAAG,EAAE,KAAKX,KAAL,CAAWU,GAbnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAqBG,oBAAC,MAAD;AACA,MAAA,aAAa,EAAE,MAAM,KAAKS,YAAL,EADrB;AAEA,MAAA,MAAM,EAAI,MAAM,KAAKW,OAAL,EAFhB;AAGA,MAAA,IAAI,EAAI,KAAK9B,KAAL,CAAWC,IAHnB;AAIA,MAAA,OAAO,EAAE,KAAKmC,OAJd;AAKA,MAAA,UAAU,EAAE,KAAKL,UALjB;AAMA,MAAA,WAAW,EAAE,KAAKF,WANlB;AAOA,MAAA,gBAAgB,EAAE,KAAK7B,KAAL,CAAWK,gBAP7B;AAQA,MAAA,WAAW,EAAE,KAAKL,KAAL,CAAWO,WARxB;AASA,MAAA,YAAY,EAAE,KAAKqB,YATnB;AAUA,MAAA,WAAW,EAAE,KAAKC,WAVlB;AAWA,MAAA,YAAY,EAAE,KAAKG,YAXnB;AAYA,MAAA,cAAc,EAAE,KAAKC,cAZrB;AAaA,MAAA,QAAQ,EAAG,KAAKT,QAbhB;AAcA,MAAA,OAAO,EAAG,KAAKxB,KAAL,CAAWQ,OAdrB;AAgBA,MAAA,YAAY,EAAE,KAAK8B,YAhBnB;AAiBA,MAAA,YAAY,EAAE,KAAKC,YAjBnB;AAmBA,MAAA,eAAe,EAAE,KAAKvC,KAAL,CAAWgB,eAnB5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBH,CADD;AAkDH;;AA9jB0B;;AAslB3B,eAAenB,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\nimport ReactCytoscape from 'react-cytoscape';\n\n//import Components\nimport MainUI from './Components/MainUI';\nimport Menu from './Components/Menu';\n\n\n\n//import Test from './Test';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\n//import fuctions from SADFACE\n\nimport {remove_resources_from_nodes, loadSADFace,saveSADFace, delete_resource, get_sd,import_json, add_resource, export_cytoscape,add_resource_metadata} from './lib/Sadface'; \n\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttabs: [],\n\t\t\tlast_number: 0,\n\t\t\ttab_id:\"\",\n            sd: get_sd(),\n            showResourcePane: true,\n            test:{},\n            current_tab: 0,\n            cy_data: null,\n            selected: '',\n            jpg:'',\n            png: '',\n            fileName:'',\n            json: '',\n            current_sadface_doc:'',\n            cy:null,\n            remove_all_tabs: false,\n            resourceType: 'text',\n        };\n\n\n        this.test = this.test.bind(this);\n        this.toggleButton = this.toggleButton.bind(this);\n        this.add_to_tabs_arr =this.add_to_tabs_arr.bind(this);\n        this.download = this.download.bind(this);\n        this.update_resource =this.update_resource.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n        this.loadTabs =this.loadTabs.bind(this);\n        this.get_resource =this.get_resource.bind(this);\n        this.download = this.download.bind(this);\n        this.toggleResourcePane =this.toggleResourcePane.bind(this);\n        this.download_sadface =this.download_sadface.bind(this);\n        this.add_resource_metadata =this.add_resource_metadata.bind(this);\n        this.setActiveTab = this.setActiveTab.bind(this);\n        this.download = this.download.bind(this);\n        this.fileManager = this.fileManager.bind(this);\n        this.loadJSON = this.loadJSON.bind(this);\n\n        //ResourcePane Functions\n        this.add_tab = this.add_tab.bind(this);\n        this.remove_tab =this.remove_tab.bind(this);\n        this.change_title = this.change_title.bind(this);\n        this.change_content =this.change_content.bind(this);\n        this.set_text_resource_content = this.set_text_resource_content.bind(this);\n        this.add_tab_to_tab_array = this.add_tab_to_tab_array.bind(this);\n        this.getType = this.getType.bind(this);\n        this.load_tab = this.load_tab.bind(this);\n        //Menu\n        this.handleSetPng = this.handleSetPng.bind(this);\n        this.handleSetJpg = this.handleSetJpg.bind(this);\n        this.load_demo_argument = this.load_demo_argument.bind(this);\n        this.setFileName = this.setFileName.bind(this);\n\n    }\n\n\n\n\n\n\n\n\n\n    add_to_tabs_arr(tab_id){\n       this.setState(state => {\n          const tabs = state.tabs.concat(tab_id);\n          return {\n             tabs,\n         }}, function () {\n            console.log(\"tabs\");\n        }.bind(this));\n\n   }\n   openAddBoardModal(){\n    this.setState({ boardAddModalShow: true }, function () {\n       console.log(this.state.boardAddModalShow);\n   });\n\n}\n\ncreateNewTab(){\n}\n\n\n\n\n\n\n\nadd_tab(load_id=null){\n    let newTab = {}\n    if (load_id == null) {\n        console.log('load tab null')\n        newTab = add_resource(' ');\n        console.log(newTab, 'newTab');\n        add_resource_metadata(newTab.id, 'title', '');\n\n        newTab.metadata = {title: ''}\n        console.log(newTab, 'newTab with metadata')\n\n\n        localStorage.setItem(\"state\", JSON.stringify(get_sd()));\n        newTab.type = this.state.resourceType;\n        console.log(newTab, 'newtab');\n    }else{ newTab = load_id; }\n    console.log(newTab, 'load tab not null')\n   this.add_tab_to_tab_array(newTab);\n    \n   // var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n  //  console.log(resource_type_idx,'resource_type_idx');\n    //var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n    //newTab.type = resource_type_txt.toLowerCase();\n\n    \n        \n    }\n    \n    add_tab_to_tab_array(newTab){\n\n        let tab_number = '';\n        this.setState({ last_number: this.state.last_number + 1}, function(){\n            tab_number = this.state.last_number;\n            newTab.tab_number = tab_number;\n\n            this.setState(state => {\n                const tabs = this.state.tabs.concat(newTab);\n                return {\n                    tabs,\n                }}, function (){\n                    console.log(this.state.tabs, 'header');\n                    this.setActiveTab(newTab.id);\n                }\n                )\n        });\n    }\ngetType(type){\n    this.setState({resourceType: type}, () =>\n        this.add_tab());\n}\n\n\n\n\n    test(index) {\n        this.setState({\n            current_tab: index\n        });\n        console.log(this.current_tab);\n    }\n\n    setActiveTab(value){\n        this.setState({\n            current_tab: value\n        }, function (){\n            console.log(this.state.current_tab, 'active');\n        });\n\n\n\n    }\n\n    add_resource_metadata(resource_id, key, value) {\n    /*\n    Add metadata, a key:value pair to the resource dict identified\n    by the supplied atom ID.    \n    */\n    if (resource_id && key && value) {\n        this.sate.sd.resources.forEach(function(res) {\n            if(res.id === resource_id) {\n                res.metadata[key] = value;\n            }\n        });\n    }\n}\n\n\n\n\n\n//Menu function\nhandleSetPng(png){\n    this.setState({png: png}, () =>\n        console.log(this.state.png, 'png'));\n}\n\nhandleSetJpg(jpg){\n    this.setState({jpg: jpg}, () =>\n        console.log(this.state.jpg));\n}\n\n\n\n\n\ncomponentDidMount() {\n this.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70,\n\n});\n}\n\nremove_tab(i){\n    delete_resource(this.state.current_tab);\n    remove_resources_from_nodes(this.state.current_tab);\n\n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    \n    if (this.state.tabs.length >= 1 && i != -1){\n\n        this.setState(state =>{\n        const tabs = state.tabs.filter((item, j) => i !==j);\n        return {\n            tabs,\n        };\n    }, () => {    \n        console.log(this.state.tabs.length-1, 'current tabs')\n    });\n\n        let newCurrent = this.state.tabs[this.state.tabs.length-1].id\n        this.setState({current_tab: this.state.tabs.length-1}, () =>\n            console.log(this.state.tabs.length-1, 'current tabs')\n            );\n        \n        console.log(this.state.tabs.length, 'length');\n    }\n    \n\n    \n\n    remove_resources_from_nodes(this.state.current_tab);\n/*\n    delete_resource(current_tab);\n    sd.nodes.forEach((node) => {\n        if (node.type == 'atom') {\n            if (current_tab in node.sources) {\n                delete_source(node.id, current_tab);\n            }\n        }\n    });\n    \n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    if (tabs.length >= 1 && idx != -1)\n    {\n        tabs.splice(idx, 1);\n        current_tab = tabs[tabs.length-1];\n        set_active_tab(current_tab+\"_body\");\n    }\n    */\n};\n\nremove_all_tabs(){\n    this.setState({tabs: []});\n    this.setState({last_number:1});\n\n\n}\n\n\n\n\ntoggleButton(){\n    this.slideout.toggle();\n}\n\n\n\n\n\nfileManager(operation, filetype, tab_id) {\n    /*\n    Write text from tab to file or does a SADFace save operation\n    */\n\n    console.log(operation, filetype, tab_id);\n    if (\"save\" == operation)    {\n        // if it's a txt file\n        if (\"txt\" == filetype) {    \n            if (document.getElementById(\"title_\"+tab_id).value !== '') {\n                var filename = document.getElementById(\"title_\"+tab_id).value+\".txt\";\n            } else {\n                var filename = \"tab\"+tab_id+\"_text.txt\";\n            }\n            var text = document.getElementById(tab_id).value;\n            this.download(filename,text);\n        }\n        \n        // if it's a JSON file\n        if (\"json\" == filetype) {\n           var filename = this.state.fileName;\n           console.log(filename, 'filename');\n            if(filename.length == 0){ filename = \"default\"}\n               saveSADFace(filename, filetype);\n        }\n    }\n    \n    //if it's a load operation\n    if (\"load\" == operation) {\n        // if it's a txt file\n        if (\"txt\" == filetype) {\n            var files = document.getElementById(\"load\"+tab_id).files;\n            var file = files[0];\n            var filename = file.name;\n            document.getElementById(\"title_\"+tab_id).innerText = filename;\n            console.log(file.name);\n            var reader = new FileReader();      \n            reader.onload = function(e) {\n                var content = reader.result;\n                document.getElementById(tab_id).innerText = content;\n                this.update_resource(tab_id, content, filename);\n            }\n            reader.readAsText(file);\n        }\n        // if it's a JSON file\n        if (\"json\" == filetype) {\n            var files = document.getElementById(\"loadJSON\").files;\n            var file = files[0];\n            var reader = loadSADFace(file);\n            reader.onload = function(e) {\n                var result = reader.result;\n            console.log(result, 'result');\n                localStorage.setItem(\"state\",result);\n                this.loadJSON(result);\n                var json = JSON.parse(result);\n                console.log(json, 'json');\n                console.log(json.resources, 'json resource');\n\n                this.setState({remove_all_tabs: !this.state.remove_all_tabs}, () =>\n                    console.log(this.state.remove_all_tabs));\n                this.loadTabs(json.resources);\n            }.bind(this);\n        }\n    }\n}\n\n loadJSON(json_value) {\n    this.setState({json: import_json(json_value)}, () => \n        console.log(this.state.json, 'json'));\n    localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n    this.setState({current_sadface_doc: JSON.stringify(get_sd())}, () =>\n        console.log(this.state.current_sadface_doc, 'current_sadface_doc'));\n    //load any sources in the stored diagram state\n    window.onload = function () {\n        this.loadTabs(this.state.json.resources);\n    };\n    this.setState({cy_data: export_cytoscape(this.state.json)}, () =>\n        console.log(this.state.cy_data, 'cy_data updated'));\n    if(this.state.cy !== null)\n    {\n        this.state.cy.elements().remove();\n        this.state.cy.json({elements: JSON.parse(this.state.cy_data)});\n        //redraw_visualisation();\n    }\n}\n\n\n\ndownload(filename, text) {\n    /*\n    Downloads a file given its filename and its text using utf-8 charset\n    */\n    console.log(\"Downloading \"+filename);\n    var outfile = document.createElement(\"a\");\n    outfile.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text));\n    outfile.setAttribute(\"download\", filename);\n\n    outfile.style.display = \"none\";\n    document.body.appendChild(outfile);\n\n    outfile.click();\n\n    document.body.removeChild(outfile);\n}\n\n\nget_resource(resource_id){\n    /*\n    Retrieve the resource dict identified by the supplied resource ID\n\n    Returns: An resource dict\n    */\n    if(resource_id){\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n        return resource;\n    }\n}\n\nisTab_id(tab){\n    return tab.tab_id\n}\n\n\n\n\n\n\nloadJSON(){\n\n}\n\nloadTabs(tabs) {\n    console.log(tabs, 'tabs');\n   tabs.map((tab) =>\n     this.load_tab(tab),\n     );\n }\n\n\nload_tab(resource) {\n    if (resource != null) {\n        var tab_id = resource.id;\n        this.add_tab(resource);\n      //  this.set_text_resource_title(tab_id, resource.metadata.title);\n      //  this.set_text_resource_content(tab_id, resource.content);\n    }\n}\n\nupdate_resource(resource_id, content, title) {\n    /*\n    Given an ID for an existing resource, update the content and metadata of the resource.\n    Updates the resource in sd;\n    */\n    \n\n    if (resource_id && (content || title)) {\n        console.log(\"update resource\");\n\n        var resource;\n        const index = this.state.tabs.findIndex((tab) => tab.tab_id === resource_id);\n        const tabs = [...this.state.tabs]\n        resource = tabs[index];\n\n        if (resource !== null && resource !== undefined) {\n            if (content !== null && content !== undefined) {\n                resource.content = content;\n            }\n            if (title !== null && title !== undefined) {\n                resource.title = title;\n            }\n          /*  this.state.sd.resources.forEach((res) => {\n                if(res.id === resource_id) {\n                    res = resource;\n                }\n            });*/\n        } else {\n            throw (\"Could not update the resource: \"+resource_id);\n        }\n        this.setState({tabs}, () =>{\n            console.log(\"update tabs\");\n        });\n    }\n}\n\n//Resource Pane Functions\nchange_title(tab_id, val) {\n    console.log(\"change title\" +tab_id+val);\n    this.set_text_resource_title(tab_id, val)\n}\n\nset_text_resource_title(tab_id, title){\n    console.log(\"set text resource title\" +tab_id + title)\n    this.update_resource(tab_id, null, title);\n//    this.update_local_storage();\n}\n\nchange_content(tab_id, val){\n    console.log(\"change content\" + tab_id + val);\n    this.set_text_resource_content(tab_id, val);\n}\n\nset_text_resource_content(tab_id, text){\n    this.update_resource(tab_id, text, null);\n    //update_local_storage();\n}\n\n// Slide In Functions\ntoggleResourcePane(){\n    this.setState({showResourcePane: !this.state.showResourcePane})\n}\n\n\nclear_local_storage() {\n    localStorage.clear();\n    window.location.reload(false);\n}\n\n setFileName(file_name){\n    console.log('filename APP');\n    this.setState({fileName: file_name}, () => \n      console.log(this.state.fileName, 'filename app'));\n  }\n\n\n\n\ndownload_sadface(){\n    console.log(\"download_sadface\")\n}\n\n\n\nload_demo_argument(){\n   var demo_sadface_doc = \"{\\\"analyst_email\\\":\\\"40170722@live.napier.ac.uk\\\",\\\"analyst_name\\\":\\\"Nathan Mair\\\",\\\"created\\\":\\\"2018-02-23T02:27:36\\\",\\\"edges\\\":[{\\\"id\\\":\\\"a1s1\\\",\\\"source_id\\\":\\\"a1\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a2s1\\\",\\\"source_id\\\":\\\"a2\\\",\\\"target_id\\\":\\\"s1\\\"},{\\\"id\\\":\\\"a3s2\\\",\\\"source_id\\\":\\\"a3\\\",\\\"target_id\\\":\\\"s2\\\"},{\\\"id\\\":\\\"s2a5\\\",\\\"source_id\\\":\\\"s2\\\",\\\"target_id\\\":\\\"a5\\\"},{\\\"id\\\":\\\"s1a4\\\",\\\"source_id\\\":\\\"s1\\\",\\\"target_id\\\":\\\"a4\\\"},{\\\"id\\\":\\\"a4s2\\\",\\\"source_id\\\":\\\"a4\\\",\\\"target_id\\\":\\\"s2\\\"}],\\\"edited\\\":\\\"2018-02-23T02:27:36\\\",\\\"id\\\":\\\"94a975db-25ae-4d25-93cc-1c07c932e2f9\\\",\\\"metadata\\\":{},\\\"nodes\\\":[{\\\"id\\\":\\\"a1\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"Every person is going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a2\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are a person\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a3\\\",\\\"metadata\\\":{\\\"test\\\":\\\"test\\\"},\\\"sources\\\":[],\\\"text\\\":\\\"If you are going to die then you should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a4\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You are going to die\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"a5\\\",\\\"metadata\\\":{},\\\"sources\\\":[],\\\"text\\\":\\\"You should treasure every moment\\\",\\\"type\\\":\\\"atom\\\"},{\\\"id\\\":\\\"s1\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"},{\\\"id\\\":\\\"s2\\\",\\\"name\\\":\\\"Support\\\",\\\"type\\\":\\\"scheme\\\"}],\\\"resources\\\": []}\";\n\n    localStorage.setItem(\"state\",demo_sadface_doc);\n\n    this.setState({cy_data: export_cytoscape(import_json(demo_sadface_doc))}, () =>\n        console.log(this.state.cy_data, 'cy_data'));\n}\n\n\nrender(){\n\n    return (\n    \t<div>\n\n\n\n    \t<Menu \n        toggleResourcePane={this.toggleResourcePane}\n        mp_reset={this.mp_reset}\n        load_demo_argument={this.load_demo_argument}\n        set_analyst_name={this.set_analyst_name}\n        set_analyst_email={this.set_analyst_email}\n        download_sadface={this.download_sadface}\n        download_png={this.download_png}\n        download_jpg={this.download_jpg}\n        setFileName={this.setFileName}\n        fileManager={this.fileManager}\n\n        png={this.state.png}\n        jpg={this.state.jpg}\n\n        />\n\n        <MainUI\n        toggleSlideIn={() => this.toggleButton()}\n        addTab = {() => this.add_tab()}\n        tabs = {this.state.tabs}\n        getType={this.getType}\n        remove_tab={this.remove_tab}\n        fileManager={this.fileManager}\n        showResourcePane={this.state.showResourcePane}\n        current_tab={this.state.current_tab}\n        setActiveTab={this.setActiveTab}\n        fileManager={this.fileManager}\n        change_title={this.change_title}\n        change_content={this.change_content}\n        loadTabs= {this.loadTabs}\n        cy_data= {this.state.cy_data}\n\n        handleSetPng={this.handleSetPng}\n        handleSetJpg={this.handleSetJpg}\n\n        remove_all_tabs={this.state.remove_all_tabs}\n\n\n\n        />\n\n        </div>\n\n        );\n}\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}