{"ast":null,"code":"var _jsxFileName = \"/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/App.js\";\nimport React, { Component } from 'react';\nimport Slideout from 'slideout';\nimport MainUI from './Components/MainUI';\nimport SlideInTrigger from './Components/SlideInTrigger';\nimport SlideIn from './Components/SlideIn';\nimport Modal from './Components/Modal';\nimport './CSS/monkeypuzzle.css'; //import './CSS/font-awesome.min.css';\n\nimport './CSS/cytoscape-context-menus.css'; //import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\nvar FontAwesome = require('react-fontawesome');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.add_tab = (load_id = null) => {\n      console.log(\"add tab\");\n\n      if (load_id == null) {\n        var new_resource = this.add_resource(' ');\n        this.setState.tab_id = new_resource.id; //  add_resource_metadata(tab_id, 'title', '');\n        //localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n      } else {\n        this.state.tab_id = load_id;\n      }\n\n      this.add_resource_header(); //  var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n      //  var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n      //  if (resource_type_txt.toLowerCase() === \"text\") { add_text_resource_body(tab_id); }\n      //  set_active_tab(tab_id+\"_body\");\n\n      return this.state.tab_id;\n    };\n\n    this.newResourceModal = {\n      trigger: {\n        triggerText: 'MMODALbutton',\n        className: 'add_tab_button'\n      },\n      title: 'New Resource Pane',\n      content: React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Select a resource type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"resource_type\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Text\"))),\n      footer: {\n        className: 'btn btn-primary',\n        value: 'Add'\n      }\n    };\n    this.state = {\n      tabs: [{\n        tab_id: 1\n      }, {\n        tab_id: 2\n      }, {\n        tab_id: 3\n      }],\n      last_number: 1,\n      tab_id: ''\n    };\n    this.add_tab = this.add_tab.bind(this);\n    this.toggleButton = this.toggleButton.bind(this);\n    this.add_resource = this.add_resource.bind(this);\n    this.add_resource_header = this.add_resource_header.bind(this);\n  }\n\n  add_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n     Returns: the new resource dict\n    */\n    if (content) {\n      var res = this.new_resource(content); // sd.resources.push(res);\n\n      return res;\n    }\n  }\n\n  add_resource_header() {\n    var tab_number = this.next_number();\n    this.setState({\n      tabs: this.state.tabs.concat(\"1\")\n    });\n    var resource_pane_tab_head = document.createElement(\"button\");\n    console.log(this.state.tabs); // var node = document.createTextNode\n    //  $(`\n    //      <button id=\"`+ tab_id + `_btn\" class=\"tablinks\" \n    //         onclick=\"set_active_tab('` + tab_id + `_body')\">` + \n    //         tab_number + `</button>\n    //`);\n    // $(\".resource_pane_tab_head\").append(resource_pane_tab_head);\n  }\n\n  createNewTab() {}\n\n  next_number() {\n    return this.state.last_number++;\n  }\n\n  new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n     The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n     Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n      var new_resource = {\n        \"id\": this.new_uuid(),\n        \"content\": content,\n        \"type\": \"text\",\n        \"metadata\": {}\n      };\n      return new_resource;\n    }\n  } //uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n\n\n  new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n     Returns: A string\n    */\n    return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n  }\n\n  componentDidMount() {\n    this.slideout = new Slideout({\n      'panel': document.getElementById('panel'),\n      'menu': document.getElementById('menu'),\n      \"fx\": \"ease\",\n      \"side\": \"right\",\n      \"duration\": 500,\n      \"padding\": 256,\n      \"tolerance\": 70\n    });\n  }\n\n  toggleButton() {\n    this.slideout.toggle();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.add_tab(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"NEW Button\"), React.createElement(Modal, {\n      modalProps: this.newResourceModal,\n      onClick: () => this.add_tab(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(SlideIn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(MainUI, {\n      toggleSlideIn: () => this.toggleButton(),\n      addTab: () => this.add_tab(),\n      tabs: this.state.tabs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/gareth/Desktop/Sean/monkeypuzzle/monkeypuzzle/src/App.js"],"names":["React","Component","Slideout","MainUI","SlideInTrigger","SlideIn","Modal","FontAwesome","require","App","constructor","props","add_tab","load_id","console","log","new_resource","add_resource","setState","tab_id","id","state","add_resource_header","newResourceModal","trigger","triggerText","className","title","content","footer","value","tabs","last_number","bind","toggleButton","res","tab_number","next_number","concat","resource_pane_tab_head","document","createElement","createNewTab","new_uuid","replace","c","crypto","getRandomValues","Uint8Array","toString","componentDidMount","slideout","getElementById","toggle","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Slideout from 'slideout';\n\n\nimport MainUI from './Components/MainUI';\nimport SlideInTrigger from './Components/SlideInTrigger';\nimport SlideIn from './Components/SlideIn';\n\nimport Modal from './Components/Modal';\n\n\nimport './CSS/monkeypuzzle.css';\n//import './CSS/font-awesome.min.css';\nimport './CSS/cytoscape-context-menus.css';\n//import './CSS/jquery.qtip.min.css';\n//import './CSS/bootstrap.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CSS/App.css';\n\n\nvar FontAwesome = require('react-fontawesome');\n\n\n\n\nclass App extends Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\ttabs: [{tab_id:1}, {tab_id:2},{tab_id:3}],\n\t\t\tlast_number: 1,\n\t\t\ttab_id:'',\n\n\n\t\t};\n\n\t\tthis.add_tab = this.add_tab.bind(this);\n\t\tthis.toggleButton = this.toggleButton.bind(this);\n\t\tthis.add_resource =this.add_resource.bind(this);\n\t\tthis.add_resource_header = this.add_resource_header.bind(this);\n\t}\n\n\tadd_resource(content) {\n    /*\n    Create a new resource dict using the supplied content string\n    then add to the resourses list of the sadface doc\n\n    Returns: the new resource dict\n    */\n    if (content) {\n        var res = this.new_resource(content);\n       // sd.resources.push(res);\n        return res;\n    }\n}\n\n add_resource_header() {\n  \tvar tab_number = this.next_number();\n    this.setState({\n  \t\ttabs: this.state.tabs.concat(\"1\")\n\t})\n    var resource_pane_tab_head = document.createElement(\"button\");\n    console.log(this.state.tabs);\n   // var node = document.createTextNode\n  //  $(`\n  //      <button id=\"`+ tab_id + `_btn\" class=\"tablinks\" \n   //         onclick=\"set_active_tab('` + tab_id + `_body')\">` + \n   //         tab_number + `</button>\n    //`);\n\n   // $(\".resource_pane_tab_head\").append(resource_pane_tab_head);\n}\n\ncreateNewTab(){\n\n}\n\n next_number(){ return this.state.last_number++; }\n\n\t\n\n\tadd_tab=(load_id=null)=>{\n\t\tconsole.log(\"add tab\");\n\n\t\tif (load_id == null) {\n        var new_resource = this.add_resource(' ');\n    \tthis.setState.tab_id = new_resource.id;\n\t  //  add_resource_metadata(tab_id, 'title', '');\n    \t//localStorage.setItem(\"state\",JSON.stringify(get_sd()));\n\t} \n    else { this.state.tab_id = load_id; }\n\n    this.add_resource_header();\n\n  //  var resource_type_idx = document.getElementById(\"resource_type\").options.selectedIndex;\n  //  var resource_type_txt = document.getElementById(\"resource_type\").options[resource_type_idx].text;\n  //  if (resource_type_txt.toLowerCase() === \"text\") { add_text_resource_body(tab_id); }\n\n  //  set_active_tab(tab_id+\"_body\");\n    return this.state.tab_id\n\n\t}\n\n\t new_resource(content) {\n    /*\n    Given the supplied content (String), create a new resource dict\n\n    The arguments that SADFace describes are either constructed directly in a tool that writes\n    them to this format, or else are sourced from elsewhere, e.g. an argumentative text or\n    webpage, or else perhaps another medium, such as audio or video. Currently SADFace supports\n    textual resources which are stored in the content key. Optionally a \n        \"url\":\"some web location\"\n    pair can be added to the metadata to indicate a specific web location. Alternatively:\n        \"doi\":\"digital object identifier\" - resolvable by dx.doi.org\n        \"magnet-link\":\"a torrent file\"\n        \"isbn\":\"for books\"\n    Metadata may also store additional bibliographic or referencing/citation information\n    as defined in bibtex formats.\n\n    Returns: A dict representing the new SADFace resource\n    */\n    if (content) {\n        var new_resource = {\"id\":this.new_uuid(), \"content\":content, \"type\":\"text\", \"metadata\":{}};\n        return new_resource;\n    }\n}\n\n//uuid function from https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n new_uuid() {\n    /*\n    Utility method to generate a new universally unique ID. Used througout to uniquely\n    identify various items such as atoms, schemes, resources, & edges\n\n    Returns: A string\n    */\n    return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>\n        (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\n    );\n}\n\n \tcomponentDidMount() {\n  \tthis.slideout = new Slideout({\n    'panel': document.getElementById('panel'),\n    'menu': document.getElementById('menu'),\n    \"fx\": \"ease\",\n    \"side\": \"right\",\n    \"duration\": 500,\n    \"padding\": 256,\n    \"tolerance\": 70\n\n  });\n}\n\n\ntoggleButton(){\n        this.slideout.toggle();\n\t}\n\n\t  newResourceModal = {\n    trigger: {\n      triggerText:'MMODALbutton',\n      className: 'add_tab_button',\n    },\n    \n    title: 'New Resource Pane',\n    content:  <div className=\"modal-body\">\n                <p>Select a resource type</p>\n                <select className=\"form-control\" id=\"resource_type\">\n                    <option>Text</option>\n                </select>\n              </div>,\n    footer: {\n      className: 'btn btn-primary',\n      value: 'Add',\n    }\n\n  };\n\n\n \n  render(){\n\n    return (\n    \t<div>\n    \t<button\n    \t\tonClick = {() => this.add_tab()}\n    \t>\n    \tNEW Button\n    \t</button>\n\t\n\t    \t <Modal \n                modalProps = {this.newResourceModal}\n                onClick = {() => this.add_tab()}\n                />\n\n    \t<SlideIn />\n\n    \t<MainUI\n    \t\ttoggleSlideIn={() => this.toggleButton()}\n    \t\taddTab = {() => this.add_tab()}\n    \t\ttabs = {this.state.tabs}\n    \t\t/>\n\n    \n\n\n \n   </div>\n\n      );\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}